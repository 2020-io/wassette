name: Rust

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - 'LICENSE'
      - 'MAINTAINERS'
      - 'NOTICE'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - 'LICENSE'
      - 'MAINTAINERS'
      - 'NOTICE'

env:
  CARGO_TERM_COLOR: always

jobs:
  license-headers:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Verify Rust license headers
      shell: bash
      run: |
        set -euo pipefail
        bash ./scripts/copyright.sh
        # If the script made any changes to Rust files, fail and list them
        if git diff --name-only -- '*.rs' | grep -q .; then
          echo "The following Rust files are missing license headers:" >&2
          git diff --name-only -- '*.rs' >&2
          echo >&2
          echo "Please run ./scripts/copyright.sh locally and commit the changes." >&2
          exit 1
        fi

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - run: ./scripts/install-protobuf.sh
      shell: bash
    - uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48 # v1.13.0
      with:
        components: rustfmt, clippy
    - run: 
        # needed to run rustfmt in nightly toolchain
        rustup toolchain install nightly --component rustfmt
    - uses: ./.github/actions/rust-cache
    - name: Run fmt
      run: cargo +nightly fmt --all -- --check
    - name: Run Clippy
      run: cargo clippy --verbose --workspace
  
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0
    - run: ./scripts/install-protobuf.sh
      shell: bash
    - uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48 # v1.13.0
    - run: rustup target add wasm32-wasip2
    - uses: ./.github/actions/rust-cache
    - name: Build
      run: just build
    - name: Run tests
      run: just test
    - name: Upload artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: wassette
        path: bin/wassette

  deps:
    name: unused dependencies
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48 # v1.13.0
    - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
    - name: Check unused dependencies
      uses: bnjbvr/cargo-machete@b54422fa3319b3cac180f6030b663fe57af51635 # v0.8.0
    
  spelling:
    name: spell check with typos
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Spell Check Repo
      uses: crate-ci/typos@52bd719c2c91f9d676e2aa359fc8e0db8925e6d8 # v1.35.3
  
  linkChecker:
    name: link checker
    permissions:
      contents: read
    if: github.repository == 'microsoft/wassette'
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: lycheeverse/lychee-action@5c4ee84814c983aa7164eaee476f014e53ff3963 # v2.5.0
      with:
        fail: false # don't fail the build on broken links
        format: markdown
        jobSummary: true

  coverage:
    name: code coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0
    - run: ./scripts/install-protobuf.sh
      shell: bash
    - uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48 # v1.13.0
      with:
        components: llvm-tools-preview
    - run: rustup target add wasm32-wasip2
    - uses: ./.github/actions/rust-cache
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@331a600f1b10a3fed8dc56f925012bede91ae51f # v2.47.11
      with:
        tool: cargo-llvm-cov
    - name: Build project before coverage
      run: just build
    - name: Generate code coverage
      run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info --ignore-run-fail --lib
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@c16abc29c95fcf9174b58eb7e1abf4c866893bc8 # v5.1.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: lcov.info
        fail_ci_if_error: false
