(function() {
    const t = document.createElement("link").relList;
    if (t && t.supports && t.supports("modulepreload")) return;
    for (const R of document.querySelectorAll('link[rel="modulepreload"]')) f(R);
    new MutationObserver(R => {
        for (const E of R)
            if (E.type === "childList")
                for (const C of E.addedNodes) C.tagName === "LINK" && C.rel === "modulepreload" && f(C)
    }).observe(document, {
        childList: !0,
        subtree: !0
    });

    function p(R) {
        const E = {};
        return R.integrity && (E.integrity = R.integrity), R.referrerPolicy && (E.referrerPolicy = R.referrerPolicy), R.crossOrigin === "use-credentials" ? E.credentials = "include" : R.crossOrigin === "anonymous" ? E.credentials = "omit" : E.credentials = "same-origin", E
    }

    function f(R) {
        if (R.ep) return;
        R.ep = !0;
        const E = p(R);
        fetch(R.href, E)
    }
})();

function consolePrinter({
    stdout: w,
    stderr: t
} = {
    stdout: console.log,
    stderr: console.warn
}) {
    let p, f;

    function R() {
        if (typeof p > "u") throw new Error("Memory is not set");
        return (f === void 0 || f.buffer.byteLength === 0) && (f = new DataView(p.buffer)), f
    }
    const E = new TextDecoder;
    return {
        addToImports(C) {
            const r = C.wasi_snapshot_preview1,
                s = r.fd_write;
            r.fd_write = (u, _, v, D) => {
                if (u !== 1 && u !== 2) return s(u, _, v, D);
                const d = R(),
                    a = Array.from({
                        length: v
                    }, (b, A) => {
                        const n = _ + A * 8,
                            T = d.getUint32(n, !0),
                            S = d.getUint32(n + 4, !0);
                        return new Uint8Array(p.buffer, T, S)
                    });
                let o = 0,
                    i = "";
                for (const b of a) i += E.decode(b), o += b.byteLength;
                return d.setUint32(D, o, !0), (u === 1 ? w : t)(i), 0
            };
            const c = r.fd_filestat_get;
            r.fd_filestat_get = (u, _) => {
                if (u !== 1 && u !== 2) return c(u, _);
                const v = R(),
                    D = c(u, _);
                if (D !== 0) return D;
                const d = _ + 0;
                return v.setUint8(d, 2), 0
            };
            const g = r.fd_fdstat_get;
            r.fd_fdstat_get = (u, _) => {
                if (u !== 1 && u !== 2) return g(u, _);
                const v = R(),
                    D = _ + 0;
                v.setUint8(D, 2);
                const d = _ + 8;
                return v.setBigUint64(d, BigInt(64), !0), 0
            }
        },
        setMemory(C) {
            p = C
        }
    }
}
let DATA_VIEW = new DataView(new ArrayBuffer);

function data_view(w) {
    return DATA_VIEW.buffer !== w.buffer && (DATA_VIEW = new DataView(w.buffer)), DATA_VIEW
}

function to_uint32(w) {
    return w >>> 0
}
const UTF8_DECODER = new TextDecoder("utf-8"),
    UTF8_ENCODER = new TextEncoder("utf-8");

function utf8_encode(w, t, p) {
    if (typeof w != "string") throw new TypeError("expected a string");
    if (w.length === 0) return UTF8_ENCODED_LEN = 0, 1;
    let f = 0,
        R = 0,
        E = 0;
    for (; w.length > 0;) {
        R = t(R, f, 1, f + w.length), f += w.length;
        const {
            read: C,
            written: r
        } = UTF8_ENCODER.encodeInto(w, new Uint8Array(p.buffer, R + E, f - E));
        E += r, w = w.slice(C)
    }
    return f > E && (R = t(R, f, 1, E)), UTF8_ENCODED_LEN = E, R
}
let UTF8_ENCODED_LEN = 0;
class Slab {
    constructor() {
        this.list = [], this.head = 0
    }
    insert(t) {
        this.head >= this.list.length && this.list.push({
            next: this.list.length + 1,
            val: void 0
        });
        const p = this.head,
            f = this.list[p];
        return this.head = f.next, f.next = -1, f.val = t, p
    }
    get(t) {
        if (t >= this.list.length) throw new RangeError("handle index not valid");
        const p = this.list[t];
        if (p.next === -1) return p.val;
        throw new RangeError("handle index not valid")
    }
    remove(t) {
        const p = this.get(t),
            f = this.list[t];
        return f.val = void 0, f.next = this.head, this.head = t, p
    }
}

function throw_invalid_bool() {
    throw new RangeError("invalid variant discriminant for bool")
}
class RbAbiGuest {
    constructor() {
        this._resource0_slab = new Slab
    }
    addToImports(t) {
        "canonical_abi" in t || (t.canonical_abi = {}), t.canonical_abi["resource_drop_rb-abi-value"] = p => {
            this._resource0_slab.remove(p).drop()
        }, t.canonical_abi["resource_clone_rb-abi-value"] = p => {
            const f = this._resource0_slab.get(p);
            return this._resource0_slab.insert(f.clone())
        }, t.canonical_abi["resource_get_rb-abi-value"] = p => this._resource0_slab.get(p)._wasm_val, t.canonical_abi["resource_new_rb-abi-value"] = p => (this._registry0, this._resource0_slab.insert(new RbAbiValue(p, this)))
    }
    async instantiate(t, p) {
        if (p = p || {}, this.addToImports(p), t instanceof WebAssembly.Instance) this.instance = t;
        else if (t instanceof WebAssembly.Module) this.instance = await WebAssembly.instantiate(t, p);
        else if (t instanceof ArrayBuffer || t instanceof Uint8Array) {
            const {
                instance: f
            } = await WebAssembly.instantiate(t, p);
            this.instance = f
        } else {
            const {
                instance: f
            } = await WebAssembly.instantiateStreaming(t, p);
            this.instance = f
        }
        this._exports = this.instance.exports, this._registry0 = new FinalizationRegistry(this._exports["canonical_abi_drop_rb-abi-value"])
    }
    rubyShowVersion() {
        this._exports["ruby-show-version: func() -> ()"]()
    }
    rubyInit(t) {
        const p = this._exports.memory,
            f = this._exports.cabi_realloc,
            R = t,
            E = R.length,
            C = f(0, 0, 4, E * 8);
        for (let r = 0; r < R.length; r++) {
            const s = R[r],
                c = C + r * 8,
                g = utf8_encode(s, f, p),
                u = UTF8_ENCODED_LEN;
            data_view(p).setInt32(c + 4, u, !0), data_view(p).setInt32(c + 0, g, !0)
        }
        this._exports["ruby-init: func(args: list<string>) -> ()"](C, E)
    }
    rubyInitLoadpath() {
        this._exports["ruby-init-loadpath: func() -> ()"]()
    }
    rbEvalStringProtect(t) {
        const p = this._exports.memory,
            f = this._exports.cabi_realloc,
            R = utf8_encode(t, f, p),
            E = UTF8_ENCODED_LEN,
            C = this._exports["rb-eval-string-protect: func(str: string) -> tuple<handle<rb-abi-value>, s32>"](R, E);
        return [this._resource0_slab.remove(data_view(p).getInt32(C + 0, !0)), data_view(p).getInt32(C + 4, !0)]
    }
    rbFuncallvProtect(t, p, f) {
        const R = this._exports.memory,
            E = this._exports.cabi_realloc,
            C = t;
        if (!(C instanceof RbAbiValue)) throw new TypeError("expected instance of RbAbiValue");
        const r = f,
            s = r.length,
            c = E(0, 0, 4, s * 4);
        for (let u = 0; u < r.length; u++) {
            const _ = r[u],
                v = c + u * 4,
                D = _;
            if (!(D instanceof RbAbiValue)) throw new TypeError("expected instance of RbAbiValue");
            data_view(R).setInt32(v + 0, this._resource0_slab.insert(D.clone()), !0)
        }
        const g = this._exports["rb-funcallv-protect: func(recv: handle<rb-abi-value>, mid: u32, args: list<handle<rb-abi-value>>) -> tuple<handle<rb-abi-value>, s32>"](this._resource0_slab.insert(C.clone()), to_uint32(p), c, s);
        return [this._resource0_slab.remove(data_view(R).getInt32(g + 0, !0)), data_view(R).getInt32(g + 4, !0)]
    }
    rbIntern(t) {
        const p = this._exports.memory,
            f = this._exports.cabi_realloc,
            R = utf8_encode(t, f, p),
            E = UTF8_ENCODED_LEN;
        return this._exports["rb-intern: func(name: string) -> u32"](R, E) >>> 0
    }
    rbErrinfo() {
        const t = this._exports["rb-errinfo: func() -> handle<rb-abi-value>"]();
        return this._resource0_slab.remove(t)
    }
    rbClearErrinfo() {
        this._exports["rb-clear-errinfo: func() -> ()"]()
    }
    rstringPtr(t) {
        const p = this._exports.memory,
            f = t;
        if (!(f instanceof RbAbiValue)) throw new TypeError("expected instance of RbAbiValue");
        const R = this._exports["rstring-ptr: func(value: handle<rb-abi-value>) -> string"](this._resource0_slab.insert(f.clone())),
            E = data_view(p).getInt32(R + 0, !0),
            C = data_view(p).getInt32(R + 4, !0),
            r = UTF8_DECODER.decode(new Uint8Array(p.buffer, E, C));
        return this._exports["cabi_post_rstring-ptr"](R), r
    }
    rbVmBugreport() {
        this._exports["rb-vm-bugreport: func() -> ()"]()
    }
    rbGcEnable() {
        const p = this._exports["rb-gc-enable: func() -> bool"]();
        return p == 0 ? !1 : p == 1 ? !0 : throw_invalid_bool()
    }
    rbGcDisable() {
        const p = this._exports["rb-gc-disable: func() -> bool"]();
        return p == 0 ? !1 : p == 1 ? !0 : throw_invalid_bool()
    }
    rbSetShouldProhibitRewind(t) {
        const f = this._exports["rb-set-should-prohibit-rewind: func(new-value: bool) -> bool"](t ? 1 : 0);
        return f == 0 ? !1 : f == 1 ? !0 : throw_invalid_bool()
    }
}
class RbAbiValue {
    constructor(t, p) {
        this._wasm_val = t, this._obj = p, this._refcnt = 1, p._registry0.register(this, t, this)
    }
    clone() {
        return this._refcnt += 1, this
    }
    drop() {
        if (this._refcnt -= 1, this._refcnt !== 0) return;
        this._obj._registry0.unregister(this);
        const t = this._obj._exports["canonical_abi_drop_rb-abi-value"],
            p = this._wasm_val;
        delete this._obj, delete this._refcnt, delete this._wasm_val, t(p)
    }
}

function addRbJsAbiHostToImports(w, t, p) {
    "rb-js-abi-host" in w || (w["rb-js-abi-host"] = {}), w["rb-js-abi-host"]["eval-js: func(code: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"] = function(R, E, C) {
        const r = p("memory"),
            s = R,
            c = E,
            g = UTF8_DECODER.decode(new Uint8Array(r.buffer, s, c)),
            _ = t.evalJs(g);
        switch (_.tag) {
            case "success": {
                const v = _.val;
                data_view(r).setInt8(C + 0, 0, !0), data_view(r).setInt32(C + 4, f.insert(v), !0);
                break
            }
            case "failure": {
                const v = _.val;
                data_view(r).setInt8(C + 0, 1, !0), data_view(r).setInt32(C + 4, f.insert(v), !0);
                break
            }
            default:
                throw new RangeError("invalid variant specified for JsAbiResult")
        }
    }, w["rb-js-abi-host"]["is-js: func(value: handle<js-abi-value>) -> bool"] = function(R) {
        return t.isJs(f.get(R)) ? 1 : 0
    }, w["rb-js-abi-host"]["instance-of: func(value: handle<js-abi-value>, klass: handle<js-abi-value>) -> bool"] = function(R, E) {
        return t.instanceOf(f.get(R), f.get(E)) ? 1 : 0
    }, w["rb-js-abi-host"]["global-this: func() -> handle<js-abi-value>"] = function() {
        const R = t.globalThis();
        return f.insert(R)
    }, w["rb-js-abi-host"]["int-to-js-number: func(value: s32) -> handle<js-abi-value>"] = function(R) {
        const E = t.intToJsNumber(R);
        return f.insert(E)
    }, w["rb-js-abi-host"]["float-to-js-number: func(value: float64) -> handle<js-abi-value>"] = function(R) {
        const E = t.floatToJsNumber(R);
        return f.insert(E)
    }, w["rb-js-abi-host"]["string-to-js-string: func(value: string) -> handle<js-abi-value>"] = function(R, E) {
        const C = p("memory"),
            r = R,
            s = E,
            c = UTF8_DECODER.decode(new Uint8Array(C.buffer, r, s)),
            g = t.stringToJsString(c);
        return f.insert(g)
    }, w["rb-js-abi-host"]["bool-to-js-bool: func(value: bool) -> handle<js-abi-value>"] = function(R) {
        const E = R,
            C = t.boolToJsBool(E == 0 ? !1 : E == 1 ? !0 : throw_invalid_bool());
        return f.insert(C)
    }, w["rb-js-abi-host"]["proc-to-js-function: func(value: u32) -> handle<js-abi-value>"] = function(R) {
        const E = t.procToJsFunction(R >>> 0);
        return f.insert(E)
    }, w["rb-js-abi-host"]["rb-object-to-js-rb-value: func(raw-rb-abi-value: u32) -> handle<js-abi-value>"] = function(R) {
        const E = t.rbObjectToJsRbValue(R >>> 0);
        return f.insert(E)
    }, w["rb-js-abi-host"]["js-value-to-string: func(value: handle<js-abi-value>) -> string"] = function(R, E) {
        const C = p("memory"),
            r = p("cabi_realloc"),
            s = t.jsValueToString(f.get(R)),
            c = utf8_encode(s, r, C),
            g = UTF8_ENCODED_LEN;
        data_view(C).setInt32(E + 4, g, !0), data_view(C).setInt32(E + 0, c, !0)
    }, w["rb-js-abi-host"]["js-value-to-integer: func(value: handle<js-abi-value>) -> variant { as-float(float64), bignum(string) }"] = function(R, E) {
        const C = p("memory"),
            r = p("cabi_realloc"),
            c = t.jsValueToInteger(f.get(R));
        switch (c.tag) {
            case "as-float": {
                const g = c.val;
                data_view(C).setInt8(E + 0, 0, !0), data_view(C).setFloat64(E + 8, +g, !0);
                break
            }
            case "bignum": {
                const g = c.val;
                data_view(C).setInt8(E + 0, 1, !0);
                const u = utf8_encode(g, r, C),
                    _ = UTF8_ENCODED_LEN;
                data_view(C).setInt32(E + 12, _, !0), data_view(C).setInt32(E + 8, u, !0);
                break
            }
            default:
                throw new RangeError("invalid variant specified for RawInteger")
        }
    }, w["rb-js-abi-host"]["export-js-value-to-host: func(value: handle<js-abi-value>) -> ()"] = function(R) {
        t.exportJsValueToHost(f.get(R))
    }, w["rb-js-abi-host"]["import-js-value-from-host: func() -> handle<js-abi-value>"] = function() {
        const R = t.importJsValueFromHost();
        return f.insert(R)
    }, w["rb-js-abi-host"]["js-value-typeof: func(value: handle<js-abi-value>) -> string"] = function(R, E) {
        const C = p("memory"),
            r = p("cabi_realloc"),
            s = t.jsValueTypeof(f.get(R)),
            c = utf8_encode(s, r, C),
            g = UTF8_ENCODED_LEN;
        data_view(C).setInt32(E + 4, g, !0), data_view(C).setInt32(E + 0, c, !0)
    }, w["rb-js-abi-host"]["js-value-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool"] = function(R, E) {
        return t.jsValueEqual(f.get(R), f.get(E)) ? 1 : 0
    }, w["rb-js-abi-host"]["js-value-strictly-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool"] = function(R, E) {
        return t.jsValueStrictlyEqual(f.get(R), f.get(E)) ? 1 : 0
    }, w["rb-js-abi-host"]["reflect-apply: func(target: handle<js-abi-value>, this-argument: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"] = function(R, E, C, r, s) {
        const c = p("memory"),
            g = r,
            u = C,
            _ = [];
        for (let d = 0; d < g; d++) {
            const a = u + d * 4;
            _.push(f.get(data_view(c).getInt32(a + 0, !0)))
        }
        const D = t.reflectApply(f.get(R), f.get(E), _);
        switch (D.tag) {
            case "success": {
                const d = D.val;
                data_view(c).setInt8(s + 0, 0, !0), data_view(c).setInt32(s + 4, f.insert(d), !0);
                break
            }
            case "failure": {
                const d = D.val;
                data_view(c).setInt8(s + 0, 1, !0), data_view(c).setInt32(s + 4, f.insert(d), !0);
                break
            }
            default:
                throw new RangeError("invalid variant specified for JsAbiResult")
        }
    }, w["rb-js-abi-host"]["reflect-construct: func(target: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> handle<js-abi-value>"] = function(R, E, C) {
        const r = p("memory"),
            s = C,
            c = E,
            g = [];
        for (let _ = 0; _ < s; _++) {
            const v = c + _ * 4;
            g.push(f.get(data_view(r).getInt32(v + 0, !0)))
        }
        const u = t.reflectConstruct(f.get(R), g);
        return f.insert(u)
    }, w["rb-js-abi-host"]["reflect-delete-property: func(target: handle<js-abi-value>, property-key: string) -> bool"] = function(R, E, C) {
        const r = p("memory"),
            s = E,
            c = C,
            g = UTF8_DECODER.decode(new Uint8Array(r.buffer, s, c));
        return t.reflectDeleteProperty(f.get(R), g) ? 1 : 0
    }, w["rb-js-abi-host"]["reflect-get: func(target: handle<js-abi-value>, property-key: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"] = function(R, E, C, r) {
        const s = p("memory"),
            c = E,
            g = C,
            u = UTF8_DECODER.decode(new Uint8Array(s.buffer, c, g)),
            v = t.reflectGet(f.get(R), u);
        switch (v.tag) {
            case "success": {
                const D = v.val;
                data_view(s).setInt8(r + 0, 0, !0), data_view(s).setInt32(r + 4, f.insert(D), !0);
                break
            }
            case "failure": {
                const D = v.val;
                data_view(s).setInt8(r + 0, 1, !0), data_view(s).setInt32(r + 4, f.insert(D), !0);
                break
            }
            default:
                throw new RangeError("invalid variant specified for JsAbiResult")
        }
    }, w["rb-js-abi-host"]["reflect-get-own-property-descriptor: func(target: handle<js-abi-value>, property-key: string) -> handle<js-abi-value>"] = function(R, E, C) {
        const r = p("memory"),
            s = E,
            c = C,
            g = UTF8_DECODER.decode(new Uint8Array(r.buffer, s, c)),
            u = t.reflectGetOwnPropertyDescriptor(f.get(R), g);
        return f.insert(u)
    }, w["rb-js-abi-host"]["reflect-get-prototype-of: func(target: handle<js-abi-value>) -> handle<js-abi-value>"] = function(R) {
        const E = t.reflectGetPrototypeOf(f.get(R));
        return f.insert(E)
    }, w["rb-js-abi-host"]["reflect-has: func(target: handle<js-abi-value>, property-key: string) -> bool"] = function(R, E, C) {
        const r = p("memory"),
            s = E,
            c = C,
            g = UTF8_DECODER.decode(new Uint8Array(r.buffer, s, c));
        return t.reflectHas(f.get(R), g) ? 1 : 0
    }, w["rb-js-abi-host"]["reflect-is-extensible: func(target: handle<js-abi-value>) -> bool"] = function(R) {
        return t.reflectIsExtensible(f.get(R)) ? 1 : 0
    }, w["rb-js-abi-host"]["reflect-own-keys: func(target: handle<js-abi-value>) -> list<handle<js-abi-value>>"] = function(R, E) {
        const C = p("memory"),
            r = p("cabi_realloc"),
            c = t.reflectOwnKeys(f.get(R)),
            g = c.length,
            u = r(0, 0, 4, g * 4);
        for (let _ = 0; _ < c.length; _++) {
            const v = c[_],
                D = u + _ * 4;
            data_view(C).setInt32(D + 0, f.insert(v), !0)
        }
        data_view(C).setInt32(E + 4, g, !0), data_view(C).setInt32(E + 0, u, !0)
    }, w["rb-js-abi-host"]["reflect-prevent-extensions: func(target: handle<js-abi-value>) -> bool"] = function(R) {
        return t.reflectPreventExtensions(f.get(R)) ? 1 : 0
    }, w["rb-js-abi-host"]["reflect-set: func(target: handle<js-abi-value>, property-key: string, value: handle<js-abi-value>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"] = function(R, E, C, r, s) {
        const c = p("memory"),
            g = E,
            u = C,
            _ = UTF8_DECODER.decode(new Uint8Array(c.buffer, g, u)),
            D = t.reflectSet(f.get(R), _, f.get(r));
        switch (D.tag) {
            case "success": {
                const d = D.val;
                data_view(c).setInt8(s + 0, 0, !0), data_view(c).setInt32(s + 4, f.insert(d), !0);
                break
            }
            case "failure": {
                const d = D.val;
                data_view(c).setInt8(s + 0, 1, !0), data_view(c).setInt32(s + 4, f.insert(d), !0);
                break
            }
            default:
                throw new RangeError("invalid variant specified for JsAbiResult")
        }
    }, w["rb-js-abi-host"]["reflect-set-prototype-of: func(target: handle<js-abi-value>, prototype: handle<js-abi-value>) -> bool"] = function(R, E) {
        return t.reflectSetPrototypeOf(f.get(R), f.get(E)) ? 1 : 0
    }, "canonical_abi" in w || (w.canonical_abi = {});
    const f = new Slab;
    w.canonical_abi["resource_drop_js-abi-value"] = R => {
        const E = f.remove(R);
        t.dropJsAbiValue && t.dropJsAbiValue(E)
    }
}
class LegacyBinding extends RbAbiGuest {
    async setInstance(t) {
        await this.instantiate(t)
    }
}
class ComponentBinding {
    constructor() {}
    setUnderlying(t) {
        this.underlying = t
    }
    rubyShowVersion() {
        this.underlying.rubyShowVersion()
    }
    rubyInit(t) {
        this.underlying.rubyInit(t)
    }
    rubyInitLoadpath() {
        this.underlying.rubyInitLoadpath()
    }
    rbEvalStringProtect(t) {
        return this.underlying.rbEvalStringProtect(t)
    }
    rbFuncallvProtect(t, p, f) {
        return this.underlying.rbFuncallvProtect(t, p, f)
    }
    rbIntern(t) {
        return this.underlying.rbIntern(t)
    }
    rbErrinfo() {
        return this.underlying.rbErrinfo()
    }
    rbClearErrinfo() {
        return this.underlying.rbClearErrinfo()
    }
    rstringPtr(t) {
        return this.underlying.rstringPtr(t)
    }
    rbVmBugreport() {
        this.underlying.rbVmBugreport()
    }
    rbGcEnable() {
        return this.underlying.rbGcEnable()
    }
    rbGcDisable() {
        return this.underlying.rbGcDisable()
    }
    rbSetShouldProhibitRewind(t) {
        return this.underlying.rbSetShouldProhibitRewind(t)
    }
    async setInstance(t) {}
    addToImports(t) {}
}
class RubyVM {
    static async instantiateModule(t) {
        var p, f;
        const {
            module: R,
            wasip1: E
        } = t, C = new RubyVM, r = {
            wasi_snapshot_preview1: E.wasiImport
        };
        C.addToImports(r), (p = t.addToImports) === null || p === void 0 || p.call(t, r);
        const s = await WebAssembly.instantiate(R, r);
        return await C.setInstance(s), (f = t.setMemory) === null || f === void 0 || f.call(t, s.exports.memory), E.initialize(s), C.initialize(t.args), {
            vm: C,
            instance: s
        }
    }
    static async instantiateComponent(t) {
        let p;
        return "getCoreModule" in t ? p = async R => {
            const {
                instantiate: E,
                getCoreModule: C,
                wasip2: r
            } = t, {
                cli: s,
                clocks: c,
                filesystem: g,
                io: u,
                random: _,
                sockets: v,
                http: D
            } = r, d = {
                "ruby:js/js-runtime": R,
                "wasi:cli/environment": s.environment,
                "wasi:cli/exit": s.exit,
                "wasi:cli/stderr": s.stderr,
                "wasi:cli/stdin": s.stdin,
                "wasi:cli/stdout": s.stdout,
                "wasi:cli/terminal-input": s.terminalInput,
                "wasi:cli/terminal-output": s.terminalOutput,
                "wasi:cli/terminal-stderr": s.terminalStderr,
                "wasi:cli/terminal-stdin": s.terminalStdin,
                "wasi:cli/terminal-stdout": s.terminalStdout,
                "wasi:clocks/monotonic-clock": c.monotonicClock,
                "wasi:clocks/wall-clock": c.wallClock,
                "wasi:filesystem/preopens": g.preopens,
                "wasi:filesystem/types": g.types,
                "wasi:io/error": u.error,
                "wasi:io/poll": u.poll,
                "wasi:io/streams": u.streams,
                "wasi:random/random": _.random,
                "wasi:sockets/tcp": v.tcp,
                "wasi:http/types": D.types,
                "wasi:http/incoming-handler": D.incomingHandler,
                "wasi:http/outgoing-handler": D.outgoingHandler
            };
            return (await E(C, d, t.instantiateCore)).rubyRuntime
        }: p = t.instantiate, {
            vm: await this._instantiate({}, p)
        }
    }
    constructor(t) {
        this.instance = null, this.interfaceState = {
            hasJSFrameAfterRbFrame: !1
        };
        const p = f => {
            const R = ["setInstance", "addToImports", "instantiate", "rbSetShouldProhibitRewind", "rbGcDisable", "rbGcEnable"],
                E = ["constructor"].concat(R);
            for (const C of Object.getOwnPropertyNames(RbAbiGuest.prototype)) {
                if (E.includes(C)) continue;
                const r = f[C];
                typeof r == "function" && (f[C] = (...s) => {
                    if (this.interfaceState.hasJSFrameAfterRbFrame) {
                        const g = this.guest.rbSetShouldProhibitRewind(!0),
                            u = this.guest.rbGcDisable(),
                            _ = Reflect.apply(r, f, s);
                        return this.guest.rbSetShouldProhibitRewind(g), u || this.guest.rbGcEnable(), _
                    } else return Reflect.apply(r, f, s)
                })
            }
            return f
        };
        this.guest = p(t ?? new LegacyBinding), this.transport = new JsValueTransport, this.exceptionFormatter = new RbExceptionFormatter
    }
    static async _instantiate(t, p) {
        const f = new ComponentBinding,
            R = new RubyVM(f);
        class E {
            constructor(c) {
                this.underlying = c
            }
        }
        const C = R.getImports(s => new E(s), s => s.underlying),
            r = await p(Object.assign(Object.assign({}, C), {
                throwProhibitRewindException: s => {
                    R.throwProhibitRewindException(s)
                },
                procToJsFunction: () => {
                    const s = new RbValue(r.exportRbValueToJs(), R, R.privateObject());
                    return new E((...c) => s.call("call", ...c.map(g => R.wrap(g))).toJS())
                },
                rbObjectToJsRbValue: () => {
                    const s = new RbValue(r.exportRbValueToJs(), R, R.privateObject());
                    return new E(s)
                },
                JsAbiValue: E
            }));
        return f.setUnderlying(r), R.initialize(t.args), R
    }
    initialize(t = ["ruby.wasm", "-EUTF-8", "-e_=0"]) {
        const p = t.map(f => f + "\0");
        this.guest.rubyInit(p);
        try {
            this.eval(`
        # Require Bundler standalone setup
        if File.exist?("/bundle/bundler/setup.rb")
          require "/bundle/bundler/setup.rb"
        elsif File.exist?("/bundle/setup.rb")
          # For non-CM builds, which doesn't use Bundler's standalone mode
          require "/bundle/setup.rb"
        end
      `)
        } catch (f) {
            console.warn("Failed to load /bundle/setup", f)
        }
    }
    async setInstance(t) {
        this.instance = t, await this.guest.setInstance(t)
    }
    addToImports(t) {
        this.guest.addToImports(t), t["rb-js-abi-host"] = {
            rb_wasm_throw_prohibit_rewind_exception: (p, f) => {
                const R = this.instance.exports.memory,
                    E = new TextDecoder().decode(new Uint8Array(R.buffer, p, f));
                this.throwProhibitRewindException(E)
            }
        }, addRbJsAbiHostToImports(t, this.getImports(p => p, p => p), p => this.instance.exports[p])
    }
    throwProhibitRewindException(t) {
        let p = `Ruby APIs that may rewind the VM stack are prohibited under nested VM operation (${t})
Nested VM operation means that the call stack has sandwitched JS frames like JS -> Ruby -> JS -> Ruby caused by something like \`window.rubyVM.eval("JS.global[:rubyVM].eval('Fiber.yield')")\`

Please check your call stack and make sure that you are **not** doing any of the following inside the nested Ruby frame:
  1. Switching fibers (e.g. Fiber#resume, Fiber.yield, and Fiber#transfer)
     Note that \`evalAsync\` JS API switches fibers internally
  2. Raising uncaught exceptions
     Please catch all exceptions inside the nested operation
  3. Calling Continuation APIs
`;
        const f = new RbValue(this.guest.rbErrinfo(), this, this.privateObject());
        throw f.call("nil?").toString() === "false" && (p += `
` + this.exceptionFormatter.format(f, this, this.privateObject())), new RbFatalError(p)
    }
    getImports(t, p) {
        const f = E => {
            for (const [C, r] of Object.entries(E)) typeof r == "function" && (E[C] = (...s) => {
                const c = this.interfaceState.hasJSFrameAfterRbFrame;
                this.interfaceState.hasJSFrameAfterRbFrame = !0;
                const g = Reflect.apply(r, E, s);
                return this.interfaceState.hasJSFrameAfterRbFrame = c, g
            });
            return E
        };

        function R(E) {
            return (...C) => {
                try {
                    return {
                        tag: "success",
                        val: E(...C)
                    }
                } catch (r) {
                    if (r instanceof RbFatalError) throw r;
                    return {
                        tag: "failure",
                        val: t(r)
                    }
                }
            }
        }
        return f({
            evalJs: R(E => t(Function(E)())),
            isJs: E => !0,
            globalThis: () => {
                if (typeof globalThis < "u") return t(globalThis);
                if (typeof global < "u") return t(global);
                if (typeof window < "u") return t(window);
                throw new Error("unable to locate global object")
            },
            intToJsNumber: E => t(E),
            floatToJsNumber: E => t(E),
            stringToJsString: E => t(E),
            boolToJsBool: E => t(E),
            procToJsFunction: E => {
                const C = this.rbValueOfPointer(E);
                return t((...r) => C.call("call", ...r.map(s => this.wrap(s))).toJS())
            },
            rbObjectToJsRbValue: E => t(this.rbValueOfPointer(E)),
            jsValueToString: E => (E = p(E), String(E)),
            jsValueToInteger(E) {
                return E = p(E), typeof E == "number" ? {
                    tag: "as-float",
                    val: E
                } : typeof E == "bigint" ? {
                    tag: "bignum",
                    val: BigInt(E).toString(10) + "\0"
                } : typeof E == "string" ? {
                    tag: "bignum",
                    val: E + "\0"
                } : typeof E > "u" ? {
                    tag: "as-float",
                    val: 0
                } : {
                    tag: "as-float",
                    val: Number(E)
                }
            },
            exportJsValueToHost: E => {
                this.transport.takeJsValue(p(E))
            },
            importJsValueFromHost: () => t(this.transport.consumeJsValue()),
            instanceOf: (E, C) => (C = p(C), typeof C == "function" ? p(E) instanceof C : !1),
            jsValueTypeof(E) {
                return typeof p(E)
            },
            jsValueEqual(E, C) {
                return p(E) == p(C)
            },
            jsValueStrictlyEqual(E, C) {
                return p(E) === p(C)
            },
            reflectApply: R((E, C, r) => {
                const s = r.map(c => p(c));
                return t(Reflect.apply(p(E), p(C), s))
            }),
            reflectConstruct: function(E, C) {
                throw new Error("Function not implemented.")
            },
            reflectDeleteProperty: function(E, C) {
                throw new Error("Function not implemented.")
            },
            reflectGet: R((E, C) => t(p(E)[C])),
            reflectGetOwnPropertyDescriptor: function(E, C) {
                throw new Error("Function not implemented.")
            },
            reflectGetPrototypeOf: function(E) {
                throw new Error("Function not implemented.")
            },
            reflectHas: function(E, C) {
                throw new Error("Function not implemented.")
            },
            reflectIsExtensible: function(E) {
                throw new Error("Function not implemented.")
            },
            reflectOwnKeys: function(E) {
                throw new Error("Function not implemented.")
            },
            reflectPreventExtensions: function(E) {
                throw new Error("Function not implemented.")
            },
            reflectSet: R((E, C, r) => t(Reflect.set(p(E), C, p(r)))),
            reflectSetPrototypeOf: function(E, C) {
                throw new Error("Function not implemented.")
            }
        })
    }
    printVersion() {
        this.guest.rubyShowVersion()
    }
    eval(t) {
        return evalRbCode(this, this.privateObject(), t)
    }
    evalAsync(t) {
        const p = this.eval("require 'js'; JS");
        return newRbPromise(this, this.privateObject(), f => {
            p.call("__eval_async_rb", this.wrap(t), f)
        })
    }
    wrap(t) {
        return this.transport.importJsValue(t, this)
    }
    privateObject() {
        return {
            transport: this.transport,
            exceptionFormatter: this.exceptionFormatter
        }
    }
    rbValueOfPointer(t) {
        const p = new RbAbiValue(t, this.guest);
        return new RbValue(p, this, this.privateObject())
    }
}
class JsValueTransport {
    constructor() {
        this._takenJsValue = null
    }
    takeJsValue(t) {
        this._takenJsValue = t
    }
    consumeJsValue() {
        return this._takenJsValue
    }
    exportJsValue(t) {
        return t.call("__export_to_js"), this._takenJsValue
    }
    importJsValue(t, p) {
        return this._takenJsValue = t, p.eval('require "js"; JS::Object').call("__import_from_js")
    }
}
class RbValue {
    constructor(t, p, f) {
        this.inner = t, this.vm = p, this.privateObject = f
    }
    call(t, ...p) {
        const f = p.map(R => R.inner);
        return new RbValue(callRbMethod(this.vm, this.privateObject, this.inner, t, f), this.vm, this.privateObject)
    }
    callAsync(t, ...p) {
        const f = this.vm.eval("require 'js'; JS");
        return newRbPromise(this.vm, this.privateObject, R => {
            f.call("__call_async_method", this, this.vm.wrap(t), R, ...p)
        })
    } [Symbol.toPrimitive](t) {
        return t === "string" || t === "default" ? this.toString() : null
    }
    toString() {
        const t = callRbMethod(this.vm, this.privateObject, this.inner, "to_s", []);
        return this.vm.guest.rstringPtr(t)
    }
    toJS() {
        const p = this.vm.eval("JS").call("try_convert", this);
        return p.call("nil?").toString() === "true" ? null : this.privateObject.transport.exportJsValue(p)
    }
}
var ruby_tag_type;
(function(w) {
    w[w.None = 0] = "None", w[w.Return = 1] = "Return", w[w.Break = 2] = "Break", w[w.Next = 3] = "Next", w[w.Retry = 4] = "Retry", w[w.Redo = 5] = "Redo", w[w.Raise = 6] = "Raise", w[w.Throw = 7] = "Throw", w[w.Fatal = 8] = "Fatal", w[w.Mask = 15] = "Mask"
})(ruby_tag_type || (ruby_tag_type = {}));
class RbExceptionFormatter {
    constructor() {
        this.literalsCache = null, this.isFormmatting = !1
    }
    format(t, p, f) {
        class R extends Error {}
        if (this.isFormmatting) throw new R("Unexpected exception occurred during formatting exception message");
        this.isFormmatting = !0;
        try {
            return this._format(t, p, f)
        } finally {
            this.isFormmatting = !1
        }
    }
    _format(t, p, f) {
        const [R, E, C] = (() => {
            if (this.literalsCache == null) {
                const g = [evalRbCode(p, f, "0"), evalRbCode(p, f, "1"), evalRbCode(p, f, `"
"`)];
                return this.literalsCache = g, g
            } else return this.literalsCache
        })();
        let r, s, c;
        try {
            r = t.call("class").toString()
        } catch {
            r = "unknown"
        }
        try {
            c = t.call("message").toString()
        } catch {
            c = "unknown"
        }
        try {
            s = t.call("backtrace")
        } catch {
            return this.formatString(r, c)
        }
        if (s.call("nil?").toString() === "true") return this.formatString(r, c);
        try {
            const g = s.call("at", R),
                u = s.call("drop", E).call("join", C);
            return this.formatString(r, c, [g.toString(), u.toString()])
        } catch {
            return this.formatString(r, c)
        }
    }
    formatString(t, p, f) {
        return f ? `${f[0]}: ${p} (${t})
${f[1]}` : `${t}: ${p}`
    }
}
const checkStatusTag = (w, t, p) => {
    switch (w & ruby_tag_type.Mask) {
        case ruby_tag_type.None:
            break;
        case ruby_tag_type.Return:
            throw new RbError("unexpected return");
        case ruby_tag_type.Next:
            throw new RbError("unexpected next");
        case ruby_tag_type.Break:
            throw new RbError("unexpected break");
        case ruby_tag_type.Redo:
            throw new RbError("unexpected redo");
        case ruby_tag_type.Retry:
            throw new RbError("retry outside of rescue clause");
        case ruby_tag_type.Throw:
            throw new RbError("unexpected throw");
        case ruby_tag_type.Raise:
        case ruby_tag_type.Fatal:
            const f = new RbValue(t.guest.rbErrinfo(), t, p);
            throw f.call("nil?").toString() === "true" ? new RbError("no exception object") : (t.guest.rbClearErrinfo(), new RbError(p.exceptionFormatter.format(f, t, p)));
        default:
            throw new RbError(`unknown error tag: ${w}`)
    }
};

function wrapRbOperation(w, t) {
    try {
        return t()
    } catch (p) {
        if (p instanceof RbError) throw p;
        try {
            w.guest.rbVmBugreport()
        } catch (f) {
            console.error("Tried to report internal Ruby VM state but failed: ", f)
        }
        if (p instanceof WebAssembly.RuntimeError && p.message === "unreachable") {
            const f = new RbError(`Something went wrong in Ruby VM: ${p}`);
            throw f.stack = p.stack, f
        } else throw p
    }
}
const callRbMethod = (w, t, p, f, R) => {
        const E = w.guest.rbIntern(f + "\0");
        return wrapRbOperation(w, () => {
            const [C, r] = w.guest.rbFuncallvProtect(p, E, R);
            return checkStatusTag(r, w, t), C
        })
    },
    evalRbCode = (w, t, p) => wrapRbOperation(w, () => {
        const [f, R] = w.guest.rbEvalStringProtect(p + "\0");
        return checkStatusTag(R, w, t), new RbValue(f, w, t)
    });

function newRbPromise(w, t, p) {
    return new Promise((f, R) => {
        const E = w.wrap({
            resolve: f,
            reject: C => {
                const r = new RbError(t.exceptionFormatter.format(C, w, t));
                R(r)
            }
        });
        p(E)
    })
}
class RbError extends Error {
    constructor(t) {
        super(t)
    }
}
class RbFatalError extends RbError {
    constructor(t) {
        super("Ruby Fatal Error: " + t)
    }
}
const CLOCKID_REALTIME = 0,
    CLOCKID_MONOTONIC = 1,
    ERRNO_SUCCESS = 0,
    ERRNO_BADF = 8,
    ERRNO_EXIST = 20,
    ERRNO_INVAL = 28,
    ERRNO_ISDIR = 31,
    ERRNO_NAMETOOLONG = 37,
    ERRNO_NOENT = 44,
    ERRNO_NOSYS = 52,
    ERRNO_NOTDIR = 54,
    ERRNO_NOTEMPTY = 55,
    ERRNO_NOTSUP = 58,
    ERRNO_PERM = 63,
    ERRNO_NOTCAPABLE = 76,
    RIGHTS_FD_WRITE = 64;
class Iovec {
    static read_bytes(t, p) {
        const f = new Iovec;
        return f.buf = t.getUint32(p, !0), f.buf_len = t.getUint32(p + 4, !0), f
    }
    static read_bytes_array(t, p, f) {
        const R = [];
        for (let E = 0; E < f; E++) R.push(Iovec.read_bytes(t, p + 8 * E));
        return R
    }
}
class Ciovec {
    static read_bytes(t, p) {
        const f = new Ciovec;
        return f.buf = t.getUint32(p, !0), f.buf_len = t.getUint32(p + 4, !0), f
    }
    static read_bytes_array(t, p, f) {
        const R = [];
        for (let E = 0; E < f; E++) R.push(Ciovec.read_bytes(t, p + 8 * E));
        return R
    }
}
const WHENCE_SET = 0,
    WHENCE_CUR = 1,
    WHENCE_END = 2,
    FILETYPE_DIRECTORY = 3,
    FILETYPE_REGULAR_FILE = 4;
class Dirent {
    head_length() {
        return 24
    }
    name_length() {
        return this.dir_name.byteLength
    }
    write_head_bytes(t, p) {
        t.setBigUint64(p, this.d_next, !0), t.setBigUint64(p + 8, this.d_ino, !0), t.setUint32(p + 16, this.dir_name.length, !0), t.setUint8(p + 20, this.d_type)
    }
    write_name_bytes(t, p, f) {
        t.set(this.dir_name.slice(0, Math.min(this.dir_name.byteLength, f)), p)
    }
    constructor(t, p, f) {
        this.d_ino = 0n;
        const R = new TextEncoder().encode(p);
        this.d_next = t, this.d_namlen = R.byteLength, this.d_type = f, this.dir_name = R
    }
}
const FDFLAGS_APPEND = 1;
class Fdstat {
    write_bytes(t, p) {
        t.setUint8(p, this.fs_filetype), t.setUint16(p + 2, this.fs_flags, !0), t.setBigUint64(p + 8, this.fs_rights_base, !0), t.setBigUint64(p + 16, this.fs_rights_inherited, !0)
    }
    constructor(t, p) {
        this.fs_rights_base = 0n, this.fs_rights_inherited = 0n, this.fs_filetype = t, this.fs_flags = p
    }
}
const OFLAGS_CREAT = 1,
    OFLAGS_DIRECTORY = 2,
    OFLAGS_EXCL = 4,
    OFLAGS_TRUNC = 8;
class Filestat {
    write_bytes(t, p) {
        t.setBigUint64(p, this.dev, !0), t.setBigUint64(p + 8, this.ino, !0), t.setUint8(p + 16, this.filetype), t.setBigUint64(p + 24, this.nlink, !0), t.setBigUint64(p + 32, this.size, !0), t.setBigUint64(p + 38, this.atim, !0), t.setBigUint64(p + 46, this.mtim, !0), t.setBigUint64(p + 52, this.ctim, !0)
    }
    constructor(t, p) {
        this.dev = 0n, this.ino = 0n, this.nlink = 0n, this.atim = 0n, this.mtim = 0n, this.ctim = 0n, this.filetype = t, this.size = p
    }
}
const PREOPENTYPE_DIR = 0;
class PrestatDir {
    write_bytes(t, p) {
        t.setUint32(p, this.pr_name.byteLength, !0)
    }
    constructor(t) {
        this.pr_name = new TextEncoder().encode(t)
    }
}
class Prestat {
    static dir(t) {
        const p = new Prestat;
        return p.tag = PREOPENTYPE_DIR, p.inner = new PrestatDir(t), p
    }
    write_bytes(t, p) {
        t.setUint32(p, this.tag, !0), this.inner.write_bytes(t, p + 4)
    }
}
let Debug = class {
    enable(t) {
        this.log = createLogger(t === void 0 ? !0 : t, this.prefix)
    }
    get enabled() {
        return this.isEnabled
    }
    constructor(t) {
        this.isEnabled = t, this.prefix = "wasi:", this.enable(t)
    }
};

function createLogger(w, t) {
    return w ? console.log.bind(console, "%c%s", "color: #265BA0", t) : () => {}
}
const debug = new Debug(!1);
class WASIProcExit extends Error {
    constructor(t) {
        super("exit with exit code " + t), this.code = t
    }
}
let WASI = class {
    start(t) {
        this.inst = t;
        try {
            return t.exports._start(), 0
        } catch (p) {
            if (p instanceof WASIProcExit) return p.code;
            throw p
        }
    }
    initialize(t) {
        this.inst = t, t.exports._initialize && t.exports._initialize()
    }
    constructor(t, p, f, R = {}) {
        this.args = [], this.env = [], this.fds = [], debug.enable(R.debug), this.args = t, this.env = p, this.fds = f;
        const E = this;
        this.wasiImport = {
            args_sizes_get(C, r) {
                const s = new DataView(E.inst.exports.memory.buffer);
                s.setUint32(C, E.args.length, !0);
                let c = 0;
                for (const g of E.args) c += g.length + 1;
                return s.setUint32(r, c, !0), debug.log(s.getUint32(C, !0), s.getUint32(r, !0)), 0
            },
            args_get(C, r) {
                const s = new DataView(E.inst.exports.memory.buffer),
                    c = new Uint8Array(E.inst.exports.memory.buffer),
                    g = r;
                for (let u = 0; u < E.args.length; u++) {
                    s.setUint32(C, r, !0), C += 4;
                    const _ = new TextEncoder().encode(E.args[u]);
                    c.set(_, r), s.setUint8(r + _.length, 0), r += _.length + 1
                }
                return debug.enabled && debug.log(new TextDecoder("utf-8").decode(c.slice(g, r))), 0
            },
            environ_sizes_get(C, r) {
                const s = new DataView(E.inst.exports.memory.buffer);
                s.setUint32(C, E.env.length, !0);
                let c = 0;
                for (const g of E.env) c += g.length + 1;
                return s.setUint32(r, c, !0), debug.log(s.getUint32(C, !0), s.getUint32(r, !0)), 0
            },
            environ_get(C, r) {
                const s = new DataView(E.inst.exports.memory.buffer),
                    c = new Uint8Array(E.inst.exports.memory.buffer),
                    g = r;
                for (let u = 0; u < E.env.length; u++) {
                    s.setUint32(C, r, !0), C += 4;
                    const _ = new TextEncoder().encode(E.env[u]);
                    c.set(_, r), s.setUint8(r + _.length, 0), r += _.length + 1
                }
                return debug.enabled && debug.log(new TextDecoder("utf-8").decode(c.slice(g, r))), 0
            },
            clock_res_get(C, r) {
                let s;
                switch (C) {
                    case CLOCKID_MONOTONIC: {
                        s = 5000n;
                        break
                    }
                    case CLOCKID_REALTIME: {
                        s = 1000000n;
                        break
                    }
                    default:
                        return ERRNO_NOSYS
                }
                return new DataView(E.inst.exports.memory.buffer).setBigUint64(r, s, !0), ERRNO_SUCCESS
            },
            clock_time_get(C, r, s) {
                const c = new DataView(E.inst.exports.memory.buffer);
                if (C === CLOCKID_REALTIME) c.setBigUint64(s, BigInt(new Date().getTime()) * 1000000n, !0);
                else if (C == CLOCKID_MONOTONIC) {
                    let g;
                    try {
                        g = BigInt(Math.round(performance.now() * 1e6))
                    } catch {
                        g = 0n
                    }
                    c.setBigUint64(s, g, !0)
                } else c.setBigUint64(s, 0n, !0);
                return 0
            },
            fd_advise(C, r, s, c) {
                return E.fds[C] != null ? ERRNO_SUCCESS : ERRNO_BADF
            },
            fd_allocate(C, r, s) {
                return E.fds[C] != null ? E.fds[C].fd_allocate(r, s) : ERRNO_BADF
            },
            fd_close(C) {
                if (E.fds[C] != null) {
                    const r = E.fds[C].fd_close();
                    return E.fds[C] = void 0, r
                } else return ERRNO_BADF
            },
            fd_datasync(C) {
                return E.fds[C] != null ? E.fds[C].fd_sync() : ERRNO_BADF
            },
            fd_fdstat_get(C, r) {
                if (E.fds[C] != null) {
                    const {
                        ret: s,
                        fdstat: c
                    } = E.fds[C].fd_fdstat_get();
                    return c != null && c.write_bytes(new DataView(E.inst.exports.memory.buffer), r), s
                } else return ERRNO_BADF
            },
            fd_fdstat_set_flags(C, r) {
                return E.fds[C] != null ? E.fds[C].fd_fdstat_set_flags(r) : ERRNO_BADF
            },
            fd_fdstat_set_rights(C, r, s) {
                return E.fds[C] != null ? E.fds[C].fd_fdstat_set_rights(r, s) : ERRNO_BADF
            },
            fd_filestat_get(C, r) {
                if (E.fds[C] != null) {
                    const {
                        ret: s,
                        filestat: c
                    } = E.fds[C].fd_filestat_get();
                    return c != null && c.write_bytes(new DataView(E.inst.exports.memory.buffer), r), s
                } else return ERRNO_BADF
            },
            fd_filestat_set_size(C, r) {
                return E.fds[C] != null ? E.fds[C].fd_filestat_set_size(r) : ERRNO_BADF
            },
            fd_filestat_set_times(C, r, s, c) {
                return E.fds[C] != null ? E.fds[C].fd_filestat_set_times(r, s, c) : ERRNO_BADF
            },
            fd_pread(C, r, s, c, g) {
                const u = new DataView(E.inst.exports.memory.buffer),
                    _ = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const v = Iovec.read_bytes_array(u, r, s);
                    let D = 0;
                    for (const d of v) {
                        const {
                            ret: a,
                            data: o
                        } = E.fds[C].fd_pread(d.buf_len, c);
                        if (a != ERRNO_SUCCESS) return u.setUint32(g, D, !0), a;
                        if (_.set(o, d.buf), D += o.length, c += BigInt(o.length), o.length != d.buf_len) break
                    }
                    return u.setUint32(g, D, !0), ERRNO_SUCCESS
                } else return ERRNO_BADF
            },
            fd_prestat_get(C, r) {
                const s = new DataView(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const {
                        ret: c,
                        prestat: g
                    } = E.fds[C].fd_prestat_get();
                    return g != null && g.write_bytes(s, r), c
                } else return ERRNO_BADF
            },
            fd_prestat_dir_name(C, r, s) {
                if (E.fds[C] != null) {
                    const {
                        ret: c,
                        prestat: g
                    } = E.fds[C].fd_prestat_get();
                    if (g == null) return c;
                    const u = g.inner.pr_name;
                    return new Uint8Array(E.inst.exports.memory.buffer).set(u.slice(0, s), r), u.byteLength > s ? ERRNO_NAMETOOLONG : ERRNO_SUCCESS
                } else return ERRNO_BADF
            },
            fd_pwrite(C, r, s, c, g) {
                const u = new DataView(E.inst.exports.memory.buffer),
                    _ = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const v = Ciovec.read_bytes_array(u, r, s);
                    let D = 0;
                    for (const d of v) {
                        const a = _.slice(d.buf, d.buf + d.buf_len),
                            {
                                ret: o,
                                nwritten: i
                            } = E.fds[C].fd_pwrite(a, c);
                        if (o != ERRNO_SUCCESS) return u.setUint32(g, D, !0), o;
                        if (D += i, c += BigInt(i), i != a.byteLength) break
                    }
                    return u.setUint32(g, D, !0), ERRNO_SUCCESS
                } else return ERRNO_BADF
            },
            fd_read(C, r, s, c) {
                const g = new DataView(E.inst.exports.memory.buffer),
                    u = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const _ = Iovec.read_bytes_array(g, r, s);
                    let v = 0;
                    for (const D of _) {
                        const {
                            ret: d,
                            data: a
                        } = E.fds[C].fd_read(D.buf_len);
                        if (d != ERRNO_SUCCESS) return g.setUint32(c, v, !0), d;
                        if (u.set(a, D.buf), v += a.length, a.length != D.buf_len) break
                    }
                    return g.setUint32(c, v, !0), ERRNO_SUCCESS
                } else return ERRNO_BADF
            },
            fd_readdir(C, r, s, c, g) {
                const u = new DataView(E.inst.exports.memory.buffer),
                    _ = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    let v = 0;
                    for (;;) {
                        const {
                            ret: D,
                            dirent: d
                        } = E.fds[C].fd_readdir_single(c);
                        if (D != 0) return u.setUint32(g, v, !0), D;
                        if (d == null) break;
                        if (s - v < d.head_length()) {
                            v = s;
                            break
                        }
                        const a = new ArrayBuffer(d.head_length());
                        if (d.write_head_bytes(new DataView(a), 0), _.set(new Uint8Array(a).slice(0, Math.min(a.byteLength, s - v)), r), r += d.head_length(), v += d.head_length(), s - v < d.name_length()) {
                            v = s;
                            break
                        }
                        d.write_name_bytes(_, r, s - v), r += d.name_length(), v += d.name_length(), c = d.d_next
                    }
                    return u.setUint32(g, v, !0), 0
                } else return ERRNO_BADF
            },
            fd_renumber(C, r) {
                if (E.fds[C] != null && E.fds[r] != null) {
                    const s = E.fds[r].fd_close();
                    return s != 0 ? s : (E.fds[r] = E.fds[C], E.fds[C] = void 0, 0)
                } else return ERRNO_BADF
            },
            fd_seek(C, r, s, c) {
                const g = new DataView(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const {
                        ret: u,
                        offset: _
                    } = E.fds[C].fd_seek(r, s);
                    return g.setBigInt64(c, _, !0), u
                } else return ERRNO_BADF
            },
            fd_sync(C) {
                return E.fds[C] != null ? E.fds[C].fd_sync() : ERRNO_BADF
            },
            fd_tell(C, r) {
                const s = new DataView(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const {
                        ret: c,
                        offset: g
                    } = E.fds[C].fd_tell();
                    return s.setBigUint64(r, g, !0), c
                } else return ERRNO_BADF
            },
            fd_write(C, r, s, c) {
                const g = new DataView(E.inst.exports.memory.buffer),
                    u = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const _ = Ciovec.read_bytes_array(g, r, s);
                    let v = 0;
                    for (const D of _) {
                        const d = u.slice(D.buf, D.buf + D.buf_len),
                            {
                                ret: a,
                                nwritten: o
                            } = E.fds[C].fd_write(d);
                        if (a != ERRNO_SUCCESS) return g.setUint32(c, v, !0), a;
                        if (v += o, o != d.byteLength) break
                    }
                    return g.setUint32(c, v, !0), ERRNO_SUCCESS
                } else return ERRNO_BADF
            },
            path_create_directory(C, r, s) {
                const c = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const g = new TextDecoder("utf-8").decode(c.slice(r, r + s));
                    return E.fds[C].path_create_directory(g)
                } else return ERRNO_BADF
            },
            path_filestat_get(C, r, s, c, g) {
                const u = new DataView(E.inst.exports.memory.buffer),
                    _ = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const v = new TextDecoder("utf-8").decode(_.slice(s, s + c)),
                        {
                            ret: D,
                            filestat: d
                        } = E.fds[C].path_filestat_get(r, v);
                    return d != null && d.write_bytes(u, g), D
                } else return ERRNO_BADF
            },
            path_filestat_set_times(C, r, s, c, g, u, _) {
                const v = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const D = new TextDecoder("utf-8").decode(v.slice(s, s + c));
                    return E.fds[C].path_filestat_set_times(r, D, g, u, _)
                } else return ERRNO_BADF
            },
            path_link(C, r, s, c, g, u, _) {
                const v = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null && E.fds[g] != null) {
                    const D = new TextDecoder("utf-8").decode(v.slice(s, s + c)),
                        d = new TextDecoder("utf-8").decode(v.slice(u, u + _)),
                        {
                            ret: a,
                            inode_obj: o
                        } = E.fds[C].path_lookup(D, r);
                    return o == null ? a : E.fds[g].path_link(d, o, !1)
                } else return ERRNO_BADF
            },
            path_open(C, r, s, c, g, u, _, v, D) {
                const d = new DataView(E.inst.exports.memory.buffer),
                    a = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const o = new TextDecoder("utf-8").decode(a.slice(s, s + c));
                    debug.log(o);
                    const {
                        ret: i,
                        fd_obj: l
                    } = E.fds[C].path_open(r, o, g, u, _, v);
                    if (i != 0) return i;
                    E.fds.push(l);
                    const b = E.fds.length - 1;
                    return d.setUint32(D, b, !0), 0
                } else return ERRNO_BADF
            },
            path_readlink(C, r, s, c, g, u) {
                const _ = new DataView(E.inst.exports.memory.buffer),
                    v = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const D = new TextDecoder("utf-8").decode(v.slice(r, r + s));
                    debug.log(D);
                    const {
                        ret: d,
                        data: a
                    } = E.fds[C].path_readlink(D);
                    if (a != null) {
                        const o = new TextEncoder().encode(a);
                        if (o.length > g) return _.setUint32(u, 0, !0), ERRNO_BADF;
                        v.set(o, c), _.setUint32(u, o.length, !0)
                    }
                    return d
                } else return ERRNO_BADF
            },
            path_remove_directory(C, r, s) {
                const c = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const g = new TextDecoder("utf-8").decode(c.slice(r, r + s));
                    return E.fds[C].path_remove_directory(g)
                } else return ERRNO_BADF
            },
            path_rename(C, r, s, c, g, u) {
                const _ = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null && E.fds[c] != null) {
                    const v = new TextDecoder("utf-8").decode(_.slice(r, r + s)),
                        D = new TextDecoder("utf-8").decode(_.slice(g, g + u));
                    let {
                        ret: d,
                        inode_obj: a
                    } = E.fds[C].path_unlink(v);
                    if (a == null) return d;
                    if (d = E.fds[c].path_link(D, a, !0), d != ERRNO_SUCCESS && E.fds[C].path_link(v, a, !0) != ERRNO_SUCCESS) throw "path_link should always return success when relinking an inode back to the original place";
                    return d
                } else return ERRNO_BADF
            },
            path_symlink(C, r, s, c, g) {
                const u = new Uint8Array(E.inst.exports.memory.buffer);
                return E.fds[s] != null ? (new TextDecoder("utf-8").decode(u.slice(C, C + r)), new TextDecoder("utf-8").decode(u.slice(c, c + g)), ERRNO_NOTSUP) : ERRNO_BADF
            },
            path_unlink_file(C, r, s) {
                const c = new Uint8Array(E.inst.exports.memory.buffer);
                if (E.fds[C] != null) {
                    const g = new TextDecoder("utf-8").decode(c.slice(r, r + s));
                    return E.fds[C].path_unlink_file(g)
                } else return ERRNO_BADF
            },
            poll_oneoff(C, r, s) {
                throw "async io not supported"
            },
            proc_exit(C) {
                throw new WASIProcExit(C)
            },
            proc_raise(C) {
                throw "raised signal " + C
            },
            sched_yield() {},
            random_get(C, r) {
                const s = new Uint8Array(E.inst.exports.memory.buffer);
                for (let c = 0; c < r; c++) s[C + c] = Math.random() * 256 | 0
            },
            sock_recv(C, r, s) {
                throw "sockets not supported"
            },
            sock_send(C, r, s) {
                throw "sockets not supported"
            },
            sock_shutdown(C, r) {
                throw "sockets not supported"
            },
            sock_accept(C, r) {
                throw "sockets not supported"
            }
        }
    }
};
class Fd {
    fd_allocate(t, p) {
        return ERRNO_NOTSUP
    }
    fd_close() {
        return 0
    }
    fd_fdstat_get() {
        return {
            ret: ERRNO_NOTSUP,
            fdstat: null
        }
    }
    fd_fdstat_set_flags(t) {
        return ERRNO_NOTSUP
    }
    fd_fdstat_set_rights(t, p) {
        return ERRNO_NOTSUP
    }
    fd_filestat_get() {
        return {
            ret: ERRNO_NOTSUP,
            filestat: null
        }
    }
    fd_filestat_set_size(t) {
        return ERRNO_NOTSUP
    }
    fd_filestat_set_times(t, p, f) {
        return ERRNO_NOTSUP
    }
    fd_pread(t, p) {
        return {
            ret: ERRNO_NOTSUP,
            data: new Uint8Array
        }
    }
    fd_prestat_get() {
        return {
            ret: ERRNO_NOTSUP,
            prestat: null
        }
    }
    fd_pwrite(t, p) {
        return {
            ret: ERRNO_NOTSUP,
            nwritten: 0
        }
    }
    fd_read(t) {
        return {
            ret: ERRNO_NOTSUP,
            data: new Uint8Array
        }
    }
    fd_readdir_single(t) {
        return {
            ret: ERRNO_NOTSUP,
            dirent: null
        }
    }
    fd_seek(t, p) {
        return {
            ret: ERRNO_NOTSUP,
            offset: 0n
        }
    }
    fd_sync() {
        return 0
    }
    fd_tell() {
        return {
            ret: ERRNO_NOTSUP,
            offset: 0n
        }
    }
    fd_write(t) {
        return {
            ret: ERRNO_NOTSUP,
            nwritten: 0
        }
    }
    path_create_directory(t) {
        return ERRNO_NOTSUP
    }
    path_filestat_get(t, p) {
        return {
            ret: ERRNO_NOTSUP,
            filestat: null
        }
    }
    path_filestat_set_times(t, p, f, R, E) {
        return ERRNO_NOTSUP
    }
    path_link(t, p, f) {
        return ERRNO_NOTSUP
    }
    path_unlink(t) {
        return {
            ret: ERRNO_NOTSUP,
            inode_obj: null
        }
    }
    path_lookup(t, p) {
        return {
            ret: ERRNO_NOTSUP,
            inode_obj: null
        }
    }
    path_open(t, p, f, R, E, C) {
        return {
            ret: ERRNO_NOTDIR,
            fd_obj: null
        }
    }
    path_readlink(t) {
        return {
            ret: ERRNO_NOTSUP,
            data: null
        }
    }
    path_remove_directory(t) {
        return ERRNO_NOTSUP
    }
    path_rename(t, p, f) {
        return ERRNO_NOTSUP
    }
    path_unlink_file(t) {
        return ERRNO_NOTSUP
    }
}
class Inode {}
class OpenFile extends Fd {
    fd_allocate(t, p) {
        if (!(this.file.size > t + p)) {
            const f = new Uint8Array(Number(t + p));
            f.set(this.file.data, 0), this.file.data = f
        }
        return ERRNO_SUCCESS
    }
    fd_fdstat_get() {
        return {
            ret: 0,
            fdstat: new Fdstat(FILETYPE_REGULAR_FILE, 0)
        }
    }
    fd_filestat_set_size(t) {
        if (this.file.size > t) this.file.data = new Uint8Array(this.file.data.buffer.slice(0, Number(t)));
        else {
            const p = new Uint8Array(Number(t));
            p.set(this.file.data, 0), this.file.data = p
        }
        return ERRNO_SUCCESS
    }
    fd_read(t) {
        const p = this.file.data.slice(Number(this.file_pos), Number(this.file_pos + BigInt(t)));
        return this.file_pos += BigInt(p.length), {
            ret: 0,
            data: p
        }
    }
    fd_pread(t, p) {
        return {
            ret: 0,
            data: this.file.data.slice(Number(p), Number(p + BigInt(t)))
        }
    }
    fd_seek(t, p) {
        let f;
        switch (p) {
            case WHENCE_SET:
                f = t;
                break;
            case WHENCE_CUR:
                f = this.file_pos + t;
                break;
            case WHENCE_END:
                f = BigInt(this.file.data.byteLength) + t;
                break;
            default:
                return {
                    ret: ERRNO_INVAL, offset: 0n
                }
        }
        return f < 0 ? {
            ret: ERRNO_INVAL,
            offset: 0n
        } : (this.file_pos = f, {
            ret: 0,
            offset: this.file_pos
        })
    }
    fd_tell() {
        return {
            ret: 0,
            offset: this.file_pos
        }
    }
    fd_write(t) {
        if (this.file.readonly) return {
            ret: ERRNO_BADF,
            nwritten: 0
        };
        if (this.file_pos + BigInt(t.byteLength) > this.file.size) {
            const p = this.file.data;
            this.file.data = new Uint8Array(Number(this.file_pos + BigInt(t.byteLength))), this.file.data.set(p)
        }
        return this.file.data.set(t, Number(this.file_pos)), this.file_pos += BigInt(t.byteLength), {
            ret: 0,
            nwritten: t.byteLength
        }
    }
    fd_pwrite(t, p) {
        if (this.file.readonly) return {
            ret: ERRNO_BADF,
            nwritten: 0
        };
        if (p + BigInt(t.byteLength) > this.file.size) {
            const f = this.file.data;
            this.file.data = new Uint8Array(Number(p + BigInt(t.byteLength))), this.file.data.set(f)
        }
        return this.file.data.set(t, Number(p)), {
            ret: 0,
            nwritten: t.byteLength
        }
    }
    fd_filestat_get() {
        return {
            ret: 0,
            filestat: this.file.stat()
        }
    }
    constructor(t) {
        super(), this.file_pos = 0n, this.file = t
    }
}
class OpenDirectory extends Fd {
    fd_seek(t, p) {
        return {
            ret: ERRNO_BADF,
            offset: 0n
        }
    }
    fd_tell() {
        return {
            ret: ERRNO_BADF,
            offset: 0n
        }
    }
    fd_allocate(t, p) {
        return ERRNO_BADF
    }
    fd_fdstat_get() {
        return {
            ret: 0,
            fdstat: new Fdstat(FILETYPE_DIRECTORY, 0)
        }
    }
    fd_readdir_single(t) {
        if (debug.enabled && (debug.log("readdir_single", t), debug.log(t, this.dir.contents.keys())), t == 0n) return {
            ret: ERRNO_SUCCESS,
            dirent: new Dirent(1n, ".", FILETYPE_DIRECTORY)
        };
        if (t == 1n) return {
            ret: ERRNO_SUCCESS,
            dirent: new Dirent(2n, "..", FILETYPE_DIRECTORY)
        };
        if (t >= BigInt(this.dir.contents.size) + 2n) return {
            ret: 0,
            dirent: null
        };
        const [p, f] = Array.from(this.dir.contents.entries())[Number(t - 2n)];
        return {
            ret: 0,
            dirent: new Dirent(t + 1n, p, f.stat().filetype)
        }
    }
    path_filestat_get(t, p) {
        const {
            ret: f,
            path: R
        } = Path.from(p);
        if (R == null) return {
            ret: f,
            filestat: null
        };
        const {
            ret: E,
            entry: C
        } = this.dir.get_entry_for_path(R);
        return C == null ? {
            ret: E,
            filestat: null
        } : {
            ret: 0,
            filestat: C.stat()
        }
    }
    path_lookup(t, p) {
        const {
            ret: f,
            path: R
        } = Path.from(t);
        if (R == null) return {
            ret: f,
            inode_obj: null
        };
        const {
            ret: E,
            entry: C
        } = this.dir.get_entry_for_path(R);
        return C == null ? {
            ret: E,
            inode_obj: null
        } : {
            ret: ERRNO_SUCCESS,
            inode_obj: C
        }
    }
    path_open(t, p, f, R, E, C) {
        const {
            ret: r,
            path: s
        } = Path.from(p);
        if (s == null) return {
            ret: r,
            fd_obj: null
        };
        let {
            ret: c,
            entry: g
        } = this.dir.get_entry_for_path(s);
        if (g == null) {
            if (c != ERRNO_NOENT) return {
                ret: c,
                fd_obj: null
            };
            if ((f & OFLAGS_CREAT) == OFLAGS_CREAT) {
                const {
                    ret: u,
                    entry: _
                } = this.dir.create_entry_for_path(p, (f & OFLAGS_DIRECTORY) == OFLAGS_DIRECTORY);
                if (_ == null) return {
                    ret: u,
                    fd_obj: null
                };
                g = _
            } else return {
                ret: ERRNO_NOENT,
                fd_obj: null
            }
        } else if ((f & OFLAGS_EXCL) == OFLAGS_EXCL) return {
            ret: ERRNO_EXIST,
            fd_obj: null
        };
        return (f & OFLAGS_DIRECTORY) == OFLAGS_DIRECTORY && g.stat().filetype !== FILETYPE_DIRECTORY ? {
            ret: ERRNO_NOTDIR,
            fd_obj: null
        } : g.path_open(f, R, C)
    }
    path_create_directory(t) {
        return this.path_open(0, t, OFLAGS_CREAT | OFLAGS_DIRECTORY, 0n, 0n, 0).ret
    }
    path_link(t, p, f) {
        const {
            ret: R,
            path: E
        } = Path.from(t);
        if (E == null) return R;
        if (E.is_dir) return ERRNO_NOENT;
        const {
            ret: C,
            parent_entry: r,
            filename: s,
            entry: c
        } = this.dir.get_parent_dir_and_entry_for_path(E, !0);
        if (r == null || s == null) return C;
        if (c != null) {
            const g = p.stat().filetype == FILETYPE_DIRECTORY,
                u = c.stat().filetype == FILETYPE_DIRECTORY;
            if (g && u)
                if (f && c instanceof Directory) {
                    if (c.contents.size != 0) return ERRNO_NOTEMPTY
                } else return ERRNO_EXIST;
            else {
                if (g && !u) return ERRNO_NOTDIR;
                if (!g && u) return ERRNO_ISDIR;
                if (!(p.stat().filetype == FILETYPE_REGULAR_FILE && c.stat().filetype == FILETYPE_REGULAR_FILE)) return ERRNO_EXIST
            }
        }
        return !f && p.stat().filetype == FILETYPE_DIRECTORY ? ERRNO_PERM : (r.contents.set(s, p), ERRNO_SUCCESS)
    }
    path_unlink(t) {
        const {
            ret: p,
            path: f
        } = Path.from(t);
        if (f == null) return {
            ret: p,
            inode_obj: null
        };
        const {
            ret: R,
            parent_entry: E,
            filename: C,
            entry: r
        } = this.dir.get_parent_dir_and_entry_for_path(f, !0);
        return E == null || C == null ? {
            ret: R,
            inode_obj: null
        } : r == null ? {
            ret: ERRNO_NOENT,
            inode_obj: null
        } : (E.contents.delete(C), {
            ret: ERRNO_SUCCESS,
            inode_obj: r
        })
    }
    path_unlink_file(t) {
        const {
            ret: p,
            path: f
        } = Path.from(t);
        if (f == null) return p;
        const {
            ret: R,
            parent_entry: E,
            filename: C,
            entry: r
        } = this.dir.get_parent_dir_and_entry_for_path(f, !1);
        return E == null || C == null || r == null ? R : r.stat().filetype === FILETYPE_DIRECTORY ? ERRNO_ISDIR : (E.contents.delete(C), ERRNO_SUCCESS)
    }
    path_remove_directory(t) {
        const {
            ret: p,
            path: f
        } = Path.from(t);
        if (f == null) return p;
        const {
            ret: R,
            parent_entry: E,
            filename: C,
            entry: r
        } = this.dir.get_parent_dir_and_entry_for_path(f, !1);
        return E == null || C == null || r == null ? R : !(r instanceof Directory) || r.stat().filetype !== FILETYPE_DIRECTORY ? ERRNO_NOTDIR : r.contents.size !== 0 ? ERRNO_NOTEMPTY : E.contents.delete(C) ? ERRNO_SUCCESS : ERRNO_NOENT
    }
    fd_filestat_get() {
        return {
            ret: 0,
            filestat: this.dir.stat()
        }
    }
    fd_filestat_set_size(t) {
        return ERRNO_BADF
    }
    fd_read(t) {
        return {
            ret: ERRNO_BADF,
            data: new Uint8Array
        }
    }
    fd_pread(t, p) {
        return {
            ret: ERRNO_BADF,
            data: new Uint8Array
        }
    }
    fd_write(t) {
        return {
            ret: ERRNO_BADF,
            nwritten: 0
        }
    }
    fd_pwrite(t, p) {
        return {
            ret: ERRNO_BADF,
            nwritten: 0
        }
    }
    constructor(t) {
        super(), this.dir = t
    }
}
class PreopenDirectory extends OpenDirectory {
    fd_prestat_get() {
        return {
            ret: 0,
            prestat: Prestat.dir(this.prestat_name)
        }
    }
    constructor(t, p) {
        super(new Directory(p)), this.prestat_name = t
    }
}
class File extends Inode {
    path_open(t, p, f) {
        if (this.readonly && (p & BigInt(RIGHTS_FD_WRITE)) == BigInt(RIGHTS_FD_WRITE)) return {
            ret: ERRNO_PERM,
            fd_obj: null
        };
        if ((t & OFLAGS_TRUNC) == OFLAGS_TRUNC) {
            if (this.readonly) return {
                ret: ERRNO_PERM,
                fd_obj: null
            };
            this.data = new Uint8Array([])
        }
        const R = new OpenFile(this);
        return f & FDFLAGS_APPEND && R.fd_seek(0n, WHENCE_END), {
            ret: ERRNO_SUCCESS,
            fd_obj: R
        }
    }
    get size() {
        return BigInt(this.data.byteLength)
    }
    stat() {
        return new Filestat(FILETYPE_REGULAR_FILE, this.size)
    }
    constructor(t, p) {
        super(), this.data = new Uint8Array(t), this.readonly = !!(p != null && p.readonly)
    }
}
let Path = class Mi {
    static from(t) {
        const p = new Mi;
        if (p.is_dir = t.endsWith("/"), t.startsWith("/")) return {
            ret: ERRNO_NOTCAPABLE,
            path: null
        };
        if (t.includes("\0")) return {
            ret: ERRNO_INVAL,
            path: null
        };
        for (const f of t.split("/"))
            if (!(f === "" || f === ".")) {
                if (f === "..") {
                    if (p.parts.pop() == null) return {
                        ret: ERRNO_NOTCAPABLE,
                        path: null
                    };
                    continue
                }
                p.parts.push(f)
            } return {
            ret: ERRNO_SUCCESS,
            path: p
        }
    }
    to_path_string() {
        let t = this.parts.join("/");
        return this.is_dir && (t += "/"), t
    }
    constructor() {
        this.parts = [], this.is_dir = !1
    }
};
class Directory extends Inode {
    path_open(t, p, f) {
        return {
            ret: ERRNO_SUCCESS,
            fd_obj: new OpenDirectory(this)
        }
    }
    stat() {
        return new Filestat(FILETYPE_DIRECTORY, 0n)
    }
    get_entry_for_path(t) {
        let p = this;
        for (const f of t.parts) {
            if (!(p instanceof Directory)) return {
                ret: ERRNO_NOTDIR,
                entry: null
            };
            const R = p.contents.get(f);
            if (R !== void 0) p = R;
            else return debug.log(f), {
                ret: ERRNO_NOENT,
                entry: null
            }
        }
        return t.is_dir && p.stat().filetype != FILETYPE_DIRECTORY ? {
            ret: ERRNO_NOTDIR,
            entry: null
        } : {
            ret: ERRNO_SUCCESS,
            entry: p
        }
    }
    get_parent_dir_and_entry_for_path(t, p) {
        const f = t.parts.pop();
        if (f === void 0) return {
            ret: ERRNO_INVAL,
            parent_entry: null,
            filename: null,
            entry: null
        };
        const {
            ret: R,
            entry: E
        } = this.get_entry_for_path(t);
        if (E == null) return {
            ret: R,
            parent_entry: null,
            filename: null,
            entry: null
        };
        if (!(E instanceof Directory)) return {
            ret: ERRNO_NOTDIR,
            parent_entry: null,
            filename: null,
            entry: null
        };
        const C = E.contents.get(f);
        return C === void 0 ? p ? {
            ret: ERRNO_SUCCESS,
            parent_entry: E,
            filename: f,
            entry: null
        } : {
            ret: ERRNO_NOENT,
            parent_entry: null,
            filename: null,
            entry: null
        } : t.is_dir && C.stat().filetype != FILETYPE_DIRECTORY ? {
            ret: ERRNO_NOTDIR,
            parent_entry: null,
            filename: null,
            entry: null
        } : {
            ret: ERRNO_SUCCESS,
            parent_entry: E,
            filename: f,
            entry: C
        }
    }
    create_entry_for_path(t, p) {
        const {
            ret: f,
            path: R
        } = Path.from(t);
        if (R == null) return {
            ret: f,
            entry: null
        };
        let {
            ret: E,
            parent_entry: C,
            filename: r,
            entry: s
        } = this.get_parent_dir_and_entry_for_path(R, !0);
        if (C == null || r == null) return {
            ret: E,
            entry: null
        };
        if (s != null) return {
            ret: ERRNO_EXIST,
            entry: null
        };
        debug.log("create", R);
        let c;
        return p ? c = new Directory(new Map) : c = new File(new ArrayBuffer(0)), C.contents.set(r, c), s = c, {
            ret: ERRNO_SUCCESS,
            entry: s
        }
    }
    constructor(t) {
        super(), t instanceof Array ? this.contents = new Map(t) : this.contents = t
    }
}

function strace(w, t) {
    return new Proxy(w, {
        get(p, f, R) {
            const E = Reflect.get(p, f, R);
            return t.includes(f) ? E : function(...C) {
                console.log(f, "(", ...C, ")");
                const r = Reflect.apply(E, R, C);
                return console.log(" =", r), r
            }
        }
    })
}
const oi = class oi {
    constructor() {
        this.isTracingSyscall = !1
    }
    async fetchWithProgress(t, p, f) {
        const R = await fetch(t);
        if (!R.ok || R.body === null) throw new Error(`Failed to fetch ${t}: ${R.statusText}`);
        let E = 0;
        const C = setInterval(() => {
            f.set_prompt(`${p} ${".".repeat(E)}`), E = (E + 1) % 4
        }, 200);
        try {
            const r = await R.arrayBuffer();
            return new Uint8Array(r)
        } finally {
            clearInterval(C)
        }
    }
    async init(t, p) {
        this.term = t;
        const f = await this.fetchWithProgress(p.url, "Downloading irb.wasm", t),
            R = ["irb.wasm", "-e_=0", "-EUTF-8", "-I/gems/lib"];
        t.set_prompt(""), t.write(`$ #\r
`), t.write(`$ #\r
`), t.write(`$ #\r
`), t.write(`$ # \x1B[32;1m irb.wasm - IRB on WebAssembly\x1B[m\r
`), t.write(`$ #\r
`), t.write(`$ #\r
`), t.write(`$ #\r
`), t.write(`$ # Source code is available at https://github.com/kateinoigakukun/irb.wasm\r
`), t.write(`$ cat EXAMPLES.rb \r
`), t.write(` \r
`), t.write(`puts "Hello, world!"\r
`), t.write(` \r
`), t.write(`RubyVM::AbstractSyntaxTree.parse("puts :hello")\r
`), t.write(` \r
`), t.write(`require "prism"\r
`), t.write(`Prism.parse("puts :hello")\r
`), t.write(` \r
`);
        let E;
        try {
            E = await this.loadHomeDir()
        } catch {
            E = new Map
        }
        const C = new PreopenDirectory("/home", new Map([
                ["me", new Directory(E)]
            ])),
            r = [new OpenFile(new File([])), new OpenFile(new File([])), new OpenFile(new File([])), C, new PreopenDirectory("/dev", new Map([
                ["null", new File([])]
            ]))],
            s = ["HOME=/home/me", "GEM_PATH=/gems:/home/me/.gem/ruby/3.2.0+2", "GEM_SPEC_CACHE=/home/me/.gem/specs", "TERM=xterm-256color"],
            c = new WASI(R, s, r, {
                debug: !1
            }),
            g = new RubyVM,
            u = consolePrinter({
                stdout: t.write.bind(t),
                stderr: t.write.bind(t)
            }),
            _ = {
                wasi_snapshot_preview1: this.isTracingSyscall ? strace(c.wasiImport, []) : c.wasiImport
            };
        u.addToImports(_), g.addToImports(_);
        const {
            instance: v
        } = await WebAssembly.instantiate(f, _);
        u.setMemory(v.exports.memory), await g.setInstance(v), c.initialize(v), v.exports._initialize(), g.initialize(R), t.write(`$ ruby --version\r
`), g.printVersion(), t.write("$ " + R.join(" ") + `\r
`), this.instance = v, this.wasi = c, this.vm = g, this.homeDir = C
    }
    start() {
        this.vm.eval('require "/bundle/setup"'), this.vm.eval(`
            # Hack to ignore "require 'io/console'" and "require 'io/wait'"
            $LOADED_FEATURES << "io/console" << "io/wait" << "socket"
            Gem::Specification.find_by_name("reline").dependencies.clear
        `), this.term.startIRB(this.vm)
    }
    async sleep_ms(t) {
        return new Promise(p => setTimeout(p, t))
    }
    async loadHomeDir() {
        const t = new Map,
            p = await navigator.storage.getDirectory();
        for (const f of oi.FILES_TO_SAVE) try {
            const R = await p.getFileHandle(f, {
                create: !1
            });
            if (!R) continue;
            const C = await (await R.getFile()).arrayBuffer(),
                r = new File(new Uint8Array(C));
            t.set(f, r)
        } catch {}
        return t
    }
    async snapshotHomeDir() {
        this.vm.eval("IRB.conf[:MAIN_CONTEXT].io.save_history");
        const t = await navigator.storage.getDirectory(),
            p = this.homeDir.dir.contents.get("me");
        for (const f of oi.FILES_TO_SAVE) {
            const R = p.contents.get(f);
            if (!(R instanceof File)) continue;
            const C = await (await t.getFileHandle(f, {
                create: !0
            })).createWritable();
            await C.write(R.data), await C.close()
        }
    }
};
oi.FILES_TO_SAVE = [".irbrc", ".irb_history"];
let IRB = oi;
var commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};

function getDefaultExportFromCjs(w) {
    return w && w.__esModule && Object.prototype.hasOwnProperty.call(w, "default") ? w.default : w
}
var jquery = {
    exports: {}
};
/*!
 * jQuery JavaScript Library v3.6.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2022-08-26T17:52Z
 */
(function(w) {
    (function(t, p) {
        w.exports = t.document ? p(t, !0) : function(f) {
            if (!f.document) throw new Error("jQuery requires a window with a document");
            return p(f)
        }
    })(typeof window < "u" ? window : commonjsGlobal, function(t, p) {
        var f = [],
            R = Object.getPrototypeOf,
            E = f.slice,
            C = f.flat ? function(e) {
                return f.flat.call(e)
            } : function(e) {
                return f.concat.apply([], e)
            },
            r = f.push,
            s = f.indexOf,
            c = {},
            g = c.toString,
            u = c.hasOwnProperty,
            _ = u.toString,
            v = _.call(Object),
            D = {},
            d = function(h) {
                return typeof h == "function" && typeof h.nodeType != "number" && typeof h.item != "function"
            },
            a = function(h) {
                return h != null && h === h.window
            },
            o = t.document,
            i = {
                type: !0,
                src: !0,
                nonce: !0,
                noModule: !0
            };

        function l(e, h, y) {
            y = y || o;
            var x, I, B = y.createElement("script");
            if (B.text = e, h)
                for (x in i) I = h[x] || h.getAttribute && h.getAttribute(x), I && B.setAttribute(x, I);
            y.head.appendChild(B).parentNode.removeChild(B)
        }

        function b(e) {
            return e == null ? e + "" : typeof e == "object" || typeof e == "function" ? c[g.call(e)] || "object" : typeof e
        }
        var A = "3.6.1",
            n = function(e, h) {
                return new n.fn.init(e, h)
            };
        n.fn = n.prototype = {
            jquery: A,
            constructor: n,
            length: 0,
            toArray: function() {
                return E.call(this)
            },
            get: function(e) {
                return e == null ? E.call(this) : e < 0 ? this[e + this.length] : this[e]
            },
            pushStack: function(e) {
                var h = n.merge(this.constructor(), e);
                return h.prevObject = this, h
            },
            each: function(e) {
                return n.each(this, e)
            },
            map: function(e) {
                return this.pushStack(n.map(this, function(h, y) {
                    return e.call(h, y, h)
                }))
            },
            slice: function() {
                return this.pushStack(E.apply(this, arguments))
            },
            first: function() {
                return this.eq(0)
            },
            last: function() {
                return this.eq(-1)
            },
            even: function() {
                return this.pushStack(n.grep(this, function(e, h) {
                    return (h + 1) % 2
                }))
            },
            odd: function() {
                return this.pushStack(n.grep(this, function(e, h) {
                    return h % 2
                }))
            },
            eq: function(e) {
                var h = this.length,
                    y = +e + (e < 0 ? h : 0);
                return this.pushStack(y >= 0 && y < h ? [this[y]] : [])
            },
            end: function() {
                return this.prevObject || this.constructor()
            },
            push: r,
            sort: f.sort,
            splice: f.splice
        }, n.extend = n.fn.extend = function() {
            var e, h, y, x, I, B, M = arguments[0] || {},
                Q = 1,
                Y = arguments.length,
                le = !1;
            for (typeof M == "boolean" && (le = M, M = arguments[Q] || {}, Q++), typeof M != "object" && !d(M) && (M = {}), Q === Y && (M = this, Q--); Q < Y; Q++)
                if ((e = arguments[Q]) != null)
                    for (h in e) x = e[h], !(h === "__proto__" || M === x) && (le && x && (n.isPlainObject(x) || (I = Array.isArray(x))) ? (y = M[h], I && !Array.isArray(y) ? B = [] : !I && !n.isPlainObject(y) ? B = {} : B = y, I = !1, M[h] = n.extend(le, B, x)) : x !== void 0 && (M[h] = x));
            return M
        }, n.extend({
            expando: "jQuery" + (A + Math.random()).replace(/\D/g, ""),
            isReady: !0,
            error: function(e) {
                throw new Error(e)
            },
            noop: function() {},
            isPlainObject: function(e) {
                var h, y;
                return !e || g.call(e) !== "[object Object]" ? !1 : (h = R(e), h ? (y = u.call(h, "constructor") && h.constructor, typeof y == "function" && _.call(y) === v) : !0)
            },
            isEmptyObject: function(e) {
                var h;
                for (h in e) return !1;
                return !0
            },
            globalEval: function(e, h, y) {
                l(e, {
                    nonce: h && h.nonce
                }, y)
            },
            each: function(e, h) {
                var y, x = 0;
                if (T(e))
                    for (y = e.length; x < y && h.call(e[x], x, e[x]) !== !1; x++);
                else
                    for (x in e)
                        if (h.call(e[x], x, e[x]) === !1) break;
                return e
            },
            makeArray: function(e, h) {
                var y = h || [];
                return e != null && (T(Object(e)) ? n.merge(y, typeof e == "string" ? [e] : e) : r.call(y, e)), y
            },
            inArray: function(e, h, y) {
                return h == null ? -1 : s.call(h, e, y)
            },
            merge: function(e, h) {
                for (var y = +h.length, x = 0, I = e.length; x < y; x++) e[I++] = h[x];
                return e.length = I, e
            },
            grep: function(e, h, y) {
                for (var x, I = [], B = 0, M = e.length, Q = !y; B < M; B++) x = !h(e[B], B), x !== Q && I.push(e[B]);
                return I
            },
            map: function(e, h, y) {
                var x, I, B = 0,
                    M = [];
                if (T(e))
                    for (x = e.length; B < x; B++) I = h(e[B], B, y), I != null && M.push(I);
                else
                    for (B in e) I = h(e[B], B, y), I != null && M.push(I);
                return C(M)
            },
            guid: 1,
            support: D
        }), typeof Symbol == "function" && (n.fn[Symbol.iterator] = f[Symbol.iterator]), n.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e, h) {
            c["[object " + h + "]"] = h.toLowerCase()
        });

        function T(e) {
            var h = !!e && "length" in e && e.length,
                y = b(e);
            return d(e) || a(e) ? !1 : y === "array" || h === 0 || typeof h == "number" && h > 0 && h - 1 in e
        }
        var S = function(e) {
            var h, y, x, I, B, M, Q, Y, le, de, ke, he, ve, Ze, it, qe, $t, Nt, sr, mt = "sizzle" + 1 * new Date,
                rt = e.document,
                er = 0,
                ht = 0,
                Bt = ui(),
                ri = ui(),
                ai = ui(),
                or = ui(),
                Vr = function(N, J) {
                    return N === J && (ke = !0), 0
                },
                zr = {}.hasOwnProperty,
                tr = [],
                Pr = tr.pop,
                pr = tr.push,
                Mr = tr.push,
                Fi = tr.slice,
                Gr = function(N, J) {
                    for (var ie = 0, De = N.length; ie < De; ie++)
                        if (N[ie] === J) return ie;
                    return -1
                },
                vi = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                vt = "[\\x20\\t\\r\\n\\f]",
                Kr = "(?:\\\\[\\da-fA-F]{1,6}" + vt + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
                Ri = "\\[" + vt + "*(" + Kr + ")(?:" + vt + "*([*^$|!~]?=)" + vt + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + Kr + "))|)" + vt + "*\\]",
                mi = ":(" + Kr + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + Ri + ")*)|.*)\\)|)",
                zi = new RegExp(vt + "+", "g"),
                li = new RegExp("^" + vt + "+|((?:^|[^\\\\])(?:\\\\.)*)" + vt + "+$", "g"),
                Gi = new RegExp("^" + vt + "*," + vt + "*"),
                ki = new RegExp("^" + vt + "*([>+~]|" + vt + ")" + vt + "*"),
                Ki = new RegExp(vt + "|>"),
                Zi = new RegExp(mi),
                qi = new RegExp("^" + Kr + "$"),
                ci = {
                    ID: new RegExp("^#(" + Kr + ")"),
                    CLASS: new RegExp("^\\.(" + Kr + ")"),
                    TAG: new RegExp("^(" + Kr + "|[*])"),
                    ATTR: new RegExp("^" + Ri),
                    PSEUDO: new RegExp("^" + mi),
                    CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + vt + "*(even|odd|(([+-]|)(\\d*)n|)" + vt + "*(?:([+-]|)" + vt + "*(\\d+)|))" + vt + "*\\)|)", "i"),
                    bool: new RegExp("^(?:" + vi + ")$", "i"),
                    needsContext: new RegExp("^" + vt + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + vt + "*((?:-\\d)?\\d*)" + vt + "*\\)|)(?=[^-]|$)", "i")
                },
                Xi = /HTML$/i,
                Yi = /^(?:input|select|textarea|button)$/i,
                Ji = /^h\d$/i,
                ii = /^[^{]+\{\s*\[native \w/,
                Qi = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                bi = /[+~]/,
                Ir = new RegExp("\\\\[\\da-fA-F]{1,6}" + vt + "?|\\\\([^\\r\\n\\f])", "g"),
                Br = function(N, J) {
                    var ie = "0x" + N.slice(1) - 65536;
                    return J || (ie < 0 ? String.fromCharCode(ie + 65536) : String.fromCharCode(ie >> 10 | 55296, ie & 1023 | 56320))
                },
                Ti = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                Ii = function(N, J) {
                    return J ? N === "\0" ? "�" : N.slice(0, -1) + "\\" + N.charCodeAt(N.length - 1).toString(16) + " " : "\\" + N
                },
                Bi = function() {
                    he()
                },
                en = fi(function(N) {
                    return N.disabled === !0 && N.nodeName.toLowerCase() === "fieldset"
                }, {
                    dir: "parentNode",
                    next: "legend"
                });
            try {
                Mr.apply(tr = Fi.call(rt.childNodes), rt.childNodes), tr[rt.childNodes.length].nodeType
            } catch {
                Mr = {
                    apply: tr.length ? function(J, ie) {
                        pr.apply(J, Fi.call(ie))
                    } : function(J, ie) {
                        for (var De = J.length, ae = 0; J[De++] = ie[ae++];);
                        J.length = De - 1
                    }
                }
            }

            function yt(N, J, ie, De) {
                var ae, Ae, Te, Me, He, Qe, Je, tt = J && J.ownerDocument,
                    lt = J ? J.nodeType : 9;
                if (ie = ie || [], typeof N != "string" || !N || lt !== 1 && lt !== 9 && lt !== 11) return ie;
                if (!De && (he(J), J = J || ve, it)) {
                    if (lt !== 11 && (He = Qi.exec(N)))
                        if (ae = He[1]) {
                            if (lt === 9)
                                if (Te = J.getElementById(ae)) {
                                    if (Te.id === ae) return ie.push(Te), ie
                                } else return ie;
                            else if (tt && (Te = tt.getElementById(ae)) && sr(J, Te) && Te.id === ae) return ie.push(Te), ie
                        } else {
                            if (He[2]) return Mr.apply(ie, J.getElementsByTagName(N)), ie;
                            if ((ae = He[3]) && y.getElementsByClassName && J.getElementsByClassName) return Mr.apply(ie, J.getElementsByClassName(ae)), ie
                        } if (y.qsa && !or[N + " "] && (!qe || !qe.test(N)) && (lt !== 1 || J.nodeName.toLowerCase() !== "object")) {
                        if (Je = N, tt = J, lt === 1 && (Ki.test(N) || ki.test(N))) {
                            for (tt = bi.test(N) && Ci(J.parentNode) || J, (tt !== J || !y.scope) && ((Me = J.getAttribute("id")) ? Me = Me.replace(Ti, Ii) : J.setAttribute("id", Me = mt)), Qe = M(N), Ae = Qe.length; Ae--;) Qe[Ae] = (Me ? "#" + Me : ":scope") + " " + hi(Qe[Ae]);
                            Je = Qe.join(",")
                        }
                        try {
                            return Mr.apply(ie, tt.querySelectorAll(Je)), ie
                        } catch {
                            or(N, !0)
                        } finally {
                            Me === mt && J.removeAttribute("id")
                        }
                    }
                }
                return Y(N.replace(li, "$1"), J, ie, De)
            }

            function ui() {
                var N = [];

                function J(ie, De) {
                    return N.push(ie + " ") > x.cacheLength && delete J[N.shift()], J[ie + " "] = De
                }
                return J
            }

            function Er(N) {
                return N[mt] = !0, N
            }

            function xr(N) {
                var J = ve.createElement("fieldset");
                try {
                    return !!N(J)
                } catch {
                    return !1
                } finally {
                    J.parentNode && J.parentNode.removeChild(J), J = null
                }
            }

            function yi(N, J) {
                for (var ie = N.split("|"), De = ie.length; De--;) x.attrHandle[ie[De]] = J
            }

            function Li(N, J) {
                var ie = J && N,
                    De = ie && N.nodeType === 1 && J.nodeType === 1 && N.sourceIndex - J.sourceIndex;
                if (De) return De;
                if (ie) {
                    for (; ie = ie.nextSibling;)
                        if (ie === J) return -1
                }
                return N ? 1 : -1
            }

            function tn(N) {
                return function(J) {
                    var ie = J.nodeName.toLowerCase();
                    return ie === "input" && J.type === N
                }
            }

            function rn(N) {
                return function(J) {
                    var ie = J.nodeName.toLowerCase();
                    return (ie === "input" || ie === "button") && J.type === N
                }
            }

            function Oi(N) {
                return function(J) {
                    return "form" in J ? J.parentNode && J.disabled === !1 ? "label" in J ? "label" in J.parentNode ? J.parentNode.disabled === N : J.disabled === N : J.isDisabled === N || J.isDisabled !== !N && en(J) === N : J.disabled === N : "label" in J ? J.disabled === N : !1
                }
            }

            function Zr(N) {
                return Er(function(J) {
                    return J = +J, Er(function(ie, De) {
                        for (var ae, Ae = N([], ie.length, J), Te = Ae.length; Te--;) ie[ae = Ae[Te]] && (ie[ae] = !(De[ae] = ie[ae]))
                    })
                })
            }

            function Ci(N) {
                return N && typeof N.getElementsByTagName < "u" && N
            }
            y = yt.support = {}, B = yt.isXML = function(N) {
                var J = N && N.namespaceURI,
                    ie = N && (N.ownerDocument || N).documentElement;
                return !Xi.test(J || ie && ie.nodeName || "HTML")
            }, he = yt.setDocument = function(N) {
                var J, ie, De = N ? N.ownerDocument || N : rt;
                return De == ve || De.nodeType !== 9 || !De.documentElement || (ve = De, Ze = ve.documentElement, it = !B(ve), rt != ve && (ie = ve.defaultView) && ie.top !== ie && (ie.addEventListener ? ie.addEventListener("unload", Bi, !1) : ie.attachEvent && ie.attachEvent("onunload", Bi)), y.scope = xr(function(ae) {
                    return Ze.appendChild(ae).appendChild(ve.createElement("div")), typeof ae.querySelectorAll < "u" && !ae.querySelectorAll(":scope fieldset div").length
                }), y.attributes = xr(function(ae) {
                    return ae.className = "i", !ae.getAttribute("className")
                }), y.getElementsByTagName = xr(function(ae) {
                    return ae.appendChild(ve.createComment("")), !ae.getElementsByTagName("*").length
                }), y.getElementsByClassName = ii.test(ve.getElementsByClassName), y.getById = xr(function(ae) {
                    return Ze.appendChild(ae).id = mt, !ve.getElementsByName || !ve.getElementsByName(mt).length
                }), y.getById ? (x.filter.ID = function(ae) {
                    var Ae = ae.replace(Ir, Br);
                    return function(Te) {
                        return Te.getAttribute("id") === Ae
                    }
                }, x.find.ID = function(ae, Ae) {
                    if (typeof Ae.getElementById < "u" && it) {
                        var Te = Ae.getElementById(ae);
                        return Te ? [Te] : []
                    }
                }) : (x.filter.ID = function(ae) {
                    var Ae = ae.replace(Ir, Br);
                    return function(Te) {
                        var Me = typeof Te.getAttributeNode < "u" && Te.getAttributeNode("id");
                        return Me && Me.value === Ae
                    }
                }, x.find.ID = function(ae, Ae) {
                    if (typeof Ae.getElementById < "u" && it) {
                        var Te, Me, He, Qe = Ae.getElementById(ae);
                        if (Qe) {
                            if (Te = Qe.getAttributeNode("id"), Te && Te.value === ae) return [Qe];
                            for (He = Ae.getElementsByName(ae), Me = 0; Qe = He[Me++];)
                                if (Te = Qe.getAttributeNode("id"), Te && Te.value === ae) return [Qe]
                        }
                        return []
                    }
                }), x.find.TAG = y.getElementsByTagName ? function(ae, Ae) {
                    if (typeof Ae.getElementsByTagName < "u") return Ae.getElementsByTagName(ae);
                    if (y.qsa) return Ae.querySelectorAll(ae)
                } : function(ae, Ae) {
                    var Te, Me = [],
                        He = 0,
                        Qe = Ae.getElementsByTagName(ae);
                    if (ae === "*") {
                        for (; Te = Qe[He++];) Te.nodeType === 1 && Me.push(Te);
                        return Me
                    }
                    return Qe
                }, x.find.CLASS = y.getElementsByClassName && function(ae, Ae) {
                    if (typeof Ae.getElementsByClassName < "u" && it) return Ae.getElementsByClassName(ae)
                }, $t = [], qe = [], (y.qsa = ii.test(ve.querySelectorAll)) && (xr(function(ae) {
                    var Ae;
                    Ze.appendChild(ae).innerHTML = "<a id='" + mt + "'></a><select id='" + mt + "-\r\\' msallowcapture=''><option selected=''></option></select>", ae.querySelectorAll("[msallowcapture^='']").length && qe.push("[*^$]=" + vt + `*(?:''|"")`), ae.querySelectorAll("[selected]").length || qe.push("\\[" + vt + "*(?:value|" + vi + ")"), ae.querySelectorAll("[id~=" + mt + "-]").length || qe.push("~="), Ae = ve.createElement("input"), Ae.setAttribute("name", ""), ae.appendChild(Ae), ae.querySelectorAll("[name='']").length || qe.push("\\[" + vt + "*name" + vt + "*=" + vt + `*(?:''|"")`), ae.querySelectorAll(":checked").length || qe.push(":checked"), ae.querySelectorAll("a#" + mt + "+*").length || qe.push(".#.+[+~]"), ae.querySelectorAll("\\\f"), qe.push("[\\r\\n\\f]")
                }), xr(function(ae) {
                    ae.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                    var Ae = ve.createElement("input");
                    Ae.setAttribute("type", "hidden"), ae.appendChild(Ae).setAttribute("name", "D"), ae.querySelectorAll("[name=d]").length && qe.push("name" + vt + "*[*^$|!~]?="), ae.querySelectorAll(":enabled").length !== 2 && qe.push(":enabled", ":disabled"), Ze.appendChild(ae).disabled = !0, ae.querySelectorAll(":disabled").length !== 2 && qe.push(":enabled", ":disabled"), ae.querySelectorAll("*,:x"), qe.push(",.*:")
                })), (y.matchesSelector = ii.test(Nt = Ze.matches || Ze.webkitMatchesSelector || Ze.mozMatchesSelector || Ze.oMatchesSelector || Ze.msMatchesSelector)) && xr(function(ae) {
                    y.disconnectedMatch = Nt.call(ae, "*"), Nt.call(ae, "[s!='']:x"), $t.push("!=", mi)
                }), qe = qe.length && new RegExp(qe.join("|")), $t = $t.length && new RegExp($t.join("|")), J = ii.test(Ze.compareDocumentPosition), sr = J || ii.test(Ze.contains) ? function(ae, Ae) {
                    var Te = ae.nodeType === 9 ? ae.documentElement : ae,
                        Me = Ae && Ae.parentNode;
                    return ae === Me || !!(Me && Me.nodeType === 1 && (Te.contains ? Te.contains(Me) : ae.compareDocumentPosition && ae.compareDocumentPosition(Me) & 16))
                } : function(ae, Ae) {
                    if (Ae) {
                        for (; Ae = Ae.parentNode;)
                            if (Ae === ae) return !0
                    }
                    return !1
                }, Vr = J ? function(ae, Ae) {
                    if (ae === Ae) return ke = !0, 0;
                    var Te = !ae.compareDocumentPosition - !Ae.compareDocumentPosition;
                    return Te || (Te = (ae.ownerDocument || ae) == (Ae.ownerDocument || Ae) ? ae.compareDocumentPosition(Ae) : 1, Te & 1 || !y.sortDetached && Ae.compareDocumentPosition(ae) === Te ? ae == ve || ae.ownerDocument == rt && sr(rt, ae) ? -1 : Ae == ve || Ae.ownerDocument == rt && sr(rt, Ae) ? 1 : de ? Gr(de, ae) - Gr(de, Ae) : 0 : Te & 4 ? -1 : 1)
                } : function(ae, Ae) {
                    if (ae === Ae) return ke = !0, 0;
                    var Te, Me = 0,
                        He = ae.parentNode,
                        Qe = Ae.parentNode,
                        Je = [ae],
                        tt = [Ae];
                    if (!He || !Qe) return ae == ve ? -1 : Ae == ve ? 1 : He ? -1 : Qe ? 1 : de ? Gr(de, ae) - Gr(de, Ae) : 0;
                    if (He === Qe) return Li(ae, Ae);
                    for (Te = ae; Te = Te.parentNode;) Je.unshift(Te);
                    for (Te = Ae; Te = Te.parentNode;) tt.unshift(Te);
                    for (; Je[Me] === tt[Me];) Me++;
                    return Me ? Li(Je[Me], tt[Me]) : Je[Me] == rt ? -1 : tt[Me] == rt ? 1 : 0
                }), ve
            }, yt.matches = function(N, J) {
                return yt(N, null, null, J)
            }, yt.matchesSelector = function(N, J) {
                if (he(N), y.matchesSelector && it && !or[J + " "] && (!$t || !$t.test(J)) && (!qe || !qe.test(J))) try {
                    var ie = Nt.call(N, J);
                    if (ie || y.disconnectedMatch || N.document && N.document.nodeType !== 11) return ie
                } catch {
                    or(J, !0)
                }
                return yt(J, ve, null, [N]).length > 0
            }, yt.contains = function(N, J) {
                return (N.ownerDocument || N) != ve && he(N), sr(N, J)
            }, yt.attr = function(N, J) {
                (N.ownerDocument || N) != ve && he(N);
                var ie = x.attrHandle[J.toLowerCase()],
                    De = ie && zr.call(x.attrHandle, J.toLowerCase()) ? ie(N, J, !it) : void 0;
                return De !== void 0 ? De : y.attributes || !it ? N.getAttribute(J) : (De = N.getAttributeNode(J)) && De.specified ? De.value : null
            }, yt.escape = function(N) {
                return (N + "").replace(Ti, Ii)
            }, yt.error = function(N) {
                throw new Error("Syntax error, unrecognized expression: " + N)
            }, yt.uniqueSort = function(N) {
                var J, ie = [],
                    De = 0,
                    ae = 0;
                if (ke = !y.detectDuplicates, de = !y.sortStable && N.slice(0), N.sort(Vr), ke) {
                    for (; J = N[ae++];) J === N[ae] && (De = ie.push(ae));
                    for (; De--;) N.splice(ie[De], 1)
                }
                return de = null, N
            }, I = yt.getText = function(N) {
                var J, ie = "",
                    De = 0,
                    ae = N.nodeType;
                if (ae) {
                    if (ae === 1 || ae === 9 || ae === 11) {
                        if (typeof N.textContent == "string") return N.textContent;
                        for (N = N.firstChild; N; N = N.nextSibling) ie += I(N)
                    } else if (ae === 3 || ae === 4) return N.nodeValue
                } else
                    for (; J = N[De++];) ie += I(J);
                return ie
            }, x = yt.selectors = {
                cacheLength: 50,
                createPseudo: Er,
                match: ci,
                attrHandle: {},
                find: {},
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: !0
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: !0
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(N) {
                        return N[1] = N[1].replace(Ir, Br), N[3] = (N[3] || N[4] || N[5] || "").replace(Ir, Br), N[2] === "~=" && (N[3] = " " + N[3] + " "), N.slice(0, 4)
                    },
                    CHILD: function(N) {
                        return N[1] = N[1].toLowerCase(), N[1].slice(0, 3) === "nth" ? (N[3] || yt.error(N[0]), N[4] = +(N[4] ? N[5] + (N[6] || 1) : 2 * (N[3] === "even" || N[3] === "odd")), N[5] = +(N[7] + N[8] || N[3] === "odd")) : N[3] && yt.error(N[0]), N
                    },
                    PSEUDO: function(N) {
                        var J, ie = !N[6] && N[2];
                        return ci.CHILD.test(N[0]) ? null : (N[3] ? N[2] = N[4] || N[5] || "" : ie && Zi.test(ie) && (J = M(ie, !0)) && (J = ie.indexOf(")", ie.length - J) - ie.length) && (N[0] = N[0].slice(0, J), N[2] = ie.slice(0, J)), N.slice(0, 3))
                    }
                },
                filter: {
                    TAG: function(N) {
                        var J = N.replace(Ir, Br).toLowerCase();
                        return N === "*" ? function() {
                            return !0
                        } : function(ie) {
                            return ie.nodeName && ie.nodeName.toLowerCase() === J
                        }
                    },
                    CLASS: function(N) {
                        var J = Bt[N + " "];
                        return J || (J = new RegExp("(^|" + vt + ")" + N + "(" + vt + "|$)")) && Bt(N, function(ie) {
                            return J.test(typeof ie.className == "string" && ie.className || typeof ie.getAttribute < "u" && ie.getAttribute("class") || "")
                        })
                    },
                    ATTR: function(N, J, ie) {
                        return function(De) {
                            var ae = yt.attr(De, N);
                            return ae == null ? J === "!=" : J ? (ae += "", J === "=" ? ae === ie : J === "!=" ? ae !== ie : J === "^=" ? ie && ae.indexOf(ie) === 0 : J === "*=" ? ie && ae.indexOf(ie) > -1 : J === "$=" ? ie && ae.slice(-ie.length) === ie : J === "~=" ? (" " + ae.replace(zi, " ") + " ").indexOf(ie) > -1 : J === "|=" ? ae === ie || ae.slice(0, ie.length + 1) === ie + "-" : !1) : !0
                        }
                    },
                    CHILD: function(N, J, ie, De, ae) {
                        var Ae = N.slice(0, 3) !== "nth",
                            Te = N.slice(-4) !== "last",
                            Me = J === "of-type";
                        return De === 1 && ae === 0 ? function(He) {
                            return !!He.parentNode
                        } : function(He, Qe, Je) {
                            var tt, lt, Ct, et, Wt, Kt, ar = Ae !== Te ? "nextSibling" : "previousSibling",
                                Rt = He.parentNode,
                                ni = Me && He.nodeName.toLowerCase(),
                                si = !Je && !Me,
                                lr = !1;
                            if (Rt) {
                                if (Ae) {
                                    for (; ar;) {
                                        for (et = He; et = et[ar];)
                                            if (Me ? et.nodeName.toLowerCase() === ni : et.nodeType === 1) return !1;
                                        Kt = ar = N === "only" && !Kt && "nextSibling"
                                    }
                                    return !0
                                }
                                if (Kt = [Te ? Rt.firstChild : Rt.lastChild], Te && si) {
                                    for (et = Rt, Ct = et[mt] || (et[mt] = {}), lt = Ct[et.uniqueID] || (Ct[et.uniqueID] = {}), tt = lt[N] || [], Wt = tt[0] === er && tt[1], lr = Wt && tt[2], et = Wt && Rt.childNodes[Wt]; et = ++Wt && et && et[ar] || (lr = Wt = 0) || Kt.pop();)
                                        if (et.nodeType === 1 && ++lr && et === He) {
                                            lt[N] = [er, Wt, lr];
                                            break
                                        }
                                } else if (si && (et = He, Ct = et[mt] || (et[mt] = {}), lt = Ct[et.uniqueID] || (Ct[et.uniqueID] = {}), tt = lt[N] || [], Wt = tt[0] === er && tt[1], lr = Wt), lr === !1)
                                    for (;
                                        (et = ++Wt && et && et[ar] || (lr = Wt = 0) || Kt.pop()) && !((Me ? et.nodeName.toLowerCase() === ni : et.nodeType === 1) && ++lr && (si && (Ct = et[mt] || (et[mt] = {}), lt = Ct[et.uniqueID] || (Ct[et.uniqueID] = {}), lt[N] = [er, lr]), et === He)););
                                return lr -= ae, lr === De || lr % De === 0 && lr / De >= 0
                            }
                        }
                    },
                    PSEUDO: function(N, J) {
                        var ie, De = x.pseudos[N] || x.setFilters[N.toLowerCase()] || yt.error("unsupported pseudo: " + N);
                        return De[mt] ? De(J) : De.length > 1 ? (ie = [N, N, "", J], x.setFilters.hasOwnProperty(N.toLowerCase()) ? Er(function(ae, Ae) {
                            for (var Te, Me = De(ae, J), He = Me.length; He--;) Te = Gr(ae, Me[He]), ae[Te] = !(Ae[Te] = Me[He])
                        }) : function(ae) {
                            return De(ae, 0, ie)
                        }) : De
                    }
                },
                pseudos: {
                    not: Er(function(N) {
                        var J = [],
                            ie = [],
                            De = Q(N.replace(li, "$1"));
                        return De[mt] ? Er(function(ae, Ae, Te, Me) {
                            for (var He, Qe = De(ae, null, Me, []), Je = ae.length; Je--;)(He = Qe[Je]) && (ae[Je] = !(Ae[Je] = He))
                        }) : function(ae, Ae, Te) {
                            return J[0] = ae, De(J, null, Te, ie), J[0] = null, !ie.pop()
                        }
                    }),
                    has: Er(function(N) {
                        return function(J) {
                            return yt(N, J).length > 0
                        }
                    }),
                    contains: Er(function(N) {
                        return N = N.replace(Ir, Br),
                            function(J) {
                                return (J.textContent || I(J)).indexOf(N) > -1
                            }
                    }),
                    lang: Er(function(N) {
                        return qi.test(N || "") || yt.error("unsupported lang: " + N), N = N.replace(Ir, Br).toLowerCase(),
                            function(J) {
                                var ie;
                                do
                                    if (ie = it ? J.lang : J.getAttribute("xml:lang") || J.getAttribute("lang")) return ie = ie.toLowerCase(), ie === N || ie.indexOf(N + "-") === 0; while ((J = J.parentNode) && J.nodeType === 1);
                                return !1
                            }
                    }),
                    target: function(N) {
                        var J = e.location && e.location.hash;
                        return J && J.slice(1) === N.id
                    },
                    root: function(N) {
                        return N === Ze
                    },
                    focus: function(N) {
                        return N === ve.activeElement && (!ve.hasFocus || ve.hasFocus()) && !!(N.type || N.href || ~N.tabIndex)
                    },
                    enabled: Oi(!1),
                    disabled: Oi(!0),
                    checked: function(N) {
                        var J = N.nodeName.toLowerCase();
                        return J === "input" && !!N.checked || J === "option" && !!N.selected
                    },
                    selected: function(N) {
                        return N.parentNode && N.parentNode.selectedIndex, N.selected === !0
                    },
                    empty: function(N) {
                        for (N = N.firstChild; N; N = N.nextSibling)
                            if (N.nodeType < 6) return !1;
                        return !0
                    },
                    parent: function(N) {
                        return !x.pseudos.empty(N)
                    },
                    header: function(N) {
                        return Ji.test(N.nodeName)
                    },
                    input: function(N) {
                        return Yi.test(N.nodeName)
                    },
                    button: function(N) {
                        var J = N.nodeName.toLowerCase();
                        return J === "input" && N.type === "button" || J === "button"
                    },
                    text: function(N) {
                        var J;
                        return N.nodeName.toLowerCase() === "input" && N.type === "text" && ((J = N.getAttribute("type")) == null || J.toLowerCase() === "text")
                    },
                    first: Zr(function() {
                        return [0]
                    }),
                    last: Zr(function(N, J) {
                        return [J - 1]
                    }),
                    eq: Zr(function(N, J, ie) {
                        return [ie < 0 ? ie + J : ie]
                    }),
                    even: Zr(function(N, J) {
                        for (var ie = 0; ie < J; ie += 2) N.push(ie);
                        return N
                    }),
                    odd: Zr(function(N, J) {
                        for (var ie = 1; ie < J; ie += 2) N.push(ie);
                        return N
                    }),
                    lt: Zr(function(N, J, ie) {
                        for (var De = ie < 0 ? ie + J : ie > J ? J : ie; --De >= 0;) N.push(De);
                        return N
                    }),
                    gt: Zr(function(N, J, ie) {
                        for (var De = ie < 0 ? ie + J : ie; ++De < J;) N.push(De);
                        return N
                    })
                }
            }, x.pseudos.nth = x.pseudos.eq;
            for (h in {
                    radio: !0,
                    checkbox: !0,
                    file: !0,
                    password: !0,
                    image: !0
                }) x.pseudos[h] = tn(h);
            for (h in {
                    submit: !0,
                    reset: !0
                }) x.pseudos[h] = rn(h);

            function Pi() {}
            Pi.prototype = x.filters = x.pseudos, x.setFilters = new Pi, M = yt.tokenize = function(N, J) {
                var ie, De, ae, Ae, Te, Me, He, Qe = ri[N + " "];
                if (Qe) return J ? 0 : Qe.slice(0);
                for (Te = N, Me = [], He = x.preFilter; Te;) {
                    (!ie || (De = Gi.exec(Te))) && (De && (Te = Te.slice(De[0].length) || Te), Me.push(ae = [])), ie = !1, (De = ki.exec(Te)) && (ie = De.shift(), ae.push({
                        value: ie,
                        type: De[0].replace(li, " ")
                    }), Te = Te.slice(ie.length));
                    for (Ae in x.filter)(De = ci[Ae].exec(Te)) && (!He[Ae] || (De = He[Ae](De))) && (ie = De.shift(), ae.push({
                        value: ie,
                        type: Ae,
                        matches: De
                    }), Te = Te.slice(ie.length));
                    if (!ie) break
                }
                return J ? Te.length : Te ? yt.error(N) : ri(N, Me).slice(0)
            };

            function hi(N) {
                for (var J = 0, ie = N.length, De = ""; J < ie; J++) De += N[J].value;
                return De
            }

            function fi(N, J, ie) {
                var De = J.dir,
                    ae = J.next,
                    Ae = ae || De,
                    Te = ie && Ae === "parentNode",
                    Me = ht++;
                return J.first ? function(He, Qe, Je) {
                    for (; He = He[De];)
                        if (He.nodeType === 1 || Te) return N(He, Qe, Je);
                    return !1
                } : function(He, Qe, Je) {
                    var tt, lt, Ct, et = [er, Me];
                    if (Je) {
                        for (; He = He[De];)
                            if ((He.nodeType === 1 || Te) && N(He, Qe, Je)) return !0
                    } else
                        for (; He = He[De];)
                            if (He.nodeType === 1 || Te)
                                if (Ct = He[mt] || (He[mt] = {}), lt = Ct[He.uniqueID] || (Ct[He.uniqueID] = {}), ae && ae === He.nodeName.toLowerCase()) He = He[De] || He;
                                else {
                                    if ((tt = lt[Ae]) && tt[0] === er && tt[1] === Me) return et[2] = tt[2];
                                    if (lt[Ae] = et, et[2] = N(He, Qe, Je)) return !0
                                } return !1
                }
            }

            function Di(N) {
                return N.length > 1 ? function(J, ie, De) {
                    for (var ae = N.length; ae--;)
                        if (!N[ae](J, ie, De)) return !1;
                    return !0
                } : N[0]
            }

            function nn(N, J, ie) {
                for (var De = 0, ae = J.length; De < ae; De++) yt(N, J[De], ie);
                return ie
            }

            function di(N, J, ie, De, ae) {
                for (var Ae, Te = [], Me = 0, He = N.length, Qe = J != null; Me < He; Me++)(Ae = N[Me]) && (!ie || ie(Ae, De, ae)) && (Te.push(Ae), Qe && J.push(Me));
                return Te
            }

            function wi(N, J, ie, De, ae, Ae) {
                return De && !De[mt] && (De = wi(De)), ae && !ae[mt] && (ae = wi(ae, Ae)), Er(function(Te, Me, He, Qe) {
                    var Je, tt, lt, Ct = [],
                        et = [],
                        Wt = Me.length,
                        Kt = Te || nn(J || "*", He.nodeType ? [He] : He, []),
                        ar = N && (Te || !J) ? di(Kt, Ct, N, He, Qe) : Kt,
                        Rt = ie ? ae || (Te ? N : Wt || De) ? [] : Me : ar;
                    if (ie && ie(ar, Rt, He, Qe), De)
                        for (Je = di(Rt, et), De(Je, [], He, Qe), tt = Je.length; tt--;)(lt = Je[tt]) && (Rt[et[tt]] = !(ar[et[tt]] = lt));
                    if (Te) {
                        if (ae || N) {
                            if (ae) {
                                for (Je = [], tt = Rt.length; tt--;)(lt = Rt[tt]) && Je.push(ar[tt] = lt);
                                ae(null, Rt = [], Je, Qe)
                            }
                            for (tt = Rt.length; tt--;)(lt = Rt[tt]) && (Je = ae ? Gr(Te, lt) : Ct[tt]) > -1 && (Te[Je] = !(Me[Je] = lt))
                        }
                    } else Rt = di(Rt === Me ? Rt.splice(Wt, Rt.length) : Rt), ae ? ae(null, Me, Rt, Qe) : Mr.apply(Me, Rt)
                })
            }

            function Si(N) {
                for (var J, ie, De, ae = N.length, Ae = x.relative[N[0].type], Te = Ae || x.relative[" "], Me = Ae ? 1 : 0, He = fi(function(tt) {
                        return tt === J
                    }, Te, !0), Qe = fi(function(tt) {
                        return Gr(J, tt) > -1
                    }, Te, !0), Je = [function(tt, lt, Ct) {
                        var et = !Ae && (Ct || lt !== le) || ((J = lt).nodeType ? He(tt, lt, Ct) : Qe(tt, lt, Ct));
                        return J = null, et
                    }]; Me < ae; Me++)
                    if (ie = x.relative[N[Me].type]) Je = [fi(Di(Je), ie)];
                    else {
                        if (ie = x.filter[N[Me].type].apply(null, N[Me].matches), ie[mt]) {
                            for (De = ++Me; De < ae && !x.relative[N[De].type]; De++);
                            return wi(Me > 1 && Di(Je), Me > 1 && hi(N.slice(0, Me - 1).concat({
                                value: N[Me - 2].type === " " ? "*" : ""
                            })).replace(li, "$1"), ie, Me < De && Si(N.slice(Me, De)), De < ae && Si(N = N.slice(De)), De < ae && hi(N))
                        }
                        Je.push(ie)
                    } return Di(Je)
            }

            function sn(N, J) {
                var ie = J.length > 0,
                    De = N.length > 0,
                    ae = function(Ae, Te, Me, He, Qe) {
                        var Je, tt, lt, Ct = 0,
                            et = "0",
                            Wt = Ae && [],
                            Kt = [],
                            ar = le,
                            Rt = Ae || De && x.find.TAG("*", Qe),
                            ni = er += ar == null ? 1 : Math.random() || .1,
                            si = Rt.length;
                        for (Qe && (le = Te == ve || Te || Qe); et !== si && (Je = Rt[et]) != null; et++) {
                            if (De && Je) {
                                for (tt = 0, !Te && Je.ownerDocument != ve && (he(Je), Me = !it); lt = N[tt++];)
                                    if (lt(Je, Te || ve, Me)) {
                                        He.push(Je);
                                        break
                                    } Qe && (er = ni)
                            }
                            ie && ((Je = !lt && Je) && Ct--, Ae && Wt.push(Je))
                        }
                        if (Ct += et, ie && et !== Ct) {
                            for (tt = 0; lt = J[tt++];) lt(Wt, Kt, Te, Me);
                            if (Ae) {
                                if (Ct > 0)
                                    for (; et--;) Wt[et] || Kt[et] || (Kt[et] = Pr.call(He));
                                Kt = di(Kt)
                            }
                            Mr.apply(He, Kt), Qe && !Ae && Kt.length > 0 && Ct + J.length > 1 && yt.uniqueSort(He)
                        }
                        return Qe && (er = ni, le = ar), Wt
                    };
                return ie ? Er(ae) : ae
            }
            return Q = yt.compile = function(N, J) {
                var ie, De = [],
                    ae = [],
                    Ae = ai[N + " "];
                if (!Ae) {
                    for (J || (J = M(N)), ie = J.length; ie--;) Ae = Si(J[ie]), Ae[mt] ? De.push(Ae) : ae.push(Ae);
                    Ae = ai(N, sn(ae, De)), Ae.selector = N
                }
                return Ae
            }, Y = yt.select = function(N, J, ie, De) {
                var ae, Ae, Te, Me, He, Qe = typeof N == "function" && N,
                    Je = !De && M(N = Qe.selector || N);
                if (ie = ie || [], Je.length === 1) {
                    if (Ae = Je[0] = Je[0].slice(0), Ae.length > 2 && (Te = Ae[0]).type === "ID" && J.nodeType === 9 && it && x.relative[Ae[1].type]) {
                        if (J = (x.find.ID(Te.matches[0].replace(Ir, Br), J) || [])[0], J) Qe && (J = J.parentNode);
                        else return ie;
                        N = N.slice(Ae.shift().value.length)
                    }
                    for (ae = ci.needsContext.test(N) ? 0 : Ae.length; ae-- && (Te = Ae[ae], !x.relative[Me = Te.type]);)
                        if ((He = x.find[Me]) && (De = He(Te.matches[0].replace(Ir, Br), bi.test(Ae[0].type) && Ci(J.parentNode) || J))) {
                            if (Ae.splice(ae, 1), N = De.length && hi(Ae), !N) return Mr.apply(ie, De), ie;
                            break
                        }
                }
                return (Qe || Q(N, Je))(De, J, !it, ie, !J || bi.test(N) && Ci(J.parentNode) || J), ie
            }, y.sortStable = mt.split("").sort(Vr).join("") === mt, y.detectDuplicates = !!ke, he(), y.sortDetached = xr(function(N) {
                return N.compareDocumentPosition(ve.createElement("fieldset")) & 1
            }), xr(function(N) {
                return N.innerHTML = "<a href='#'></a>", N.firstChild.getAttribute("href") === "#"
            }) || yi("type|href|height|width", function(N, J, ie) {
                if (!ie) return N.getAttribute(J, J.toLowerCase() === "type" ? 1 : 2)
            }), (!y.attributes || !xr(function(N) {
                return N.innerHTML = "<input/>", N.firstChild.setAttribute("value", ""), N.firstChild.getAttribute("value") === ""
            })) && yi("value", function(N, J, ie) {
                if (!ie && N.nodeName.toLowerCase() === "input") return N.defaultValue
            }), xr(function(N) {
                return N.getAttribute("disabled") == null
            }) || yi(vi, function(N, J, ie) {
                var De;
                if (!ie) return N[J] === !0 ? J.toLowerCase() : (De = N.getAttributeNode(J)) && De.specified ? De.value : null
            }), yt
        }(t);
        n.find = S, n.expr = S.selectors, n.expr[":"] = n.expr.pseudos, n.uniqueSort = n.unique = S.uniqueSort, n.text = S.getText, n.isXMLDoc = S.isXML, n.contains = S.contains, n.escapeSelector = S.escape;
        var L = function(e, h, y) {
                for (var x = [], I = y !== void 0;
                    (e = e[h]) && e.nodeType !== 9;)
                    if (e.nodeType === 1) {
                        if (I && n(e).is(y)) break;
                        x.push(e)
                    } return x
            },
            z = function(e, h) {
                for (var y = []; e; e = e.nextSibling) e.nodeType === 1 && e !== h && y.push(e);
                return y
            },
            G = n.expr.match.needsContext;

        function K(e, h) {
            return e.nodeName && e.nodeName.toLowerCase() === h.toLowerCase()
        }
        var U = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

        function te(e, h, y) {
            return d(h) ? n.grep(e, function(x, I) {
                return !!h.call(x, I, x) !== y
            }) : h.nodeType ? n.grep(e, function(x) {
                return x === h !== y
            }) : typeof h != "string" ? n.grep(e, function(x) {
                return s.call(h, x) > -1 !== y
            }) : n.filter(h, e, y)
        }
        n.filter = function(e, h, y) {
            var x = h[0];
            return y && (e = ":not(" + e + ")"), h.length === 1 && x.nodeType === 1 ? n.find.matchesSelector(x, e) ? [x] : [] : n.find.matches(e, n.grep(h, function(I) {
                return I.nodeType === 1
            }))
        }, n.fn.extend({
            find: function(e) {
                var h, y, x = this.length,
                    I = this;
                if (typeof e != "string") return this.pushStack(n(e).filter(function() {
                    for (h = 0; h < x; h++)
                        if (n.contains(I[h], this)) return !0
                }));
                for (y = this.pushStack([]), h = 0; h < x; h++) n.find(e, I[h], y);
                return x > 1 ? n.uniqueSort(y) : y
            },
            filter: function(e) {
                return this.pushStack(te(this, e || [], !1))
            },
            not: function(e) {
                return this.pushStack(te(this, e || [], !0))
            },
            is: function(e) {
                return !!te(this, typeof e == "string" && G.test(e) ? n(e) : e || [], !1).length
            }
        });
        var fe, ye = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
            Fe = n.fn.init = function(e, h, y) {
                var x, I;
                if (!e) return this;
                if (y = y || fe, typeof e == "string")
                    if (e[0] === "<" && e[e.length - 1] === ">" && e.length >= 3 ? x = [null, e, null] : x = ye.exec(e), x && (x[1] || !h))
                        if (x[1]) {
                            if (h = h instanceof n ? h[0] : h, n.merge(this, n.parseHTML(x[1], h && h.nodeType ? h.ownerDocument || h : o, !0)), U.test(x[1]) && n.isPlainObject(h))
                                for (x in h) d(this[x]) ? this[x](h[x]) : this.attr(x, h[x]);
                            return this
                        } else return I = o.getElementById(x[2]), I && (this[0] = I, this.length = 1), this;
                else return !h || h.jquery ? (h || y).find(e) : this.constructor(h).find(e);
                else {
                    if (e.nodeType) return this[0] = e, this.length = 1, this;
                    if (d(e)) return y.ready !== void 0 ? y.ready(e) : e(n)
                }
                return n.makeArray(e, this)
            };
        Fe.prototype = n.fn, fe = n(o);
        var ge = /^(?:parents|prev(?:Until|All))/,
            O = {
                children: !0,
                contents: !0,
                next: !0,
                prev: !0
            };
        n.fn.extend({
            has: function(e) {
                var h = n(e, this),
                    y = h.length;
                return this.filter(function() {
                    for (var x = 0; x < y; x++)
                        if (n.contains(this, h[x])) return !0
                })
            },
            closest: function(e, h) {
                var y, x = 0,
                    I = this.length,
                    B = [],
                    M = typeof e != "string" && n(e);
                if (!G.test(e)) {
                    for (; x < I; x++)
                        for (y = this[x]; y && y !== h; y = y.parentNode)
                            if (y.nodeType < 11 && (M ? M.index(y) > -1 : y.nodeType === 1 && n.find.matchesSelector(y, e))) {
                                B.push(y);
                                break
                            }
                }
                return this.pushStack(B.length > 1 ? n.uniqueSort(B) : B)
            },
            index: function(e) {
                return e ? typeof e == "string" ? s.call(n(e), this[0]) : s.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
            },
            add: function(e, h) {
                return this.pushStack(n.uniqueSort(n.merge(this.get(), n(e, h))))
            },
            addBack: function(e) {
                return this.add(e == null ? this.prevObject : this.prevObject.filter(e))
            }
        });

        function Z(e, h) {
            for (;
                (e = e[h]) && e.nodeType !== 1;);
            return e
        }
        n.each({
            parent: function(e) {
                var h = e.parentNode;
                return h && h.nodeType !== 11 ? h : null
            },
            parents: function(e) {
                return L(e, "parentNode")
            },
            parentsUntil: function(e, h, y) {
                return L(e, "parentNode", y)
            },
            next: function(e) {
                return Z(e, "nextSibling")
            },
            prev: function(e) {
                return Z(e, "previousSibling")
            },
            nextAll: function(e) {
                return L(e, "nextSibling")
            },
            prevAll: function(e) {
                return L(e, "previousSibling")
            },
            nextUntil: function(e, h, y) {
                return L(e, "nextSibling", y)
            },
            prevUntil: function(e, h, y) {
                return L(e, "previousSibling", y)
            },
            siblings: function(e) {
                return z((e.parentNode || {}).firstChild, e)
            },
            children: function(e) {
                return z(e.firstChild)
            },
            contents: function(e) {
                return e.contentDocument != null && R(e.contentDocument) ? e.contentDocument : (K(e, "template") && (e = e.content || e), n.merge([], e.childNodes))
            }
        }, function(e, h) {
            n.fn[e] = function(y, x) {
                var I = n.map(this, h, y);
                return e.slice(-5) !== "Until" && (x = y), x && typeof x == "string" && (I = n.filter(x, I)), this.length > 1 && (O[e] || n.uniqueSort(I), ge.test(e) && I.reverse()), this.pushStack(I)
            }
        });
        var q = /[^\x20\t\r\n\f]+/g;

        function re(e) {
            var h = {};
            return n.each(e.match(q) || [], function(y, x) {
                h[x] = !0
            }), h
        }
        n.Callbacks = function(e) {
            e = typeof e == "string" ? re(e) : n.extend({}, e);
            var h, y, x, I, B = [],
                M = [],
                Q = -1,
                Y = function() {
                    for (I = I || e.once, x = h = !0; M.length; Q = -1)
                        for (y = M.shift(); ++Q < B.length;) B[Q].apply(y[0], y[1]) === !1 && e.stopOnFalse && (Q = B.length, y = !1);
                    e.memory || (y = !1), h = !1, I && (y ? B = [] : B = "")
                },
                le = {
                    add: function() {
                        return B && (y && !h && (Q = B.length - 1, M.push(y)), function de(ke) {
                            n.each(ke, function(he, ve) {
                                d(ve) ? (!e.unique || !le.has(ve)) && B.push(ve) : ve && ve.length && b(ve) !== "string" && de(ve)
                            })
                        }(arguments), y && !h && Y()), this
                    },
                    remove: function() {
                        return n.each(arguments, function(de, ke) {
                            for (var he;
                                (he = n.inArray(ke, B, he)) > -1;) B.splice(he, 1), he <= Q && Q--
                        }), this
                    },
                    has: function(de) {
                        return de ? n.inArray(de, B) > -1 : B.length > 0
                    },
                    empty: function() {
                        return B && (B = []), this
                    },
                    disable: function() {
                        return I = M = [], B = y = "", this
                    },
                    disabled: function() {
                        return !B
                    },
                    lock: function() {
                        return I = M = [], !y && !h && (B = y = ""), this
                    },
                    locked: function() {
                        return !!I
                    },
                    fireWith: function(de, ke) {
                        return I || (ke = ke || [], ke = [de, ke.slice ? ke.slice() : ke], M.push(ke), h || Y()), this
                    },
                    fire: function() {
                        return le.fireWith(this, arguments), this
                    },
                    fired: function() {
                        return !!x
                    }
                };
            return le
        };

        function we(e) {
            return e
        }

        function Ee(e) {
            throw e
        }

        function je(e, h, y, x) {
            var I;
            try {
                e && d(I = e.promise) ? I.call(e).done(h).fail(y) : e && d(I = e.then) ? I.call(e, h, y) : h.apply(void 0, [e].slice(x))
            } catch (B) {
                y.apply(void 0, [B])
            }
        }
        n.extend({
            Deferred: function(e) {
                var h = [
                        ["notify", "progress", n.Callbacks("memory"), n.Callbacks("memory"), 2],
                        ["resolve", "done", n.Callbacks("once memory"), n.Callbacks("once memory"), 0, "resolved"],
                        ["reject", "fail", n.Callbacks("once memory"), n.Callbacks("once memory"), 1, "rejected"]
                    ],
                    y = "pending",
                    x = {
                        state: function() {
                            return y
                        },
                        always: function() {
                            return I.done(arguments).fail(arguments), this
                        },
                        catch: function(B) {
                            return x.then(null, B)
                        },
                        pipe: function() {
                            var B = arguments;
                            return n.Deferred(function(M) {
                                n.each(h, function(Q, Y) {
                                    var le = d(B[Y[4]]) && B[Y[4]];
                                    I[Y[1]](function() {
                                        var de = le && le.apply(this, arguments);
                                        de && d(de.promise) ? de.promise().progress(M.notify).done(M.resolve).fail(M.reject) : M[Y[0] + "With"](this, le ? [de] : arguments)
                                    })
                                }), B = null
                            }).promise()
                        },
                        then: function(B, M, Q) {
                            var Y = 0;

                            function le(de, ke, he, ve) {
                                return function() {
                                    var Ze = this,
                                        it = arguments,
                                        qe = function() {
                                            var Nt, sr;
                                            if (!(de < Y)) {
                                                if (Nt = he.apply(Ze, it), Nt === ke.promise()) throw new TypeError("Thenable self-resolution");
                                                sr = Nt && (typeof Nt == "object" || typeof Nt == "function") && Nt.then, d(sr) ? ve ? sr.call(Nt, le(Y, ke, we, ve), le(Y, ke, Ee, ve)) : (Y++, sr.call(Nt, le(Y, ke, we, ve), le(Y, ke, Ee, ve), le(Y, ke, we, ke.notifyWith))) : (he !== we && (Ze = void 0, it = [Nt]), (ve || ke.resolveWith)(Ze, it))
                                            }
                                        },
                                        $t = ve ? qe : function() {
                                            try {
                                                qe()
                                            } catch (Nt) {
                                                n.Deferred.exceptionHook && n.Deferred.exceptionHook(Nt, $t.stackTrace), de + 1 >= Y && (he !== Ee && (Ze = void 0, it = [Nt]), ke.rejectWith(Ze, it))
                                            }
                                        };
                                    de ? $t() : (n.Deferred.getStackHook && ($t.stackTrace = n.Deferred.getStackHook()), t.setTimeout($t))
                                }
                            }
                            return n.Deferred(function(de) {
                                h[0][3].add(le(0, de, d(Q) ? Q : we, de.notifyWith)), h[1][3].add(le(0, de, d(B) ? B : we)), h[2][3].add(le(0, de, d(M) ? M : Ee))
                            }).promise()
                        },
                        promise: function(B) {
                            return B != null ? n.extend(B, x) : x
                        }
                    },
                    I = {};
                return n.each(h, function(B, M) {
                    var Q = M[2],
                        Y = M[5];
                    x[M[1]] = Q.add, Y && Q.add(function() {
                        y = Y
                    }, h[3 - B][2].disable, h[3 - B][3].disable, h[0][2].lock, h[0][3].lock), Q.add(M[3].fire), I[M[0]] = function() {
                        return I[M[0] + "With"](this === I ? void 0 : this, arguments), this
                    }, I[M[0] + "With"] = Q.fireWith
                }), x.promise(I), e && e.call(I, I), I
            },
            when: function(e) {
                var h = arguments.length,
                    y = h,
                    x = Array(y),
                    I = E.call(arguments),
                    B = n.Deferred(),
                    M = function(Q) {
                        return function(Y) {
                            x[Q] = this, I[Q] = arguments.length > 1 ? E.call(arguments) : Y, --h || B.resolveWith(x, I)
                        }
                    };
                if (h <= 1 && (je(e, B.done(M(y)).resolve, B.reject, !h), B.state() === "pending" || d(I[y] && I[y].then))) return B.then();
                for (; y--;) je(I[y], M(y), B.reject);
                return B.promise()
            }
        });
        var ze = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
        n.Deferred.exceptionHook = function(e, h) {
            t.console && t.console.warn && e && ze.test(e.name) && t.console.warn("jQuery.Deferred exception: " + e.message, e.stack, h)
        }, n.readyException = function(e) {
            t.setTimeout(function() {
                throw e
            })
        };
        var oe = n.Deferred();
        n.fn.ready = function(e) {
            return oe.then(e).catch(function(h) {
                n.readyException(h)
            }), this
        }, n.extend({
            isReady: !1,
            readyWait: 1,
            ready: function(e) {
                (e === !0 ? --n.readyWait : n.isReady) || (n.isReady = !0, !(e !== !0 && --n.readyWait > 0) && oe.resolveWith(o, [n]))
            }
        }), n.ready.then = oe.then;

        function W() {
            o.removeEventListener("DOMContentLoaded", W), t.removeEventListener("load", W), n.ready()
        }
        o.readyState === "complete" || o.readyState !== "loading" && !o.documentElement.doScroll ? t.setTimeout(n.ready) : (o.addEventListener("DOMContentLoaded", W), t.addEventListener("load", W));
        var Ce = function(e, h, y, x, I, B, M) {
                var Q = 0,
                    Y = e.length,
                    le = y == null;
                if (b(y) === "object") {
                    I = !0;
                    for (Q in y) Ce(e, h, Q, y[Q], !0, B, M)
                } else if (x !== void 0 && (I = !0, d(x) || (M = !0), le && (M ? (h.call(e, x), h = null) : (le = h, h = function(de, ke, he) {
                        return le.call(n(de), he)
                    })), h))
                    for (; Q < Y; Q++) h(e[Q], y, M ? x : x.call(e[Q], Q, h(e[Q], y)));
                return I ? e : le ? h.call(e) : Y ? h(e[0], y) : B
            },
            pe = /^-ms-/,
            Ne = /-([a-z])/g;

        function Pe(e, h) {
            return h.toUpperCase()
        }

        function Xe(e) {
            return e.replace(pe, "ms-").replace(Ne, Pe)
        }
        var ut = function(e) {
            return e.nodeType === 1 || e.nodeType === 9 || !+e.nodeType
        };

        function ct() {
            this.expando = n.expando + ct.uid++
        }
        ct.uid = 1, ct.prototype = {
            cache: function(e) {
                var h = e[this.expando];
                return h || (h = {}, ut(e) && (e.nodeType ? e[this.expando] = h : Object.defineProperty(e, this.expando, {
                    value: h,
                    configurable: !0
                }))), h
            },
            set: function(e, h, y) {
                var x, I = this.cache(e);
                if (typeof h == "string") I[Xe(h)] = y;
                else
                    for (x in h) I[Xe(x)] = h[x];
                return I
            },
            get: function(e, h) {
                return h === void 0 ? this.cache(e) : e[this.expando] && e[this.expando][Xe(h)]
            },
            access: function(e, h, y) {
                return h === void 0 || h && typeof h == "string" && y === void 0 ? this.get(e, h) : (this.set(e, h, y), y !== void 0 ? y : h)
            },
            remove: function(e, h) {
                var y, x = e[this.expando];
                if (x !== void 0) {
                    if (h !== void 0)
                        for (Array.isArray(h) ? h = h.map(Xe) : (h = Xe(h), h = h in x ? [h] : h.match(q) || []), y = h.length; y--;) delete x[h[y]];
                    (h === void 0 || n.isEmptyObject(x)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando])
                }
            },
            hasData: function(e) {
                var h = e[this.expando];
                return h !== void 0 && !n.isEmptyObject(h)
            }
        };
        var $e = new ct,
            Ve = new ct,
            rr = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
            gr = /[A-Z]/g;

        function vr(e) {
            return e === "true" ? !0 : e === "false" ? !1 : e === "null" ? null : e === +e + "" ? +e : rr.test(e) ? JSON.parse(e) : e
        }

        function cr(e, h, y) {
            var x;
            if (y === void 0 && e.nodeType === 1)
                if (x = "data-" + h.replace(gr, "-$&").toLowerCase(), y = e.getAttribute(x), typeof y == "string") {
                    try {
                        y = vr(y)
                    } catch {}
                    Ve.set(e, h, y)
                } else y = void 0;
            return y
        }
        n.extend({
            hasData: function(e) {
                return Ve.hasData(e) || $e.hasData(e)
            },
            data: function(e, h, y) {
                return Ve.access(e, h, y)
            },
            removeData: function(e, h) {
                Ve.remove(e, h)
            },
            _data: function(e, h, y) {
                return $e.access(e, h, y)
            },
            _removeData: function(e, h) {
                $e.remove(e, h)
            }
        }), n.fn.extend({
            data: function(e, h) {
                var y, x, I, B = this[0],
                    M = B && B.attributes;
                if (e === void 0) {
                    if (this.length && (I = Ve.get(B), B.nodeType === 1 && !$e.get(B, "hasDataAttrs"))) {
                        for (y = M.length; y--;) M[y] && (x = M[y].name, x.indexOf("data-") === 0 && (x = Xe(x.slice(5)), cr(B, x, I[x])));
                        $e.set(B, "hasDataAttrs", !0)
                    }
                    return I
                }
                return typeof e == "object" ? this.each(function() {
                    Ve.set(this, e)
                }) : Ce(this, function(Q) {
                    var Y;
                    if (B && Q === void 0) return Y = Ve.get(B, e), Y !== void 0 || (Y = cr(B, e), Y !== void 0) ? Y : void 0;
                    this.each(function() {
                        Ve.set(this, e, Q)
                    })
                }, null, h, arguments.length > 1, null, !0)
            },
            removeData: function(e) {
                return this.each(function() {
                    Ve.remove(this, e)
                })
            }
        }), n.extend({
            queue: function(e, h, y) {
                var x;
                if (e) return h = (h || "fx") + "queue", x = $e.get(e, h), y && (!x || Array.isArray(y) ? x = $e.access(e, h, n.makeArray(y)) : x.push(y)), x || []
            },
            dequeue: function(e, h) {
                h = h || "fx";
                var y = n.queue(e, h),
                    x = y.length,
                    I = y.shift(),
                    B = n._queueHooks(e, h),
                    M = function() {
                        n.dequeue(e, h)
                    };
                I === "inprogress" && (I = y.shift(), x--), I && (h === "fx" && y.unshift("inprogress"), delete B.stop, I.call(e, M, B)), !x && B && B.empty.fire()
            },
            _queueHooks: function(e, h) {
                var y = h + "queueHooks";
                return $e.get(e, y) || $e.access(e, y, {
                    empty: n.Callbacks("once memory").add(function() {
                        $e.remove(e, [h + "queue", y])
                    })
                })
            }
        }), n.fn.extend({
            queue: function(e, h) {
                var y = 2;
                return typeof e != "string" && (h = e, e = "fx", y--), arguments.length < y ? n.queue(this[0], e) : h === void 0 ? this : this.each(function() {
                    var x = n.queue(this, e, h);
                    n._queueHooks(this, e), e === "fx" && x[0] !== "inprogress" && n.dequeue(this, e)
                })
            },
            dequeue: function(e) {
                return this.each(function() {
                    n.dequeue(this, e)
                })
            },
            clearQueue: function(e) {
                return this.queue(e || "fx", [])
            },
            promise: function(e, h) {
                var y, x = 1,
                    I = n.Deferred(),
                    B = this,
                    M = this.length,
                    Q = function() {
                        --x || I.resolveWith(B, [B])
                    };
                for (typeof e != "string" && (h = e, e = void 0), e = e || "fx"; M--;) y = $e.get(B[M], e + "queueHooks"), y && y.empty && (x++, y.empty.add(Q));
                return Q(), I.promise(h)
            }
        });
        var nt = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
            F = new RegExp("^(?:([+-])=|)(" + nt + ")([a-z%]*)$", "i"),
            kt = ["Top", "Right", "Bottom", "Left"],
            Et = o.documentElement,
            Ht = function(e) {
                return n.contains(e.ownerDocument, e)
            },
            mr = {
                composed: !0
            };
        Et.getRootNode && (Ht = function(e) {
            return n.contains(e.ownerDocument, e) || e.getRootNode(mr) === e.ownerDocument
        });
        var Lt = function(e, h) {
            return e = h || e, e.style.display === "none" || e.style.display === "" && Ht(e) && n.css(e, "display") === "none"
        };

        function Zt(e, h, y, x) {
            var I, B, M = 20,
                Q = x ? function() {
                    return x.cur()
                } : function() {
                    return n.css(e, h, "")
                },
                Y = Q(),
                le = y && y[3] || (n.cssNumber[h] ? "" : "px"),
                de = e.nodeType && (n.cssNumber[h] || le !== "px" && +Y) && F.exec(n.css(e, h));
            if (de && de[3] !== le) {
                for (Y = Y / 2, le = le || de[3], de = +Y || 1; M--;) n.style(e, h, de + le), (1 - B) * (1 - (B = Q() / Y || .5)) <= 0 && (M = 0), de = de / B;
                de = de * 2, n.style(e, h, de + le), y = y || []
            }
            return y && (de = +de || +Y || 0, I = y[1] ? de + (y[1] + 1) * y[2] : +y[2], x && (x.unit = le, x.start = de, x.end = I)), I
        }
        var Dt = {};

        function Pt(e) {
            var h, y = e.ownerDocument,
                x = e.nodeName,
                I = Dt[x];
            return I || (h = y.body.appendChild(y.createElement(x)), I = n.css(h, "display"), h.parentNode.removeChild(h), I === "none" && (I = "block"), Dt[x] = I, I)
        }

        function ot(e, h) {
            for (var y, x, I = [], B = 0, M = e.length; B < M; B++) x = e[B], x.style && (y = x.style.display, h ? (y === "none" && (I[B] = $e.get(x, "display") || null, I[B] || (x.style.display = "")), x.style.display === "" && Lt(x) && (I[B] = Pt(x))) : y !== "none" && (I[B] = "none", $e.set(x, "display", y)));
            for (B = 0; B < M; B++) I[B] != null && (e[B].style.display = I[B]);
            return e
        }
        n.fn.extend({
            show: function() {
                return ot(this, !0)
            },
            hide: function() {
                return ot(this)
            },
            toggle: function(e) {
                return typeof e == "boolean" ? e ? this.show() : this.hide() : this.each(function() {
                    Lt(this) ? n(this).show() : n(this).hide()
                })
            }
        });
        var Tt = /^(?:checkbox|radio)$/i,
            Ar = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
            Fr = /^$|^module$|\/(?:java|ecma)script/i;
        (function() {
            var e = o.createDocumentFragment(),
                h = e.appendChild(o.createElement("div")),
                y = o.createElement("input");
            y.setAttribute("type", "radio"), y.setAttribute("checked", "checked"), y.setAttribute("name", "t"), h.appendChild(y), D.checkClone = h.cloneNode(!0).cloneNode(!0).lastChild.checked, h.innerHTML = "<textarea>x</textarea>", D.noCloneChecked = !!h.cloneNode(!0).lastChild.defaultValue, h.innerHTML = "<option></option>", D.option = !!h.lastChild
        })();
        var wt = {
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""]
        };
        wt.tbody = wt.tfoot = wt.colgroup = wt.caption = wt.thead, wt.th = wt.td, D.option || (wt.optgroup = wt.option = [1, "<select multiple='multiple'>", "</select>"]);

        function It(e, h) {
            var y;
            return typeof e.getElementsByTagName < "u" ? y = e.getElementsByTagName(h || "*") : typeof e.querySelectorAll < "u" ? y = e.querySelectorAll(h || "*") : y = [], h === void 0 || h && K(e, h) ? n.merge([e], y) : y
        }

        function br(e, h) {
            for (var y = 0, x = e.length; y < x; y++) $e.set(e[y], "globalEval", !h || $e.get(h[y], "globalEval"))
        }
        var Nr = /<|&#?\w+;/;

        function Hr(e, h, y, x, I) {
            for (var B, M, Q, Y, le, de, ke = h.createDocumentFragment(), he = [], ve = 0, Ze = e.length; ve < Ze; ve++)
                if (B = e[ve], B || B === 0)
                    if (b(B) === "object") n.merge(he, B.nodeType ? [B] : B);
                    else if (!Nr.test(B)) he.push(h.createTextNode(B));
            else {
                for (M = M || ke.appendChild(h.createElement("div")), Q = (Ar.exec(B) || ["", ""])[1].toLowerCase(), Y = wt[Q] || wt._default, M.innerHTML = Y[1] + n.htmlPrefilter(B) + Y[2], de = Y[0]; de--;) M = M.lastChild;
                n.merge(he, M.childNodes), M = ke.firstChild, M.textContent = ""
            }
            for (ke.textContent = "", ve = 0; B = he[ve++];) {
                if (x && n.inArray(B, x) > -1) {
                    I && I.push(B);
                    continue
                }
                if (le = Ht(B), M = It(ke.appendChild(B), "script"), le && br(M), y)
                    for (de = 0; B = M[de++];) Fr.test(B.type || "") && y.push(B)
            }
            return ke
        }
        var ir = /^([^.]*)(?:\.(.+)|)/;

        function jt() {
            return !0
        }

        function yr() {
            return !1
        }

        function Ft(e, h) {
            return e === Cr() == (h === "focus")
        }

        function Cr() {
            try {
                return o.activeElement
            } catch {}
        }

        function ur(e, h, y, x, I, B) {
            var M, Q;
            if (typeof h == "object") {
                typeof y != "string" && (x = x || y, y = void 0);
                for (Q in h) ur(e, Q, y, x, h[Q], B);
                return e
            }
            if (x == null && I == null ? (I = y, x = y = void 0) : I == null && (typeof y == "string" ? (I = x, x = void 0) : (I = x, x = y, y = void 0)), I === !1) I = yr;
            else if (!I) return e;
            return B === 1 && (M = I, I = function(Y) {
                return n().off(Y), M.apply(this, arguments)
            }, I.guid = M.guid || (M.guid = n.guid++)), e.each(function() {
                n.event.add(this, h, I, x, y)
            })
        }
        n.event = {
            global: {},
            add: function(e, h, y, x, I) {
                var B, M, Q, Y, le, de, ke, he, ve, Ze, it, qe = $e.get(e);
                if (ut(e))
                    for (y.handler && (B = y, y = B.handler, I = B.selector), I && n.find.matchesSelector(Et, I), y.guid || (y.guid = n.guid++), (Y = qe.events) || (Y = qe.events = Object.create(null)), (M = qe.handle) || (M = qe.handle = function($t) {
                            return typeof n < "u" && n.event.triggered !== $t.type ? n.event.dispatch.apply(e, arguments) : void 0
                        }), h = (h || "").match(q) || [""], le = h.length; le--;) Q = ir.exec(h[le]) || [], ve = it = Q[1], Ze = (Q[2] || "").split(".").sort(), ve && (ke = n.event.special[ve] || {}, ve = (I ? ke.delegateType : ke.bindType) || ve, ke = n.event.special[ve] || {}, de = n.extend({
                        type: ve,
                        origType: it,
                        data: x,
                        handler: y,
                        guid: y.guid,
                        selector: I,
                        needsContext: I && n.expr.match.needsContext.test(I),
                        namespace: Ze.join(".")
                    }, B), (he = Y[ve]) || (he = Y[ve] = [], he.delegateCount = 0, (!ke.setup || ke.setup.call(e, x, Ze, M) === !1) && e.addEventListener && e.addEventListener(ve, M)), ke.add && (ke.add.call(e, de), de.handler.guid || (de.handler.guid = y.guid)), I ? he.splice(he.delegateCount++, 0, de) : he.push(de), n.event.global[ve] = !0)
            },
            remove: function(e, h, y, x, I) {
                var B, M, Q, Y, le, de, ke, he, ve, Ze, it, qe = $e.hasData(e) && $e.get(e);
                if (!(!qe || !(Y = qe.events))) {
                    for (h = (h || "").match(q) || [""], le = h.length; le--;) {
                        if (Q = ir.exec(h[le]) || [], ve = it = Q[1], Ze = (Q[2] || "").split(".").sort(), !ve) {
                            for (ve in Y) n.event.remove(e, ve + h[le], y, x, !0);
                            continue
                        }
                        for (ke = n.event.special[ve] || {}, ve = (x ? ke.delegateType : ke.bindType) || ve, he = Y[ve] || [], Q = Q[2] && new RegExp("(^|\\.)" + Ze.join("\\.(?:.*\\.|)") + "(\\.|$)"), M = B = he.length; B--;) de = he[B], (I || it === de.origType) && (!y || y.guid === de.guid) && (!Q || Q.test(de.namespace)) && (!x || x === de.selector || x === "**" && de.selector) && (he.splice(B, 1), de.selector && he.delegateCount--, ke.remove && ke.remove.call(e, de));
                        M && !he.length && ((!ke.teardown || ke.teardown.call(e, Ze, qe.handle) === !1) && n.removeEvent(e, ve, qe.handle), delete Y[ve])
                    }
                    n.isEmptyObject(Y) && $e.remove(e, "handle events")
                }
            },
            dispatch: function(e) {
                var h, y, x, I, B, M, Q = new Array(arguments.length),
                    Y = n.event.fix(e),
                    le = ($e.get(this, "events") || Object.create(null))[Y.type] || [],
                    de = n.event.special[Y.type] || {};
                for (Q[0] = Y, h = 1; h < arguments.length; h++) Q[h] = arguments[h];
                if (Y.delegateTarget = this, !(de.preDispatch && de.preDispatch.call(this, Y) === !1)) {
                    for (M = n.event.handlers.call(this, Y, le), h = 0;
                        (I = M[h++]) && !Y.isPropagationStopped();)
                        for (Y.currentTarget = I.elem, y = 0;
                            (B = I.handlers[y++]) && !Y.isImmediatePropagationStopped();)(!Y.rnamespace || B.namespace === !1 || Y.rnamespace.test(B.namespace)) && (Y.handleObj = B, Y.data = B.data, x = ((n.event.special[B.origType] || {}).handle || B.handler).apply(I.elem, Q), x !== void 0 && (Y.result = x) === !1 && (Y.preventDefault(), Y.stopPropagation()));
                    return de.postDispatch && de.postDispatch.call(this, Y), Y.result
                }
            },
            handlers: function(e, h) {
                var y, x, I, B, M, Q = [],
                    Y = h.delegateCount,
                    le = e.target;
                if (Y && le.nodeType && !(e.type === "click" && e.button >= 1)) {
                    for (; le !== this; le = le.parentNode || this)
                        if (le.nodeType === 1 && !(e.type === "click" && le.disabled === !0)) {
                            for (B = [], M = {}, y = 0; y < Y; y++) x = h[y], I = x.selector + " ", M[I] === void 0 && (M[I] = x.needsContext ? n(I, this).index(le) > -1 : n.find(I, this, null, [le]).length), M[I] && B.push(x);
                            B.length && Q.push({
                                elem: le,
                                handlers: B
                            })
                        }
                }
                return le = this, Y < h.length && Q.push({
                    elem: le,
                    handlers: h.slice(Y)
                }), Q
            },
            addProp: function(e, h) {
                Object.defineProperty(n.Event.prototype, e, {
                    enumerable: !0,
                    configurable: !0,
                    get: d(h) ? function() {
                        if (this.originalEvent) return h(this.originalEvent)
                    } : function() {
                        if (this.originalEvent) return this.originalEvent[e]
                    },
                    set: function(y) {
                        Object.defineProperty(this, e, {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: y
                        })
                    }
                })
            },
            fix: function(e) {
                return e[n.expando] ? e : new n.Event(e)
            },
            special: {
                load: {
                    noBubble: !0
                },
                click: {
                    setup: function(e) {
                        var h = this || e;
                        return Tt.test(h.type) && h.click && K(h, "input") && Dr(h, "click", jt), !1
                    },
                    trigger: function(e) {
                        var h = this || e;
                        return Tt.test(h.type) && h.click && K(h, "input") && Dr(h, "click"), !0
                    },
                    _default: function(e) {
                        var h = e.target;
                        return Tt.test(h.type) && h.click && K(h, "input") && $e.get(h, "click") || K(h, "a")
                    }
                },
                beforeunload: {
                    postDispatch: function(e) {
                        e.result !== void 0 && e.originalEvent && (e.originalEvent.returnValue = e.result)
                    }
                }
            }
        };

        function Dr(e, h, y) {
            if (!y) {
                $e.get(e, h) === void 0 && n.event.add(e, h, jt);
                return
            }
            $e.set(e, h, !1), n.event.add(e, h, {
                namespace: !1,
                handler: function(x) {
                    var I, B, M = $e.get(this, h);
                    if (x.isTrigger & 1 && this[h]) {
                        if (M.length)(n.event.special[h] || {}).delegateType && x.stopPropagation();
                        else if (M = E.call(arguments), $e.set(this, h, M), I = y(this, h), this[h](), B = $e.get(this, h), M !== B || I ? $e.set(this, h, !1) : B = {}, M !== B) return x.stopImmediatePropagation(), x.preventDefault(), B && B.value
                    } else M.length && ($e.set(this, h, {
                        value: n.event.trigger(n.extend(M[0], n.Event.prototype), M.slice(1), this)
                    }), x.stopImmediatePropagation())
                }
            })
        }
        n.removeEvent = function(e, h, y) {
            e.removeEventListener && e.removeEventListener(h, y)
        }, n.Event = function(e, h) {
            if (!(this instanceof n.Event)) return new n.Event(e, h);
            e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || e.defaultPrevented === void 0 && e.returnValue === !1 ? jt : yr, this.target = e.target && e.target.nodeType === 3 ? e.target.parentNode : e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, h && n.extend(this, h), this.timeStamp = e && e.timeStamp || Date.now(), this[n.expando] = !0
        }, n.Event.prototype = {
            constructor: n.Event,
            isDefaultPrevented: yr,
            isPropagationStopped: yr,
            isImmediatePropagationStopped: yr,
            isSimulated: !1,
            preventDefault: function() {
                var e = this.originalEvent;
                this.isDefaultPrevented = jt, e && !this.isSimulated && e.preventDefault()
            },
            stopPropagation: function() {
                var e = this.originalEvent;
                this.isPropagationStopped = jt, e && !this.isSimulated && e.stopPropagation()
            },
            stopImmediatePropagation: function() {
                var e = this.originalEvent;
                this.isImmediatePropagationStopped = jt, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation()
            }
        }, n.each({
            altKey: !0,
            bubbles: !0,
            cancelable: !0,
            changedTouches: !0,
            ctrlKey: !0,
            detail: !0,
            eventPhase: !0,
            metaKey: !0,
            pageX: !0,
            pageY: !0,
            shiftKey: !0,
            view: !0,
            char: !0,
            code: !0,
            charCode: !0,
            key: !0,
            keyCode: !0,
            button: !0,
            buttons: !0,
            clientX: !0,
            clientY: !0,
            offsetX: !0,
            offsetY: !0,
            pointerId: !0,
            pointerType: !0,
            screenX: !0,
            screenY: !0,
            targetTouches: !0,
            toElement: !0,
            touches: !0,
            which: !0
        }, n.event.addProp), n.each({
            focus: "focusin",
            blur: "focusout"
        }, function(e, h) {
            n.event.special[e] = {
                setup: function() {
                    return Dr(this, e, Ft), !1
                },
                trigger: function() {
                    return Dr(this, e), !0
                },
                _default: function(y) {
                    return $e.get(y.target, e)
                },
                delegateType: h
            }
        }), n.each({
            mouseenter: "mouseover",
            mouseleave: "mouseout",
            pointerenter: "pointerover",
            pointerleave: "pointerout"
        }, function(e, h) {
            n.event.special[e] = {
                delegateType: h,
                bindType: h,
                handle: function(y) {
                    var x, I = this,
                        B = y.relatedTarget,
                        M = y.handleObj;
                    return (!B || B !== I && !n.contains(I, B)) && (y.type = M.origType, x = M.handler.apply(this, arguments), y.type = h), x
                }
            }
        }), n.fn.extend({
            on: function(e, h, y, x) {
                return ur(this, e, h, y, x)
            },
            one: function(e, h, y, x) {
                return ur(this, e, h, y, x, 1)
            },
            off: function(e, h, y) {
                var x, I;
                if (e && e.preventDefault && e.handleObj) return x = e.handleObj, n(e.delegateTarget).off(x.namespace ? x.origType + "." + x.namespace : x.origType, x.selector, x.handler), this;
                if (typeof e == "object") {
                    for (I in e) this.off(I, h, e[I]);
                    return this
                }
                return (h === !1 || typeof h == "function") && (y = h, h = void 0), y === !1 && (y = yr), this.each(function() {
                    n.event.remove(this, e, y, h)
                })
            }
        });
        var ft = /<script|<style|<link/i,
            $r = /checked\s*(?:[^=]|=\s*.checked.)/i,
            kr = /^\s*<!\[CDATA\[|\]\]>\s*$/g;

        function hr(e, h) {
            return K(e, "table") && K(h.nodeType !== 11 ? h : h.firstChild, "tr") && n(e).children("tbody")[0] || e
        }

        function Ut(e) {
            return e.type = (e.getAttribute("type") !== null) + "/" + e.type, e
        }

        function ee(e) {
            return (e.type || "").slice(0, 5) === "true/" ? e.type = e.type.slice(5) : e.removeAttribute("type"), e
        }

        function Rr(e, h) {
            var y, x, I, B, M, Q, Y;
            if (h.nodeType === 1) {
                if ($e.hasData(e) && (B = $e.get(e), Y = B.events, Y)) {
                    $e.remove(h, "handle events");
                    for (I in Y)
                        for (y = 0, x = Y[I].length; y < x; y++) n.event.add(h, I, Y[I][y])
                }
                Ve.hasData(e) && (M = Ve.access(e), Q = n.extend({}, M), Ve.set(h, Q))
            }
        }

        function Vt(e, h) {
            var y = h.nodeName.toLowerCase();
            y === "input" && Tt.test(e.type) ? h.checked = e.checked : (y === "input" || y === "textarea") && (h.defaultValue = e.defaultValue)
        }

        function _t(e, h, y, x) {
            h = C(h);
            var I, B, M, Q, Y, le, de = 0,
                ke = e.length,
                he = ke - 1,
                ve = h[0],
                Ze = d(ve);
            if (Ze || ke > 1 && typeof ve == "string" && !D.checkClone && $r.test(ve)) return e.each(function(it) {
                var qe = e.eq(it);
                Ze && (h[0] = ve.call(this, it, qe.html())), _t(qe, h, y, x)
            });
            if (ke && (I = Hr(h, e[0].ownerDocument, !1, e, x), B = I.firstChild, I.childNodes.length === 1 && (I = B), B || x)) {
                for (M = n.map(It(I, "script"), Ut), Q = M.length; de < ke; de++) Y = I, de !== he && (Y = n.clone(Y, !0, !0), Q && n.merge(M, It(Y, "script"))), y.call(e[de], Y, de);
                if (Q)
                    for (le = M[M.length - 1].ownerDocument, n.map(M, ee), de = 0; de < Q; de++) Y = M[de], Fr.test(Y.type || "") && !$e.access(Y, "globalEval") && n.contains(le, Y) && (Y.src && (Y.type || "").toLowerCase() !== "module" ? n._evalUrl && !Y.noModule && n._evalUrl(Y.src, {
                        nonce: Y.nonce || Y.getAttribute("nonce")
                    }, le) : l(Y.textContent.replace(kr, ""), Y, le))
            }
            return e
        }

        function Ot(e, h, y) {
            for (var x, I = h ? n.filter(h, e) : e, B = 0;
                (x = I[B]) != null; B++) !y && x.nodeType === 1 && n.cleanData(It(x)), x.parentNode && (y && Ht(x) && br(It(x, "script")), x.parentNode.removeChild(x));
            return e
        }
        n.extend({
            htmlPrefilter: function(e) {
                return e
            },
            clone: function(e, h, y) {
                var x, I, B, M, Q = e.cloneNode(!0),
                    Y = Ht(e);
                if (!D.noCloneChecked && (e.nodeType === 1 || e.nodeType === 11) && !n.isXMLDoc(e))
                    for (M = It(Q), B = It(e), x = 0, I = B.length; x < I; x++) Vt(B[x], M[x]);
                if (h)
                    if (y)
                        for (B = B || It(e), M = M || It(Q), x = 0, I = B.length; x < I; x++) Rr(B[x], M[x]);
                    else Rr(e, Q);
                return M = It(Q, "script"), M.length > 0 && br(M, !Y && It(e, "script")), Q
            },
            cleanData: function(e) {
                for (var h, y, x, I = n.event.special, B = 0;
                    (y = e[B]) !== void 0; B++)
                    if (ut(y)) {
                        if (h = y[$e.expando]) {
                            if (h.events)
                                for (x in h.events) I[x] ? n.event.remove(y, x) : n.removeEvent(y, x, h.handle);
                            y[$e.expando] = void 0
                        }
                        y[Ve.expando] && (y[Ve.expando] = void 0)
                    }
            }
        }), n.fn.extend({
            detach: function(e) {
                return Ot(this, e, !0)
            },
            remove: function(e) {
                return Ot(this, e)
            },
            text: function(e) {
                return Ce(this, function(h) {
                    return h === void 0 ? n.text(this) : this.empty().each(function() {
                        (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) && (this.textContent = h)
                    })
                }, null, e, arguments.length)
            },
            append: function() {
                return _t(this, arguments, function(e) {
                    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                        var h = hr(this, e);
                        h.appendChild(e)
                    }
                })
            },
            prepend: function() {
                return _t(this, arguments, function(e) {
                    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                        var h = hr(this, e);
                        h.insertBefore(e, h.firstChild)
                    }
                })
            },
            before: function() {
                return _t(this, arguments, function(e) {
                    this.parentNode && this.parentNode.insertBefore(e, this)
                })
            },
            after: function() {
                return _t(this, arguments, function(e) {
                    this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
                })
            },
            empty: function() {
                for (var e, h = 0;
                    (e = this[h]) != null; h++) e.nodeType === 1 && (n.cleanData(It(e, !1)), e.textContent = "");
                return this
            },
            clone: function(e, h) {
                return e = e ?? !1, h = h ?? e, this.map(function() {
                    return n.clone(this, e, h)
                })
            },
            html: function(e) {
                return Ce(this, function(h) {
                    var y = this[0] || {},
                        x = 0,
                        I = this.length;
                    if (h === void 0 && y.nodeType === 1) return y.innerHTML;
                    if (typeof h == "string" && !ft.test(h) && !wt[(Ar.exec(h) || ["", ""])[1].toLowerCase()]) {
                        h = n.htmlPrefilter(h);
                        try {
                            for (; x < I; x++) y = this[x] || {}, y.nodeType === 1 && (n.cleanData(It(y, !1)), y.innerHTML = h);
                            y = 0
                        } catch {}
                    }
                    y && this.empty().append(h)
                }, null, e, arguments.length)
            },
            replaceWith: function() {
                var e = [];
                return _t(this, arguments, function(h) {
                    var y = this.parentNode;
                    n.inArray(this, e) < 0 && (n.cleanData(It(this)), y && y.replaceChild(h, this))
                }, e)
            }
        }), n.each({
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith"
        }, function(e, h) {
            n.fn[e] = function(y) {
                for (var x, I = [], B = n(y), M = B.length - 1, Q = 0; Q <= M; Q++) x = Q === M ? this : this.clone(!0), n(B[Q])[h](x), r.apply(I, x.get());
                return this.pushStack(I)
            }
        });
        var xt = new RegExp("^(" + nt + ")(?!px)[a-z%]+$", "i"),
            Jt = /^--/,
            bt = function(e) {
                var h = e.ownerDocument.defaultView;
                return (!h || !h.opener) && (h = t), h.getComputedStyle(e)
            },
            qt = function(e, h, y) {
                var x, I, B = {};
                for (I in h) B[I] = e.style[I], e.style[I] = h[I];
                x = y.call(e);
                for (I in h) e.style[I] = B[I];
                return x
            },
            at = new RegExp(kt.join("|"), "i"),
            We = "[\\x20\\t\\r\\n\\f]",
            Tr = new RegExp("^" + We + "+|((?:^|[^\\\\])(?:\\\\.)*)" + We + "+$", "g");
        (function() {
            function e() {
                if (le) {
                    Y.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", le.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", Et.appendChild(Y).appendChild(le);
                    var de = t.getComputedStyle(le);
                    y = de.top !== "1%", Q = h(de.marginLeft) === 12, le.style.right = "60%", B = h(de.right) === 36, x = h(de.width) === 36, le.style.position = "absolute", I = h(le.offsetWidth / 3) === 12, Et.removeChild(Y), le = null
                }
            }

            function h(de) {
                return Math.round(parseFloat(de))
            }
            var y, x, I, B, M, Q, Y = o.createElement("div"),
                le = o.createElement("div");
            le.style && (le.style.backgroundClip = "content-box", le.cloneNode(!0).style.backgroundClip = "", D.clearCloneStyle = le.style.backgroundClip === "content-box", n.extend(D, {
                boxSizingReliable: function() {
                    return e(), x
                },
                pixelBoxStyles: function() {
                    return e(), B
                },
                pixelPosition: function() {
                    return e(), y
                },
                reliableMarginLeft: function() {
                    return e(), Q
                },
                scrollboxSize: function() {
                    return e(), I
                },
                reliableTrDimensions: function() {
                    var de, ke, he, ve;
                    return M == null && (de = o.createElement("table"), ke = o.createElement("tr"), he = o.createElement("div"), de.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", ke.style.cssText = "border:1px solid", ke.style.height = "1px", he.style.height = "9px", he.style.display = "block", Et.appendChild(de).appendChild(ke).appendChild(he), ve = t.getComputedStyle(ke), M = parseInt(ve.height, 10) + parseInt(ve.borderTopWidth, 10) + parseInt(ve.borderBottomWidth, 10) === ke.offsetHeight, Et.removeChild(de)), M
                }
            }))
        })();

        function At(e, h, y) {
            var x, I, B, M, Q = Jt.test(h),
                Y = e.style;
            return y = y || bt(e), y && (M = y.getPropertyValue(h) || y[h], Q && (M = M.replace(Tr, "$1")), M === "" && !Ht(e) && (M = n.style(e, h)), !D.pixelBoxStyles() && xt.test(M) && at.test(h) && (x = Y.width, I = Y.minWidth, B = Y.maxWidth, Y.minWidth = Y.maxWidth = Y.width = M, M = y.width, Y.width = x, Y.minWidth = I, Y.maxWidth = B)), M !== void 0 ? M + "" : M
        }

        function nr(e, h) {
            return {
                get: function() {
                    if (e()) {
                        delete this.get;
                        return
                    }
                    return (this.get = h).apply(this, arguments)
                }
            }
        }
        var pt = ["Webkit", "Moz", "ms"],
            fr = o.createElement("div").style,
            Wr = {};

        function jr(e) {
            for (var h = e[0].toUpperCase() + e.slice(1), y = pt.length; y--;)
                if (e = pt[y] + h, e in fr) return e
        }

        function dr(e) {
            var h = n.cssProps[e] || Wr[e];
            return h || (e in fr ? e : Wr[e] = jr(e) || e)
        }
        var Xt = /^(none|table(?!-c[ea]).+)/,
            Mt = {
                position: "absolute",
                visibility: "hidden",
                display: "block"
            },
            wr = {
                letterSpacing: "0",
                fontWeight: "400"
            };

        function zt(e, h, y) {
            var x = F.exec(h);
            return x ? Math.max(0, x[2] - (y || 0)) + (x[3] || "px") : h
        }

        function Gt(e, h, y, x, I, B) {
            var M = h === "width" ? 1 : 0,
                Q = 0,
                Y = 0;
            if (y === (x ? "border" : "content")) return 0;
            for (; M < 4; M += 2) y === "margin" && (Y += n.css(e, y + kt[M], !0, I)), x ? (y === "content" && (Y -= n.css(e, "padding" + kt[M], !0, I)), y !== "margin" && (Y -= n.css(e, "border" + kt[M] + "Width", !0, I))) : (Y += n.css(e, "padding" + kt[M], !0, I), y !== "padding" ? Y += n.css(e, "border" + kt[M] + "Width", !0, I) : Q += n.css(e, "border" + kt[M] + "Width", !0, I));
            return !x && B >= 0 && (Y += Math.max(0, Math.ceil(e["offset" + h[0].toUpperCase() + h.slice(1)] - B - Y - Q - .5)) || 0), Y
        }

        function Lr(e, h, y) {
            var x = bt(e),
                I = !D.boxSizingReliable() || y,
                B = I && n.css(e, "boxSizing", !1, x) === "border-box",
                M = B,
                Q = At(e, h, x),
                Y = "offset" + h[0].toUpperCase() + h.slice(1);
            if (xt.test(Q)) {
                if (!y) return Q;
                Q = "auto"
            }
            return (!D.boxSizingReliable() && B || !D.reliableTrDimensions() && K(e, "tr") || Q === "auto" || !parseFloat(Q) && n.css(e, "display", !1, x) === "inline") && e.getClientRects().length && (B = n.css(e, "boxSizing", !1, x) === "border-box", M = Y in e, M && (Q = e[Y])), Q = parseFloat(Q) || 0, Q + Gt(e, h, y || (B ? "border" : "content"), M, x, Q) + "px"
        }
        n.extend({
            cssHooks: {
                opacity: {
                    get: function(e, h) {
                        if (h) {
                            var y = At(e, "opacity");
                            return y === "" ? "1" : y
                        }
                    }
                }
            },
            cssNumber: {
                animationIterationCount: !0,
                columnCount: !0,
                fillOpacity: !0,
                flexGrow: !0,
                flexShrink: !0,
                fontWeight: !0,
                gridArea: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnStart: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowStart: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0
            },
            cssProps: {},
            style: function(e, h, y, x) {
                if (!(!e || e.nodeType === 3 || e.nodeType === 8 || !e.style)) {
                    var I, B, M, Q = Xe(h),
                        Y = Jt.test(h),
                        le = e.style;
                    if (Y || (h = dr(Q)), M = n.cssHooks[h] || n.cssHooks[Q], y !== void 0) {
                        if (B = typeof y, B === "string" && (I = F.exec(y)) && I[1] && (y = Zt(e, h, I), B = "number"), y == null || y !== y) return;
                        B === "number" && !Y && (y += I && I[3] || (n.cssNumber[Q] ? "" : "px")), !D.clearCloneStyle && y === "" && h.indexOf("background") === 0 && (le[h] = "inherit"), (!M || !("set" in M) || (y = M.set(e, y, x)) !== void 0) && (Y ? le.setProperty(h, y) : le[h] = y)
                    } else return M && "get" in M && (I = M.get(e, !1, x)) !== void 0 ? I : le[h]
                }
            },
            css: function(e, h, y, x) {
                var I, B, M, Q = Xe(h),
                    Y = Jt.test(h);
                return Y || (h = dr(Q)), M = n.cssHooks[h] || n.cssHooks[Q], M && "get" in M && (I = M.get(e, !0, y)), I === void 0 && (I = At(e, h, x)), I === "normal" && h in wr && (I = wr[h]), y === "" || y ? (B = parseFloat(I), y === !0 || isFinite(B) ? B || 0 : I) : I
            }
        }), n.each(["height", "width"], function(e, h) {
            n.cssHooks[h] = {
                get: function(y, x, I) {
                    if (x) return Xt.test(n.css(y, "display")) && (!y.getClientRects().length || !y.getBoundingClientRect().width) ? qt(y, Mt, function() {
                        return Lr(y, h, I)
                    }) : Lr(y, h, I)
                },
                set: function(y, x, I) {
                    var B, M = bt(y),
                        Q = !D.scrollboxSize() && M.position === "absolute",
                        Y = Q || I,
                        le = Y && n.css(y, "boxSizing", !1, M) === "border-box",
                        de = I ? Gt(y, h, I, le, M) : 0;
                    return le && Q && (de -= Math.ceil(y["offset" + h[0].toUpperCase() + h.slice(1)] - parseFloat(M[h]) - Gt(y, h, "border", !1, M) - .5)), de && (B = F.exec(x)) && (B[3] || "px") !== "px" && (y.style[h] = x, x = n.css(y, h)), zt(y, x, de)
                }
            }
        }), n.cssHooks.marginLeft = nr(D.reliableMarginLeft, function(e, h) {
            if (h) return (parseFloat(At(e, "marginLeft")) || e.getBoundingClientRect().left - qt(e, {
                marginLeft: 0
            }, function() {
                return e.getBoundingClientRect().left
            })) + "px"
        }), n.each({
            margin: "",
            padding: "",
            border: "Width"
        }, function(e, h) {
            n.cssHooks[e + h] = {
                expand: function(y) {
                    for (var x = 0, I = {}, B = typeof y == "string" ? y.split(" ") : [y]; x < 4; x++) I[e + kt[x] + h] = B[x] || B[x - 2] || B[0];
                    return I
                }
            }, e !== "margin" && (n.cssHooks[e + h].set = zt)
        }), n.fn.extend({
            css: function(e, h) {
                return Ce(this, function(y, x, I) {
                    var B, M, Q = {},
                        Y = 0;
                    if (Array.isArray(x)) {
                        for (B = bt(y), M = x.length; Y < M; Y++) Q[x[Y]] = n.css(y, x[Y], !1, B);
                        return Q
                    }
                    return I !== void 0 ? n.style(y, x, I) : n.css(y, x)
                }, e, h, arguments.length > 1)
            }
        });

        function St(e, h, y, x, I) {
            return new St.prototype.init(e, h, y, x, I)
        }
        n.Tween = St, St.prototype = {
            constructor: St,
            init: function(e, h, y, x, I, B) {
                this.elem = e, this.prop = y, this.easing = I || n.easing._default, this.options = h, this.start = this.now = this.cur(), this.end = x, this.unit = B || (n.cssNumber[y] ? "" : "px")
            },
            cur: function() {
                var e = St.propHooks[this.prop];
                return e && e.get ? e.get(this) : St.propHooks._default.get(this)
            },
            run: function(e) {
                var h, y = St.propHooks[this.prop];
                return this.options.duration ? this.pos = h = n.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = h = e, this.now = (this.end - this.start) * h + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), y && y.set ? y.set(this) : St.propHooks._default.set(this), this
            }
        }, St.prototype.init.prototype = St.prototype, St.propHooks = {
            _default: {
                get: function(e) {
                    var h;
                    return e.elem.nodeType !== 1 || e.elem[e.prop] != null && e.elem.style[e.prop] == null ? e.elem[e.prop] : (h = n.css(e.elem, e.prop, ""), !h || h === "auto" ? 0 : h)
                },
                set: function(e) {
                    n.fx.step[e.prop] ? n.fx.step[e.prop](e) : e.elem.nodeType === 1 && (n.cssHooks[e.prop] || e.elem.style[dr(e.prop)] != null) ? n.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now
                }
            }
        }, St.propHooks.scrollTop = St.propHooks.scrollLeft = {
            set: function(e) {
                e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
            }
        }, n.easing = {
            linear: function(e) {
                return e
            },
            swing: function(e) {
                return .5 - Math.cos(e * Math.PI) / 2
            },
            _default: "swing"
        }, n.fx = St.prototype.init, n.fx.step = {};
        var _r, Sr, j = /^(?:toggle|show|hide)$/,
            ne = /queueHooks$/;

        function se() {
            Sr && (o.hidden === !1 && t.requestAnimationFrame ? t.requestAnimationFrame(se) : t.setTimeout(se, n.fx.interval), n.fx.tick())
        }

        function xe() {
            return t.setTimeout(function() {
                _r = void 0
            }), _r = Date.now()
        }

        function Oe(e, h) {
            var y, x = 0,
                I = {
                    height: e
                };
            for (h = h ? 1 : 0; x < 4; x += 2 - h) y = kt[x], I["margin" + y] = I["padding" + y] = e;
            return h && (I.opacity = I.width = e), I
        }

        function k(e, h, y) {
            for (var x, I = (V.tweeners[h] || []).concat(V.tweeners["*"]), B = 0, M = I.length; B < M; B++)
                if (x = I[B].call(y, h, e)) return x
        }

        function P(e, h, y) {
            var x, I, B, M, Q, Y, le, de, ke = "width" in h || "height" in h,
                he = this,
                ve = {},
                Ze = e.style,
                it = e.nodeType && Lt(e),
                qe = $e.get(e, "fxshow");
            y.queue || (M = n._queueHooks(e, "fx"), M.unqueued == null && (M.unqueued = 0, Q = M.empty.fire, M.empty.fire = function() {
                M.unqueued || Q()
            }), M.unqueued++, he.always(function() {
                he.always(function() {
                    M.unqueued--, n.queue(e, "fx").length || M.empty.fire()
                })
            }));
            for (x in h)
                if (I = h[x], j.test(I)) {
                    if (delete h[x], B = B || I === "toggle", I === (it ? "hide" : "show"))
                        if (I === "show" && qe && qe[x] !== void 0) it = !0;
                        else continue;
                    ve[x] = qe && qe[x] || n.style(e, x)
                } if (Y = !n.isEmptyObject(h), !(!Y && n.isEmptyObject(ve))) {
                ke && e.nodeType === 1 && (y.overflow = [Ze.overflow, Ze.overflowX, Ze.overflowY], le = qe && qe.display, le == null && (le = $e.get(e, "display")), de = n.css(e, "display"), de === "none" && (le ? de = le : (ot([e], !0), le = e.style.display || le, de = n.css(e, "display"), ot([e]))), (de === "inline" || de === "inline-block" && le != null) && n.css(e, "float") === "none" && (Y || (he.done(function() {
                    Ze.display = le
                }), le == null && (de = Ze.display, le = de === "none" ? "" : de)), Ze.display = "inline-block")), y.overflow && (Ze.overflow = "hidden", he.always(function() {
                    Ze.overflow = y.overflow[0], Ze.overflowX = y.overflow[1], Ze.overflowY = y.overflow[2]
                })), Y = !1;
                for (x in ve) Y || (qe ? "hidden" in qe && (it = qe.hidden) : qe = $e.access(e, "fxshow", {
                    display: le
                }), B && (qe.hidden = !it), it && ot([e], !0), he.done(function() {
                    it || ot([e]), $e.remove(e, "fxshow");
                    for (x in ve) n.style(e, x, ve[x])
                })), Y = k(it ? qe[x] : 0, x, he), x in qe || (qe[x] = Y.start, it && (Y.end = Y.start, Y.start = 0))
            }
        }

        function H(e, h) {
            var y, x, I, B, M;
            for (y in e)
                if (x = Xe(y), I = h[x], B = e[y], Array.isArray(B) && (I = B[1], B = e[y] = B[0]), y !== x && (e[x] = B, delete e[y]), M = n.cssHooks[x], M && "expand" in M) {
                    B = M.expand(B), delete e[x];
                    for (y in B) y in e || (e[y] = B[y], h[y] = I)
                } else h[x] = I
        }

        function V(e, h, y) {
            var x, I, B = 0,
                M = V.prefilters.length,
                Q = n.Deferred().always(function() {
                    delete Y.elem
                }),
                Y = function() {
                    if (I) return !1;
                    for (var ke = _r || xe(), he = Math.max(0, le.startTime + le.duration - ke), ve = he / le.duration || 0, Ze = 1 - ve, it = 0, qe = le.tweens.length; it < qe; it++) le.tweens[it].run(Ze);
                    return Q.notifyWith(e, [le, Ze, he]), Ze < 1 && qe ? he : (qe || Q.notifyWith(e, [le, 1, 0]), Q.resolveWith(e, [le]), !1)
                },
                le = Q.promise({
                    elem: e,
                    props: n.extend({}, h),
                    opts: n.extend(!0, {
                        specialEasing: {},
                        easing: n.easing._default
                    }, y),
                    originalProperties: h,
                    originalOptions: y,
                    startTime: _r || xe(),
                    duration: y.duration,
                    tweens: [],
                    createTween: function(ke, he) {
                        var ve = n.Tween(e, le.opts, ke, he, le.opts.specialEasing[ke] || le.opts.easing);
                        return le.tweens.push(ve), ve
                    },
                    stop: function(ke) {
                        var he = 0,
                            ve = ke ? le.tweens.length : 0;
                        if (I) return this;
                        for (I = !0; he < ve; he++) le.tweens[he].run(1);
                        return ke ? (Q.notifyWith(e, [le, 1, 0]), Q.resolveWith(e, [le, ke])) : Q.rejectWith(e, [le, ke]), this
                    }
                }),
                de = le.props;
            for (H(de, le.opts.specialEasing); B < M; B++)
                if (x = V.prefilters[B].call(le, e, de, le.opts), x) return d(x.stop) && (n._queueHooks(le.elem, le.opts.queue).stop = x.stop.bind(x)), x;
            return n.map(de, k, le), d(le.opts.start) && le.opts.start.call(e, le), le.progress(le.opts.progress).done(le.opts.done, le.opts.complete).fail(le.opts.fail).always(le.opts.always), n.fx.timer(n.extend(Y, {
                elem: e,
                anim: le,
                queue: le.opts.queue
            })), le
        }
        n.Animation = n.extend(V, {
                tweeners: {
                    "*": [function(e, h) {
                        var y = this.createTween(e, h);
                        return Zt(y.elem, e, F.exec(h), y), y
                    }]
                },
                tweener: function(e, h) {
                    d(e) ? (h = e, e = ["*"]) : e = e.match(q);
                    for (var y, x = 0, I = e.length; x < I; x++) y = e[x], V.tweeners[y] = V.tweeners[y] || [], V.tweeners[y].unshift(h)
                },
                prefilters: [P],
                prefilter: function(e, h) {
                    h ? V.prefilters.unshift(e) : V.prefilters.push(e)
                }
            }), n.speed = function(e, h, y) {
                var x = e && typeof e == "object" ? n.extend({}, e) : {
                    complete: y || !y && h || d(e) && e,
                    duration: e,
                    easing: y && h || h && !d(h) && h
                };
                return n.fx.off ? x.duration = 0 : typeof x.duration != "number" && (x.duration in n.fx.speeds ? x.duration = n.fx.speeds[x.duration] : x.duration = n.fx.speeds._default), (x.queue == null || x.queue === !0) && (x.queue = "fx"), x.old = x.complete, x.complete = function() {
                    d(x.old) && x.old.call(this), x.queue && n.dequeue(this, x.queue)
                }, x
            }, n.fn.extend({
                fadeTo: function(e, h, y, x) {
                    return this.filter(Lt).css("opacity", 0).show().end().animate({
                        opacity: h
                    }, e, y, x)
                },
                animate: function(e, h, y, x) {
                    var I = n.isEmptyObject(e),
                        B = n.speed(h, y, x),
                        M = function() {
                            var Q = V(this, n.extend({}, e), B);
                            (I || $e.get(this, "finish")) && Q.stop(!0)
                        };
                    return M.finish = M, I || B.queue === !1 ? this.each(M) : this.queue(B.queue, M)
                },
                stop: function(e, h, y) {
                    var x = function(I) {
                        var B = I.stop;
                        delete I.stop, B(y)
                    };
                    return typeof e != "string" && (y = h, h = e, e = void 0), h && this.queue(e || "fx", []), this.each(function() {
                        var I = !0,
                            B = e != null && e + "queueHooks",
                            M = n.timers,
                            Q = $e.get(this);
                        if (B) Q[B] && Q[B].stop && x(Q[B]);
                        else
                            for (B in Q) Q[B] && Q[B].stop && ne.test(B) && x(Q[B]);
                        for (B = M.length; B--;) M[B].elem === this && (e == null || M[B].queue === e) && (M[B].anim.stop(y), I = !1, M.splice(B, 1));
                        (I || !y) && n.dequeue(this, e)
                    })
                },
                finish: function(e) {
                    return e !== !1 && (e = e || "fx"), this.each(function() {
                        var h, y = $e.get(this),
                            x = y[e + "queue"],
                            I = y[e + "queueHooks"],
                            B = n.timers,
                            M = x ? x.length : 0;
                        for (y.finish = !0, n.queue(this, e, []), I && I.stop && I.stop.call(this, !0), h = B.length; h--;) B[h].elem === this && B[h].queue === e && (B[h].anim.stop(!0), B.splice(h, 1));
                        for (h = 0; h < M; h++) x[h] && x[h].finish && x[h].finish.call(this);
                        delete y.finish
                    })
                }
            }), n.each(["toggle", "show", "hide"], function(e, h) {
                var y = n.fn[h];
                n.fn[h] = function(x, I, B) {
                    return x == null || typeof x == "boolean" ? y.apply(this, arguments) : this.animate(Oe(h, !0), x, I, B)
                }
            }), n.each({
                slideDown: Oe("show"),
                slideUp: Oe("hide"),
                slideToggle: Oe("toggle"),
                fadeIn: {
                    opacity: "show"
                },
                fadeOut: {
                    opacity: "hide"
                },
                fadeToggle: {
                    opacity: "toggle"
                }
            }, function(e, h) {
                n.fn[e] = function(y, x, I) {
                    return this.animate(h, y, x, I)
                }
            }), n.timers = [], n.fx.tick = function() {
                var e, h = 0,
                    y = n.timers;
                for (_r = Date.now(); h < y.length; h++) e = y[h], !e() && y[h] === e && y.splice(h--, 1);
                y.length || n.fx.stop(), _r = void 0
            }, n.fx.timer = function(e) {
                n.timers.push(e), n.fx.start()
            }, n.fx.interval = 13, n.fx.start = function() {
                Sr || (Sr = !0, se())
            }, n.fx.stop = function() {
                Sr = null
            }, n.fx.speeds = {
                slow: 600,
                fast: 200,
                _default: 400
            }, n.fn.delay = function(e, h) {
                return e = n.fx && n.fx.speeds[e] || e, h = h || "fx", this.queue(h, function(y, x) {
                    var I = t.setTimeout(y, e);
                    x.stop = function() {
                        t.clearTimeout(I)
                    }
                })
            },
            function() {
                var e = o.createElement("input"),
                    h = o.createElement("select"),
                    y = h.appendChild(o.createElement("option"));
                e.type = "checkbox", D.checkOn = e.value !== "", D.optSelected = y.selected, e = o.createElement("input"), e.value = "t", e.type = "radio", D.radioValue = e.value === "t"
            }();
        var X, ce = n.expr.attrHandle;
        n.fn.extend({
            attr: function(e, h) {
                return Ce(this, n.attr, e, h, arguments.length > 1)
            },
            removeAttr: function(e) {
                return this.each(function() {
                    n.removeAttr(this, e)
                })
            }
        }), n.extend({
            attr: function(e, h, y) {
                var x, I, B = e.nodeType;
                if (!(B === 3 || B === 8 || B === 2)) {
                    if (typeof e.getAttribute > "u") return n.prop(e, h, y);
                    if ((B !== 1 || !n.isXMLDoc(e)) && (I = n.attrHooks[h.toLowerCase()] || (n.expr.match.bool.test(h) ? X : void 0)), y !== void 0) {
                        if (y === null) {
                            n.removeAttr(e, h);
                            return
                        }
                        return I && "set" in I && (x = I.set(e, y, h)) !== void 0 ? x : (e.setAttribute(h, y + ""), y)
                    }
                    return I && "get" in I && (x = I.get(e, h)) !== null ? x : (x = n.find.attr(e, h), x ?? void 0)
                }
            },
            attrHooks: {
                type: {
                    set: function(e, h) {
                        if (!D.radioValue && h === "radio" && K(e, "input")) {
                            var y = e.value;
                            return e.setAttribute("type", h), y && (e.value = y), h
                        }
                    }
                }
            },
            removeAttr: function(e, h) {
                var y, x = 0,
                    I = h && h.match(q);
                if (I && e.nodeType === 1)
                    for (; y = I[x++];) e.removeAttribute(y)
            }
        }), X = {
            set: function(e, h, y) {
                return h === !1 ? n.removeAttr(e, y) : e.setAttribute(y, y), y
            }
        }, n.each(n.expr.match.bool.source.match(/\w+/g), function(e, h) {
            var y = ce[h] || n.find.attr;
            ce[h] = function(x, I, B) {
                var M, Q, Y = I.toLowerCase();
                return B || (Q = ce[Y], ce[Y] = M, M = y(x, I, B) != null ? Y : null, ce[Y] = Q), M
            }
        });
        var ue = /^(?:input|select|textarea|button)$/i,
            me = /^(?:a|area)$/i;
        n.fn.extend({
            prop: function(e, h) {
                return Ce(this, n.prop, e, h, arguments.length > 1)
            },
            removeProp: function(e) {
                return this.each(function() {
                    delete this[n.propFix[e] || e]
                })
            }
        }), n.extend({
            prop: function(e, h, y) {
                var x, I, B = e.nodeType;
                if (!(B === 3 || B === 8 || B === 2)) return (B !== 1 || !n.isXMLDoc(e)) && (h = n.propFix[h] || h, I = n.propHooks[h]), y !== void 0 ? I && "set" in I && (x = I.set(e, y, h)) !== void 0 ? x : e[h] = y : I && "get" in I && (x = I.get(e, h)) !== null ? x : e[h]
            },
            propHooks: {
                tabIndex: {
                    get: function(e) {
                        var h = n.find.attr(e, "tabindex");
                        return h ? parseInt(h, 10) : ue.test(e.nodeName) || me.test(e.nodeName) && e.href ? 0 : -1
                    }
                }
            },
            propFix: {
                for: "htmlFor",
                class: "className"
            }
        }), D.optSelected || (n.propHooks.selected = {
            get: function(e) {
                var h = e.parentNode;
                return h && h.parentNode && h.parentNode.selectedIndex, null
            },
            set: function(e) {
                var h = e.parentNode;
                h && (h.selectedIndex, h.parentNode && h.parentNode.selectedIndex)
            }
        }), n.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
            n.propFix[this.toLowerCase()] = this
        });

        function Se(e) {
            var h = e.match(q) || [];
            return h.join(" ")
        }

        function _e(e) {
            return e.getAttribute && e.getAttribute("class") || ""
        }

        function Ie(e) {
            return Array.isArray(e) ? e : typeof e == "string" ? e.match(q) || [] : []
        }
        n.fn.extend({
            addClass: function(e) {
                var h, y, x, I, B, M;
                return d(e) ? this.each(function(Q) {
                    n(this).addClass(e.call(this, Q, _e(this)))
                }) : (h = Ie(e), h.length ? this.each(function() {
                    if (x = _e(this), y = this.nodeType === 1 && " " + Se(x) + " ", y) {
                        for (B = 0; B < h.length; B++) I = h[B], y.indexOf(" " + I + " ") < 0 && (y += I + " ");
                        M = Se(y), x !== M && this.setAttribute("class", M)
                    }
                }) : this)
            },
            removeClass: function(e) {
                var h, y, x, I, B, M;
                return d(e) ? this.each(function(Q) {
                    n(this).removeClass(e.call(this, Q, _e(this)))
                }) : arguments.length ? (h = Ie(e), h.length ? this.each(function() {
                    if (x = _e(this), y = this.nodeType === 1 && " " + Se(x) + " ", y) {
                        for (B = 0; B < h.length; B++)
                            for (I = h[B]; y.indexOf(" " + I + " ") > -1;) y = y.replace(" " + I + " ", " ");
                        M = Se(y), x !== M && this.setAttribute("class", M)
                    }
                }) : this) : this.attr("class", "")
            },
            toggleClass: function(e, h) {
                var y, x, I, B, M = typeof e,
                    Q = M === "string" || Array.isArray(e);
                return d(e) ? this.each(function(Y) {
                    n(this).toggleClass(e.call(this, Y, _e(this), h), h)
                }) : typeof h == "boolean" && Q ? h ? this.addClass(e) : this.removeClass(e) : (y = Ie(e), this.each(function() {
                    if (Q)
                        for (B = n(this), I = 0; I < y.length; I++) x = y[I], B.hasClass(x) ? B.removeClass(x) : B.addClass(x);
                    else(e === void 0 || M === "boolean") && (x = _e(this), x && $e.set(this, "__className__", x), this.setAttribute && this.setAttribute("class", x || e === !1 ? "" : $e.get(this, "__className__") || ""))
                }))
            },
            hasClass: function(e) {
                var h, y, x = 0;
                for (h = " " + e + " "; y = this[x++];)
                    if (y.nodeType === 1 && (" " + Se(_e(y)) + " ").indexOf(h) > -1) return !0;
                return !1
            }
        });
        var Re = /\r/g;
        n.fn.extend({
            val: function(e) {
                var h, y, x, I = this[0];
                return arguments.length ? (x = d(e), this.each(function(B) {
                    var M;
                    this.nodeType === 1 && (x ? M = e.call(this, B, n(this).val()) : M = e, M == null ? M = "" : typeof M == "number" ? M += "" : Array.isArray(M) && (M = n.map(M, function(Q) {
                        return Q == null ? "" : Q + ""
                    })), h = n.valHooks[this.type] || n.valHooks[this.nodeName.toLowerCase()], (!h || !("set" in h) || h.set(this, M, "value") === void 0) && (this.value = M))
                })) : I ? (h = n.valHooks[I.type] || n.valHooks[I.nodeName.toLowerCase()], h && "get" in h && (y = h.get(I, "value")) !== void 0 ? y : (y = I.value, typeof y == "string" ? y.replace(Re, "") : y ?? "")) : void 0
            }
        }), n.extend({
            valHooks: {
                option: {
                    get: function(e) {
                        var h = n.find.attr(e, "value");
                        return h ?? Se(n.text(e))
                    }
                },
                select: {
                    get: function(e) {
                        var h, y, x, I = e.options,
                            B = e.selectedIndex,
                            M = e.type === "select-one",
                            Q = M ? null : [],
                            Y = M ? B + 1 : I.length;
                        for (B < 0 ? x = Y : x = M ? B : 0; x < Y; x++)
                            if (y = I[x], (y.selected || x === B) && !y.disabled && (!y.parentNode.disabled || !K(y.parentNode, "optgroup"))) {
                                if (h = n(y).val(), M) return h;
                                Q.push(h)
                            } return Q
                    },
                    set: function(e, h) {
                        for (var y, x, I = e.options, B = n.makeArray(h), M = I.length; M--;) x = I[M], (x.selected = n.inArray(n.valHooks.option.get(x), B) > -1) && (y = !0);
                        return y || (e.selectedIndex = -1), B
                    }
                }
            }
        }), n.each(["radio", "checkbox"], function() {
            n.valHooks[this] = {
                set: function(e, h) {
                    if (Array.isArray(h)) return e.checked = n.inArray(n(e).val(), h) > -1
                }
            }, D.checkOn || (n.valHooks[this].get = function(e) {
                return e.getAttribute("value") === null ? "on" : e.value
            })
        }), D.focusin = "onfocusin" in t;
        var Ke = /^(?:focusinfocus|focusoutblur)$/,
            Ye = function(e) {
                e.stopPropagation()
            };
        n.extend(n.event, {
            trigger: function(e, h, y, x) {
                var I, B, M, Q, Y, le, de, ke, he = [y || o],
                    ve = u.call(e, "type") ? e.type : e,
                    Ze = u.call(e, "namespace") ? e.namespace.split(".") : [];
                if (B = ke = M = y = y || o, !(y.nodeType === 3 || y.nodeType === 8) && !Ke.test(ve + n.event.triggered) && (ve.indexOf(".") > -1 && (Ze = ve.split("."), ve = Ze.shift(), Ze.sort()), Y = ve.indexOf(":") < 0 && "on" + ve, e = e[n.expando] ? e : new n.Event(ve, typeof e == "object" && e), e.isTrigger = x ? 2 : 3, e.namespace = Ze.join("."), e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + Ze.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = y), h = h == null ? [e] : n.makeArray(h, [e]), de = n.event.special[ve] || {}, !(!x && de.trigger && de.trigger.apply(y, h) === !1))) {
                    if (!x && !de.noBubble && !a(y)) {
                        for (Q = de.delegateType || ve, Ke.test(Q + ve) || (B = B.parentNode); B; B = B.parentNode) he.push(B), M = B;
                        M === (y.ownerDocument || o) && he.push(M.defaultView || M.parentWindow || t)
                    }
                    for (I = 0;
                        (B = he[I++]) && !e.isPropagationStopped();) ke = B, e.type = I > 1 ? Q : de.bindType || ve, le = ($e.get(B, "events") || Object.create(null))[e.type] && $e.get(B, "handle"), le && le.apply(B, h), le = Y && B[Y], le && le.apply && ut(B) && (e.result = le.apply(B, h), e.result === !1 && e.preventDefault());
                    return e.type = ve, !x && !e.isDefaultPrevented() && (!de._default || de._default.apply(he.pop(), h) === !1) && ut(y) && Y && d(y[ve]) && !a(y) && (M = y[Y], M && (y[Y] = null), n.event.triggered = ve, e.isPropagationStopped() && ke.addEventListener(ve, Ye), y[ve](), e.isPropagationStopped() && ke.removeEventListener(ve, Ye), n.event.triggered = void 0, M && (y[Y] = M)), e.result
                }
            },
            simulate: function(e, h, y) {
                var x = n.extend(new n.Event, y, {
                    type: e,
                    isSimulated: !0
                });
                n.event.trigger(x, null, h)
            }
        }), n.fn.extend({
            trigger: function(e, h) {
                return this.each(function() {
                    n.event.trigger(e, h, this)
                })
            },
            triggerHandler: function(e, h) {
                var y = this[0];
                if (y) return n.event.trigger(e, h, y, !0)
            }
        }), D.focusin || n.each({
            focus: "focusin",
            blur: "focusout"
        }, function(e, h) {
            var y = function(x) {
                n.event.simulate(h, x.target, n.event.fix(x))
            };
            n.event.special[h] = {
                setup: function() {
                    var x = this.ownerDocument || this.document || this,
                        I = $e.access(x, h);
                    I || x.addEventListener(e, y, !0), $e.access(x, h, (I || 0) + 1)
                },
                teardown: function() {
                    var x = this.ownerDocument || this.document || this,
                        I = $e.access(x, h) - 1;
                    I ? $e.access(x, h, I) : (x.removeEventListener(e, y, !0), $e.remove(x, h))
                }
            }
        });
        var be = t.location,
            Le = {
                guid: Date.now()
            },
            Be = /\?/;
        n.parseXML = function(e) {
            var h, y;
            if (!e || typeof e != "string") return null;
            try {
                h = new t.DOMParser().parseFromString(e, "text/xml")
            } catch {}
            return y = h && h.getElementsByTagName("parsererror")[0], (!h || y) && n.error("Invalid XML: " + (y ? n.map(y.childNodes, function(x) {
                return x.textContent
            }).join(`
`) : e)), h
        };
        var Ge = /\[\]$/,
            Ue = /\r?\n/g,
            dt = /^(?:submit|button|image|reset|file)$/i,
            gt = /^(?:input|select|textarea|keygen)/i;

        function st(e, h, y, x) {
            var I;
            if (Array.isArray(h)) n.each(h, function(B, M) {
                y || Ge.test(e) ? x(e, M) : st(e + "[" + (typeof M == "object" && M != null ? B : "") + "]", M, y, x)
            });
            else if (!y && b(h) === "object")
                for (I in h) st(e + "[" + I + "]", h[I], y, x);
            else x(e, h)
        }
        n.param = function(e, h) {
            var y, x = [],
                I = function(B, M) {
                    var Q = d(M) ? M() : M;
                    x[x.length] = encodeURIComponent(B) + "=" + encodeURIComponent(Q ?? "")
                };
            if (e == null) return "";
            if (Array.isArray(e) || e.jquery && !n.isPlainObject(e)) n.each(e, function() {
                I(this.name, this.value)
            });
            else
                for (y in e) st(y, e[y], h, I);
            return x.join("&")
        }, n.fn.extend({
            serialize: function() {
                return n.param(this.serializeArray())
            },
            serializeArray: function() {
                return this.map(function() {
                    var e = n.prop(this, "elements");
                    return e ? n.makeArray(e) : this
                }).filter(function() {
                    var e = this.type;
                    return this.name && !n(this).is(":disabled") && gt.test(this.nodeName) && !dt.test(e) && (this.checked || !Tt.test(e))
                }).map(function(e, h) {
                    var y = n(this).val();
                    return y == null ? null : Array.isArray(y) ? n.map(y, function(x) {
                        return {
                            name: h.name,
                            value: x.replace(Ue, `\r
`)
                        }
                    }) : {
                        name: h.name,
                        value: y.replace(Ue, `\r
`)
                    }
                }).get()
            }
        });
        var Qt = /%20/g,
            Yt = /#.*$/,
            qr = /([?&])_=[^&]*/,
            Xr = /^(.*?):[ \t]*([^\r\n]*)$/mg,
            Yr = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
            Jr = /^(?:GET|HEAD)$/,
            _i = /^\/\//,
            Ur = {},
            Or = {},
            Qr = "*/".concat("*"),
            ei = o.createElement("a");
        ei.href = be.href;

        function Ei(e) {
            return function(h, y) {
                typeof h != "string" && (y = h, h = "*");
                var x, I = 0,
                    B = h.toLowerCase().match(q) || [];
                if (d(y))
                    for (; x = B[I++];) x[0] === "+" ? (x = x.slice(1) || "*", (e[x] = e[x] || []).unshift(y)) : (e[x] = e[x] || []).push(y)
            }
        }

        function xi(e, h, y, x) {
            var I = {},
                B = e === Or;

            function M(Q) {
                var Y;
                return I[Q] = !0, n.each(e[Q] || [], function(le, de) {
                    var ke = de(h, y, x);
                    if (typeof ke == "string" && !B && !I[ke]) return h.dataTypes.unshift(ke), M(ke), !1;
                    if (B) return !(Y = ke)
                }), Y
            }
            return M(h.dataTypes[0]) || !I["*"] && M("*")
        }

        function pi(e, h) {
            var y, x, I = n.ajaxSettings.flatOptions || {};
            for (y in h) h[y] !== void 0 && ((I[y] ? e : x || (x = {}))[y] = h[y]);
            return x && n.extend(!0, e, x), e
        }

        function Hi(e, h, y) {
            for (var x, I, B, M, Q = e.contents, Y = e.dataTypes; Y[0] === "*";) Y.shift(), x === void 0 && (x = e.mimeType || h.getResponseHeader("Content-Type"));
            if (x) {
                for (I in Q)
                    if (Q[I] && Q[I].test(x)) {
                        Y.unshift(I);
                        break
                    }
            }
            if (Y[0] in y) B = Y[0];
            else {
                for (I in y) {
                    if (!Y[0] || e.converters[I + " " + Y[0]]) {
                        B = I;
                        break
                    }
                    M || (M = I)
                }
                B = B || M
            }
            if (B) return B !== Y[0] && Y.unshift(B), y[B]
        }

        function $i(e, h, y, x) {
            var I, B, M, Q, Y, le = {},
                de = e.dataTypes.slice();
            if (de[1])
                for (M in e.converters) le[M.toLowerCase()] = e.converters[M];
            for (B = de.shift(); B;)
                if (e.responseFields[B] && (y[e.responseFields[B]] = h), !Y && x && e.dataFilter && (h = e.dataFilter(h, e.dataType)), Y = B, B = de.shift(), B) {
                    if (B === "*") B = Y;
                    else if (Y !== "*" && Y !== B) {
                        if (M = le[Y + " " + B] || le["* " + B], !M) {
                            for (I in le)
                                if (Q = I.split(" "), Q[1] === B && (M = le[Y + " " + Q[0]] || le["* " + Q[0]], M)) {
                                    M === !0 ? M = le[I] : le[I] !== !0 && (B = Q[0], de.unshift(Q[1]));
                                    break
                                }
                        }
                        if (M !== !0)
                            if (M && e.throws) h = M(h);
                            else try {
                                h = M(h)
                            } catch (ke) {
                                return {
                                    state: "parsererror",
                                    error: M ? ke : "No conversion from " + Y + " to " + B
                                }
                            }
                    }
                } return {
                state: "success",
                data: h
            }
        }
        n.extend({
            active: 0,
            lastModified: {},
            etag: {},
            ajaxSettings: {
                url: be.href,
                type: "GET",
                isLocal: Yr.test(be.protocol),
                global: !0,
                processData: !0,
                async: !0,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                accepts: {
                    "*": Qr,
                    text: "text/plain",
                    html: "text/html",
                    xml: "application/xml, text/xml",
                    json: "application/json, text/javascript"
                },
                contents: {
                    xml: /\bxml\b/,
                    html: /\bhtml/,
                    json: /\bjson\b/
                },
                responseFields: {
                    xml: "responseXML",
                    text: "responseText",
                    json: "responseJSON"
                },
                converters: {
                    "* text": String,
                    "text html": !0,
                    "text json": JSON.parse,
                    "text xml": n.parseXML
                },
                flatOptions: {
                    url: !0,
                    context: !0
                }
            },
            ajaxSetup: function(e, h) {
                return h ? pi(pi(e, n.ajaxSettings), h) : pi(n.ajaxSettings, e)
            },
            ajaxPrefilter: Ei(Ur),
            ajaxTransport: Ei(Or),
            ajax: function(e, h) {
                typeof e == "object" && (h = e, e = void 0), h = h || {};
                var y, x, I, B, M, Q, Y, le, de, ke, he = n.ajaxSetup({}, h),
                    ve = he.context || he,
                    Ze = he.context && (ve.nodeType || ve.jquery) ? n(ve) : n.event,
                    it = n.Deferred(),
                    qe = n.Callbacks("once memory"),
                    $t = he.statusCode || {},
                    Nt = {},
                    sr = {},
                    mt = "canceled",
                    rt = {
                        readyState: 0,
                        getResponseHeader: function(ht) {
                            var Bt;
                            if (Y) {
                                if (!B)
                                    for (B = {}; Bt = Xr.exec(I);) B[Bt[1].toLowerCase() + " "] = (B[Bt[1].toLowerCase() + " "] || []).concat(Bt[2]);
                                Bt = B[ht.toLowerCase() + " "]
                            }
                            return Bt == null ? null : Bt.join(", ")
                        },
                        getAllResponseHeaders: function() {
                            return Y ? I : null
                        },
                        setRequestHeader: function(ht, Bt) {
                            return Y == null && (ht = sr[ht.toLowerCase()] = sr[ht.toLowerCase()] || ht, Nt[ht] = Bt), this
                        },
                        overrideMimeType: function(ht) {
                            return Y == null && (he.mimeType = ht), this
                        },
                        statusCode: function(ht) {
                            var Bt;
                            if (ht)
                                if (Y) rt.always(ht[rt.status]);
                                else
                                    for (Bt in ht) $t[Bt] = [$t[Bt], ht[Bt]];
                            return this
                        },
                        abort: function(ht) {
                            var Bt = ht || mt;
                            return y && y.abort(Bt), er(0, Bt), this
                        }
                    };
                if (it.promise(rt), he.url = ((e || he.url || be.href) + "").replace(_i, be.protocol + "//"), he.type = h.method || h.type || he.method || he.type, he.dataTypes = (he.dataType || "*").toLowerCase().match(q) || [""], he.crossDomain == null) {
                    Q = o.createElement("a");
                    try {
                        Q.href = he.url, Q.href = Q.href, he.crossDomain = ei.protocol + "//" + ei.host != Q.protocol + "//" + Q.host
                    } catch {
                        he.crossDomain = !0
                    }
                }
                if (he.data && he.processData && typeof he.data != "string" && (he.data = n.param(he.data, he.traditional)), xi(Ur, he, h, rt), Y) return rt;
                le = n.event && he.global, le && n.active++ === 0 && n.event.trigger("ajaxStart"), he.type = he.type.toUpperCase(), he.hasContent = !Jr.test(he.type), x = he.url.replace(Yt, ""), he.hasContent ? he.data && he.processData && (he.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && (he.data = he.data.replace(Qt, "+")) : (ke = he.url.slice(x.length), he.data && (he.processData || typeof he.data == "string") && (x += (Be.test(x) ? "&" : "?") + he.data, delete he.data), he.cache === !1 && (x = x.replace(qr, "$1"), ke = (Be.test(x) ? "&" : "?") + "_=" + Le.guid++ + ke), he.url = x + ke), he.ifModified && (n.lastModified[x] && rt.setRequestHeader("If-Modified-Since", n.lastModified[x]), n.etag[x] && rt.setRequestHeader("If-None-Match", n.etag[x])), (he.data && he.hasContent && he.contentType !== !1 || h.contentType) && rt.setRequestHeader("Content-Type", he.contentType), rt.setRequestHeader("Accept", he.dataTypes[0] && he.accepts[he.dataTypes[0]] ? he.accepts[he.dataTypes[0]] + (he.dataTypes[0] !== "*" ? ", " + Qr + "; q=0.01" : "") : he.accepts["*"]);
                for (de in he.headers) rt.setRequestHeader(de, he.headers[de]);
                if (he.beforeSend && (he.beforeSend.call(ve, rt, he) === !1 || Y)) return rt.abort();
                if (mt = "abort", qe.add(he.complete), rt.done(he.success), rt.fail(he.error), y = xi(Or, he, h, rt), !y) er(-1, "No Transport");
                else {
                    if (rt.readyState = 1, le && Ze.trigger("ajaxSend", [rt, he]), Y) return rt;
                    he.async && he.timeout > 0 && (M = t.setTimeout(function() {
                        rt.abort("timeout")
                    }, he.timeout));
                    try {
                        Y = !1, y.send(Nt, er)
                    } catch (ht) {
                        if (Y) throw ht;
                        er(-1, ht)
                    }
                }

                function er(ht, Bt, ri, ai) {
                    var or, Vr, zr, tr, Pr, pr = Bt;
                    Y || (Y = !0, M && t.clearTimeout(M), y = void 0, I = ai || "", rt.readyState = ht > 0 ? 4 : 0, or = ht >= 200 && ht < 300 || ht === 304, ri && (tr = Hi(he, rt, ri)), !or && n.inArray("script", he.dataTypes) > -1 && n.inArray("json", he.dataTypes) < 0 && (he.converters["text script"] = function() {}), tr = $i(he, tr, rt, or), or ? (he.ifModified && (Pr = rt.getResponseHeader("Last-Modified"), Pr && (n.lastModified[x] = Pr), Pr = rt.getResponseHeader("etag"), Pr && (n.etag[x] = Pr)), ht === 204 || he.type === "HEAD" ? pr = "nocontent" : ht === 304 ? pr = "notmodified" : (pr = tr.state, Vr = tr.data, zr = tr.error, or = !zr)) : (zr = pr, (ht || !pr) && (pr = "error", ht < 0 && (ht = 0))), rt.status = ht, rt.statusText = (Bt || pr) + "", or ? it.resolveWith(ve, [Vr, pr, rt]) : it.rejectWith(ve, [rt, pr, zr]), rt.statusCode($t), $t = void 0, le && Ze.trigger(or ? "ajaxSuccess" : "ajaxError", [rt, he, or ? Vr : zr]), qe.fireWith(ve, [rt, pr]), le && (Ze.trigger("ajaxComplete", [rt, he]), --n.active || n.event.trigger("ajaxStop")))
                }
                return rt
            },
            getJSON: function(e, h, y) {
                return n.get(e, h, y, "json")
            },
            getScript: function(e, h) {
                return n.get(e, void 0, h, "script")
            }
        }), n.each(["get", "post"], function(e, h) {
            n[h] = function(y, x, I, B) {
                return d(x) && (B = B || I, I = x, x = void 0), n.ajax(n.extend({
                    url: y,
                    type: h,
                    dataType: B,
                    data: x,
                    success: I
                }, n.isPlainObject(y) && y))
            }
        }), n.ajaxPrefilter(function(e) {
            var h;
            for (h in e.headers) h.toLowerCase() === "content-type" && (e.contentType = e.headers[h] || "")
        }), n._evalUrl = function(e, h, y) {
            return n.ajax({
                url: e,
                type: "GET",
                dataType: "script",
                cache: !0,
                async: !1,
                global: !1,
                converters: {
                    "text script": function() {}
                },
                dataFilter: function(x) {
                    n.globalEval(x, h, y)
                }
            })
        }, n.fn.extend({
            wrapAll: function(e) {
                var h;
                return this[0] && (d(e) && (e = e.call(this[0])), h = n(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && h.insertBefore(this[0]), h.map(function() {
                    for (var y = this; y.firstElementChild;) y = y.firstElementChild;
                    return y
                }).append(this)), this
            },
            wrapInner: function(e) {
                return d(e) ? this.each(function(h) {
                    n(this).wrapInner(e.call(this, h))
                }) : this.each(function() {
                    var h = n(this),
                        y = h.contents();
                    y.length ? y.wrapAll(e) : h.append(e)
                })
            },
            wrap: function(e) {
                var h = d(e);
                return this.each(function(y) {
                    n(this).wrapAll(h ? e.call(this, y) : e)
                })
            },
            unwrap: function(e) {
                return this.parent(e).not("body").each(function() {
                    n(this).replaceWith(this.childNodes)
                }), this
            }
        }), n.expr.pseudos.hidden = function(e) {
            return !n.expr.pseudos.visible(e)
        }, n.expr.pseudos.visible = function(e) {
            return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
        }, n.ajaxSettings.xhr = function() {
            try {
                return new t.XMLHttpRequest
            } catch {}
        };
        var Wi = {
                0: 200,
                1223: 204
            },
            ti = n.ajaxSettings.xhr();
        D.cors = !!ti && "withCredentials" in ti, D.ajax = ti = !!ti, n.ajaxTransport(function(e) {
            var h, y;
            if (D.cors || ti && !e.crossDomain) return {
                send: function(x, I) {
                    var B, M = e.xhr();
                    if (M.open(e.type, e.url, e.async, e.username, e.password), e.xhrFields)
                        for (B in e.xhrFields) M[B] = e.xhrFields[B];
                    e.mimeType && M.overrideMimeType && M.overrideMimeType(e.mimeType), !e.crossDomain && !x["X-Requested-With"] && (x["X-Requested-With"] = "XMLHttpRequest");
                    for (B in x) M.setRequestHeader(B, x[B]);
                    h = function(Q) {
                        return function() {
                            h && (h = y = M.onload = M.onerror = M.onabort = M.ontimeout = M.onreadystatechange = null, Q === "abort" ? M.abort() : Q === "error" ? typeof M.status != "number" ? I(0, "error") : I(M.status, M.statusText) : I(Wi[M.status] || M.status, M.statusText, (M.responseType || "text") !== "text" || typeof M.responseText != "string" ? {
                                binary: M.response
                            } : {
                                text: M.responseText
                            }, M.getAllResponseHeaders()))
                        }
                    }, M.onload = h(), y = M.onerror = M.ontimeout = h("error"), M.onabort !== void 0 ? M.onabort = y : M.onreadystatechange = function() {
                        M.readyState === 4 && t.setTimeout(function() {
                            h && y()
                        })
                    }, h = h("abort");
                    try {
                        M.send(e.hasContent && e.data || null)
                    } catch (Q) {
                        if (h) throw Q
                    }
                },
                abort: function() {
                    h && h()
                }
            }
        }), n.ajaxPrefilter(function(e) {
            e.crossDomain && (e.contents.script = !1)
        }), n.ajaxSetup({
            accepts: {
                script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
            },
            contents: {
                script: /\b(?:java|ecma)script\b/
            },
            converters: {
                "text script": function(e) {
                    return n.globalEval(e), e
                }
            }
        }), n.ajaxPrefilter("script", function(e) {
            e.cache === void 0 && (e.cache = !1), e.crossDomain && (e.type = "GET")
        }), n.ajaxTransport("script", function(e) {
            if (e.crossDomain || e.scriptAttrs) {
                var h, y;
                return {
                    send: function(x, I) {
                        h = n("<script>").attr(e.scriptAttrs || {}).prop({
                            charset: e.scriptCharset,
                            src: e.url
                        }).on("load error", y = function(B) {
                            h.remove(), y = null, B && I(B.type === "error" ? 404 : 200, B.type)
                        }), o.head.appendChild(h[0])
                    },
                    abort: function() {
                        y && y()
                    }
                }
            }
        });
        var Ai = [],
            gi = /(=)\?(?=&|$)|\?\?/;
        n.ajaxSetup({
            jsonp: "callback",
            jsonpCallback: function() {
                var e = Ai.pop() || n.expando + "_" + Le.guid++;
                return this[e] = !0, e
            }
        }), n.ajaxPrefilter("json jsonp", function(e, h, y) {
            var x, I, B, M = e.jsonp !== !1 && (gi.test(e.url) ? "url" : typeof e.data == "string" && (e.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && gi.test(e.data) && "data");
            if (M || e.dataTypes[0] === "jsonp") return x = e.jsonpCallback = d(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, M ? e[M] = e[M].replace(gi, "$1" + x) : e.jsonp !== !1 && (e.url += (Be.test(e.url) ? "&" : "?") + e.jsonp + "=" + x), e.converters["script json"] = function() {
                return B || n.error(x + " was not called"), B[0]
            }, e.dataTypes[0] = "json", I = t[x], t[x] = function() {
                B = arguments
            }, y.always(function() {
                I === void 0 ? n(t).removeProp(x) : t[x] = I, e[x] && (e.jsonpCallback = h.jsonpCallback, Ai.push(x)), B && d(I) && I(B[0]), B = I = void 0
            }), "script"
        }), D.createHTMLDocument = function() {
            var e = o.implementation.createHTMLDocument("").body;
            return e.innerHTML = "<form></form><form></form>", e.childNodes.length === 2
        }(), n.parseHTML = function(e, h, y) {
            if (typeof e != "string") return [];
            typeof h == "boolean" && (y = h, h = !1);
            var x, I, B;
            return h || (D.createHTMLDocument ? (h = o.implementation.createHTMLDocument(""), x = h.createElement("base"), x.href = o.location.href, h.head.appendChild(x)) : h = o), I = U.exec(e), B = !y && [], I ? [h.createElement(I[1])] : (I = Hr([e], h, B), B && B.length && n(B).remove(), n.merge([], I.childNodes))
        }, n.fn.load = function(e, h, y) {
            var x, I, B, M = this,
                Q = e.indexOf(" ");
            return Q > -1 && (x = Se(e.slice(Q)), e = e.slice(0, Q)), d(h) ? (y = h, h = void 0) : h && typeof h == "object" && (I = "POST"), M.length > 0 && n.ajax({
                url: e,
                type: I || "GET",
                dataType: "html",
                data: h
            }).done(function(Y) {
                B = arguments, M.html(x ? n("<div>").append(n.parseHTML(Y)).find(x) : Y)
            }).always(y && function(Y, le) {
                M.each(function() {
                    y.apply(this, B || [Y.responseText, le, Y])
                })
            }), this
        }, n.expr.pseudos.animated = function(e) {
            return n.grep(n.timers, function(h) {
                return e === h.elem
            }).length
        }, n.offset = {
            setOffset: function(e, h, y) {
                var x, I, B, M, Q, Y, le, de = n.css(e, "position"),
                    ke = n(e),
                    he = {};
                de === "static" && (e.style.position = "relative"), Q = ke.offset(), B = n.css(e, "top"), Y = n.css(e, "left"), le = (de === "absolute" || de === "fixed") && (B + Y).indexOf("auto") > -1, le ? (x = ke.position(), M = x.top, I = x.left) : (M = parseFloat(B) || 0, I = parseFloat(Y) || 0), d(h) && (h = h.call(e, y, n.extend({}, Q))), h.top != null && (he.top = h.top - Q.top + M), h.left != null && (he.left = h.left - Q.left + I), "using" in h ? h.using.call(e, he) : ke.css(he)
            }
        }, n.fn.extend({
            offset: function(e) {
                if (arguments.length) return e === void 0 ? this : this.each(function(I) {
                    n.offset.setOffset(this, e, I)
                });
                var h, y, x = this[0];
                if (x) return x.getClientRects().length ? (h = x.getBoundingClientRect(), y = x.ownerDocument.defaultView, {
                    top: h.top + y.pageYOffset,
                    left: h.left + y.pageXOffset
                }) : {
                    top: 0,
                    left: 0
                }
            },
            position: function() {
                if (this[0]) {
                    var e, h, y, x = this[0],
                        I = {
                            top: 0,
                            left: 0
                        };
                    if (n.css(x, "position") === "fixed") h = x.getBoundingClientRect();
                    else {
                        for (h = this.offset(), y = x.ownerDocument, e = x.offsetParent || y.documentElement; e && (e === y.body || e === y.documentElement) && n.css(e, "position") === "static";) e = e.parentNode;
                        e && e !== x && e.nodeType === 1 && (I = n(e).offset(), I.top += n.css(e, "borderTopWidth", !0), I.left += n.css(e, "borderLeftWidth", !0))
                    }
                    return {
                        top: h.top - I.top - n.css(x, "marginTop", !0),
                        left: h.left - I.left - n.css(x, "marginLeft", !0)
                    }
                }
            },
            offsetParent: function() {
                return this.map(function() {
                    for (var e = this.offsetParent; e && n.css(e, "position") === "static";) e = e.offsetParent;
                    return e || Et
                })
            }
        }), n.each({
            scrollLeft: "pageXOffset",
            scrollTop: "pageYOffset"
        }, function(e, h) {
            var y = h === "pageYOffset";
            n.fn[e] = function(x) {
                return Ce(this, function(I, B, M) {
                    var Q;
                    if (a(I) ? Q = I : I.nodeType === 9 && (Q = I.defaultView), M === void 0) return Q ? Q[h] : I[B];
                    Q ? Q.scrollTo(y ? Q.pageXOffset : M, y ? M : Q.pageYOffset) : I[B] = M
                }, e, x, arguments.length)
            }
        }), n.each(["top", "left"], function(e, h) {
            n.cssHooks[h] = nr(D.pixelPosition, function(y, x) {
                if (x) return x = At(y, h), xt.test(x) ? n(y).position()[h] + "px" : x
            })
        }), n.each({
            Height: "height",
            Width: "width"
        }, function(e, h) {
            n.each({
                padding: "inner" + e,
                content: h,
                "": "outer" + e
            }, function(y, x) {
                n.fn[x] = function(I, B) {
                    var M = arguments.length && (y || typeof I != "boolean"),
                        Q = y || (I === !0 || B === !0 ? "margin" : "border");
                    return Ce(this, function(Y, le, de) {
                        var ke;
                        return a(Y) ? x.indexOf("outer") === 0 ? Y["inner" + e] : Y.document.documentElement["client" + e] : Y.nodeType === 9 ? (ke = Y.documentElement, Math.max(Y.body["scroll" + e], ke["scroll" + e], Y.body["offset" + e], ke["offset" + e], ke["client" + e])) : de === void 0 ? n.css(Y, le, Q) : n.style(Y, le, de, Q)
                    }, h, M ? I : void 0, M)
                }
            })
        }), n.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(e, h) {
            n.fn[h] = function(y) {
                return this.on(h, y)
            }
        }), n.fn.extend({
            bind: function(e, h, y) {
                return this.on(e, null, h, y)
            },
            unbind: function(e, h) {
                return this.off(e, null, h)
            },
            delegate: function(e, h, y, x) {
                return this.on(h, e, y, x)
            },
            undelegate: function(e, h, y) {
                return arguments.length === 1 ? this.off(e, "**") : this.off(h, e || "**", y)
            },
            hover: function(e, h) {
                return this.mouseenter(e).mouseleave(h || e)
            }
        }), n.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(e, h) {
            n.fn[h] = function(y, x) {
                return arguments.length > 0 ? this.on(h, null, y, x) : this.trigger(h)
            }
        });
        var ji = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
        n.proxy = function(e, h) {
            var y, x, I;
            if (typeof h == "string" && (y = e[h], h = e, e = y), !!d(e)) return x = E.call(arguments, 2), I = function() {
                return e.apply(h || this, x.concat(E.call(arguments)))
            }, I.guid = e.guid = e.guid || n.guid++, I
        }, n.holdReady = function(e) {
            e ? n.readyWait++ : n.ready(!0)
        }, n.isArray = Array.isArray, n.parseJSON = JSON.parse, n.nodeName = K, n.isFunction = d, n.isWindow = a, n.camelCase = Xe, n.type = b, n.now = Date.now, n.isNumeric = function(e) {
            var h = n.type(e);
            return (h === "number" || h === "string") && !isNaN(e - parseFloat(e))
        }, n.trim = function(e) {
            return e == null ? "" : (e + "").replace(ji, "$1")
        };
        var Ui = t.jQuery,
            Vi = t.$;
        return n.noConflict = function(e) {
            return t.$ === n && (t.$ = Vi), e && t.jQuery === n && (t.jQuery = Ui), n
        }, typeof p > "u" && (t.jQuery = t.$ = n), n
    })
})(jquery);
var jqueryExports = jquery.exports;
const jQuery = getDefaultExportFromCjs(jqueryExports);
var jquery_terminal = {
        exports: {}
    },
    wcwidth = {
        exports: {}
    },
    clone = {
        exports: {}
    },
    hasRequiredClone;

function requireClone() {
    return hasRequiredClone || (hasRequiredClone = 1, function(w) {
        var t = function() {
            function p(s, c, g, u) {
                typeof c == "object" && (g = c.depth, u = c.prototype, c.filter, c = c.circular);
                var _ = [],
                    v = [],
                    D = typeof Buffer < "u";
                typeof c > "u" && (c = !0), typeof g > "u" && (g = 1 / 0);

                function d(a, o) {
                    if (a === null) return null;
                    if (o == 0) return a;
                    var i, l;
                    if (typeof a != "object") return a;
                    if (p.__isArray(a)) i = [];
                    else if (p.__isRegExp(a)) i = new RegExp(a.source, r(a)), a.lastIndex && (i.lastIndex = a.lastIndex);
                    else if (p.__isDate(a)) i = new Date(a.getTime());
                    else {
                        if (D && Buffer.isBuffer(a)) return Buffer.allocUnsafe ? i = Buffer.allocUnsafe(a.length) : i = new Buffer(a.length), a.copy(i), i;
                        typeof u > "u" ? (l = Object.getPrototypeOf(a), i = Object.create(l)) : (i = Object.create(u), l = u)
                    }
                    if (c) {
                        var b = _.indexOf(a);
                        if (b != -1) return v[b];
                        _.push(a), v.push(i)
                    }
                    for (var A in a) {
                        var n;
                        l && (n = Object.getOwnPropertyDescriptor(l, A)), !(n && n.set == null) && (i[A] = d(a[A], o - 1))
                    }
                    return i
                }
                return d(s, g)
            }
            p.clonePrototype = function(c) {
                if (c === null) return null;
                var g = function() {};
                return g.prototype = c, new g
            };

            function f(s) {
                return Object.prototype.toString.call(s)
            }
            p.__objToStr = f;

            function R(s) {
                return typeof s == "object" && f(s) === "[object Date]"
            }
            p.__isDate = R;

            function E(s) {
                return typeof s == "object" && f(s) === "[object Array]"
            }
            p.__isArray = E;

            function C(s) {
                return typeof s == "object" && f(s) === "[object RegExp]"
            }
            p.__isRegExp = C;

            function r(s) {
                var c = "";
                return s.global && (c += "g"), s.ignoreCase && (c += "i"), s.multiline && (c += "m"), c
            }
            return p.__getRegExpFlags = r, p
        }();
        w.exports && (w.exports = t)
    }(clone)), clone.exports
}
var defaults, hasRequiredDefaults;

function requireDefaults() {
    if (hasRequiredDefaults) return defaults;
    hasRequiredDefaults = 1;
    var w = requireClone();
    return defaults = function(t, p) {
        return t = t || {}, Object.keys(p).forEach(function(f) {
            typeof t[f] > "u" && (t[f] = w(p[f]))
        }), t
    }, defaults
}
var combining, hasRequiredCombining;

function requireCombining() {
    return hasRequiredCombining || (hasRequiredCombining = 1, combining = [
        [768, 879],
        [1155, 1158],
        [1160, 1161],
        [1425, 1469],
        [1471, 1471],
        [1473, 1474],
        [1476, 1477],
        [1479, 1479],
        [1536, 1539],
        [1552, 1557],
        [1611, 1630],
        [1648, 1648],
        [1750, 1764],
        [1767, 1768],
        [1770, 1773],
        [1807, 1807],
        [1809, 1809],
        [1840, 1866],
        [1958, 1968],
        [2027, 2035],
        [2305, 2306],
        [2364, 2364],
        [2369, 2376],
        [2381, 2381],
        [2385, 2388],
        [2402, 2403],
        [2433, 2433],
        [2492, 2492],
        [2497, 2500],
        [2509, 2509],
        [2530, 2531],
        [2561, 2562],
        [2620, 2620],
        [2625, 2626],
        [2631, 2632],
        [2635, 2637],
        [2672, 2673],
        [2689, 2690],
        [2748, 2748],
        [2753, 2757],
        [2759, 2760],
        [2765, 2765],
        [2786, 2787],
        [2817, 2817],
        [2876, 2876],
        [2879, 2879],
        [2881, 2883],
        [2893, 2893],
        [2902, 2902],
        [2946, 2946],
        [3008, 3008],
        [3021, 3021],
        [3134, 3136],
        [3142, 3144],
        [3146, 3149],
        [3157, 3158],
        [3260, 3260],
        [3263, 3263],
        [3270, 3270],
        [3276, 3277],
        [3298, 3299],
        [3393, 3395],
        [3405, 3405],
        [3530, 3530],
        [3538, 3540],
        [3542, 3542],
        [3633, 3633],
        [3636, 3642],
        [3655, 3662],
        [3761, 3761],
        [3764, 3769],
        [3771, 3772],
        [3784, 3789],
        [3864, 3865],
        [3893, 3893],
        [3895, 3895],
        [3897, 3897],
        [3953, 3966],
        [3968, 3972],
        [3974, 3975],
        [3984, 3991],
        [3993, 4028],
        [4038, 4038],
        [4141, 4144],
        [4146, 4146],
        [4150, 4151],
        [4153, 4153],
        [4184, 4185],
        [4448, 4607],
        [4959, 4959],
        [5906, 5908],
        [5938, 5940],
        [5970, 5971],
        [6002, 6003],
        [6068, 6069],
        [6071, 6077],
        [6086, 6086],
        [6089, 6099],
        [6109, 6109],
        [6155, 6157],
        [6313, 6313],
        [6432, 6434],
        [6439, 6440],
        [6450, 6450],
        [6457, 6459],
        [6679, 6680],
        [6912, 6915],
        [6964, 6964],
        [6966, 6970],
        [6972, 6972],
        [6978, 6978],
        [7019, 7027],
        [7616, 7626],
        [7678, 7679],
        [8203, 8207],
        [8234, 8238],
        [8288, 8291],
        [8298, 8303],
        [8400, 8431],
        [12330, 12335],
        [12441, 12442],
        [43014, 43014],
        [43019, 43019],
        [43045, 43046],
        [64286, 64286],
        [65024, 65039],
        [65056, 65059],
        [65279, 65279],
        [65529, 65531],
        [68097, 68099],
        [68101, 68102],
        [68108, 68111],
        [68152, 68154],
        [68159, 68159],
        [119143, 119145],
        [119155, 119170],
        [119173, 119179],
        [119210, 119213],
        [119362, 119364],
        [917505, 917505],
        [917536, 917631],
        [917760, 917999]
    ]), combining
}
var hasRequiredWcwidth;

function requireWcwidth() {
    if (hasRequiredWcwidth) return wcwidth.exports;
    hasRequiredWcwidth = 1;
    var w = requireDefaults(),
        t = requireCombining(),
        p = {
            nul: 0,
            control: 0
        };
    wcwidth.exports = function(r) {
        return f(r, p)
    }, wcwidth.exports.config = function(C) {
        return C = w(C || {}, p),
            function(s) {
                return f(s, C)
            }
    };

    function f(C, r) {
        if (typeof C != "string") return R(C, r);
        for (var s = 0, c = 0; c < C.length; c++) {
            var g = R(C.charCodeAt(c), r);
            if (g < 0) return -1;
            s += g
        }
        return s
    }

    function R(C, r) {
        return C === 0 ? r.nul : C < 32 || C >= 127 && C < 160 ? r.control : E(C) ? 0 : 1 + (C >= 4352 && (C <= 4447 || C == 9001 || C == 9002 || C >= 11904 && C <= 42191 && C != 12351 || C >= 44032 && C <= 55203 || C >= 63744 && C <= 64255 || C >= 65040 && C <= 65049 || C >= 65072 && C <= 65135 || C >= 65280 && C <= 65376 || C >= 65504 && C <= 65510 || C >= 131072 && C <= 196605 || C >= 196608 && C <= 262141))
    }

    function E(C) {
        var r = 0,
            s = t.length - 1,
            c;
        if (C < t[0][0] || C > t[s][1]) return !1;
        for (; s >= r;)
            if (c = Math.floor((r + s) / 2), C > t[c][1]) r = c + 1;
            else if (C < t[c][0]) s = c - 1;
        else return !0;
        return !1
    }
    return wcwidth.exports
}
/**@license
 *       __ _____                     ________                              __
 *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /
 *  __ / // // // // // _  // _// // / / // _  // _//     // //  \/ // _ \/ /
 * /  / // // // // // ___// / / // / / // ___// / / / / // // /\  // // / /__
 * \___//____ \\___//____//_/ _\_  / /_//____//_/ /_/ /_//_//_/ /_/ \__\_\___/
 *           \/              /____/                              version 2.34.0
 *
 * This file is part of jQuery Terminal. https://terminal.jcubic.pl
 *
 * Copyright (c) 2010-2022 Jakub T. Jankiewicz <https://jcubic.pl/me>
 * Released under the MIT license
 *
 * Contains:
 *
 * Storage plugin Distributed under the MIT License
 * modified to work from Data URIs that block storage and cookies in Chrome
 * Copyright (c) 2010 Dave Schindler
 *
 * jQuery Timers licenced with the WTFPL
 * <http://jquery.offput.ca/timers/>
 *
 * Cross-Browser Split 1.1.1
 * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>
 * Available under the MIT License
 *
 * jQuery Caret
 * Copyright (c) 2009, Gideon Sireling
 * 3 clause BSD License
 *
 * sprintf.js
 * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>
 * licensed under 3 clause BSD license
 *
 * debounce function from Lodash
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * The MIT License
 *
 * emoji regex v9.0.0 by Mathias Bynens
 * MIT license
 *
 * broken image by Sophia Bai from the Noun Project (CC-BY)
 *
 * Date: Sun, 10 Jul 2022 21:53:25 +0000
 */
var hasRequiredJquery_terminal;

function requireJquery_terminal() {
    return hasRequiredJquery_terminal || (hasRequiredJquery_terminal = 1, function(module) {
        (function(w) {
            var t = function() {
                return t.cache.hasOwnProperty(arguments[0]) || (t.cache[arguments[0]] = t.parse(arguments[0])), t.format.call(null, t.cache[arguments[0]], arguments)
            };
            t.format = function(E, C) {
                var r = 1,
                    s = E.length,
                    c = "",
                    g, u = [],
                    _, v, D, d, a, o;
                for (_ = 0; _ < s; _++)
                    if (c = f(E[_]), c === "string") u.push(E[_]);
                    else if (c === "array") {
                    if (D = E[_], D[2])
                        for (g = C[r], v = 0; v < D[2].length; v++) {
                            if (!g.hasOwnProperty(D[2][v])) throw t('[sprintf] property "%s" does not exist', D[2][v]);
                            g = g[D[2][v]]
                        } else D[1] ? g = C[D[1]] : g = C[r++];
                    if (/[^s]/.test(D[8]) && f(g) !== "number") throw t("[sprintf] expecting number but found %s", f(g));
                    switch (D[8]) {
                        case "b":
                            g = g.toString(2);
                            break;
                        case "c":
                            g = String.fromCharCode(g);
                            break;
                        case "d":
                            g = parseInt(g, 10);
                            break;
                        case "e":
                            g = D[7] ? g.toExponential(D[7]) : g.toExponential();
                            break;
                        case "f":
                            g = D[7] ? parseFloat(g).toFixed(D[7]) : parseFloat(g);
                            break;
                        case "o":
                            g = g.toString(8);
                            break;
                        case "s":
                            g = (g = String(g)) && D[7] ? g.slice(0, D[7]) : g;
                            break;
                        case "u":
                            g = g >>> 0;
                            break;
                        case "x":
                            g = g.toString(16);
                            break;
                        case "X":
                            g = g.toString(16).toUpperCase();
                            break
                    }
                    g = /[def]/.test(D[8]) && D[3] && g >= 0 ? " +" + g : g, a = D[4] ? D[4] === "0" ? "0" : D[4].charAt(1) : " ", o = D[6] - String(g).length, d = D[6] ? R(a, o) : "", u.push(D[5] ? g + d : d + g)
                }
                return u.join("")
            }, t.cache = {}, t.parse = function(E) {
                for (var C = E, r = [], s = [], c = 0; C;) {
                    if ((r = /^[^\x25]+/.exec(C)) !== null) s.push(r[0]);
                    else if ((r = /^\x25{2}/.exec(C)) !== null) s.push("%");
                    else if ((r = /^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(C)) !== null) {
                        if (r[2]) {
                            c |= 1;
                            var g = [],
                                u = r[2],
                                _ = [];
                            if ((_ = /^([a-z_][a-z_\d]*)/i.exec(u)) !== null)
                                for (g.push(_[1]);
                                    (u = u.slice(_[0].length)) !== "";)
                                    if ((_ = /^\.([a-z_][a-z_\d]*)/i.exec(u)) !== null) g.push(_[1]);
                                    else if ((_ = /^\[(\d+)\]/.exec(u)) !== null) g.push(_[1]);
                            else throw "[sprintf] huh?";
                            else throw "[sprintf] huh?";
                            r[2] = g
                        } else c |= 2;
                        if (c === 3) throw "[sprintf] mixing positional and named placeholders is not (yet) supported";
                        s.push(r)
                    } else throw "[sprintf] huh?";
                    C = C.slice(r[0].length)
                }
                return s
            };
            var p = function(E, C, r) {
                return r = C.slice(0), r.splice(0, 0, E), t.apply(null, r)
            };

            function f(E) {
                return Object.prototype.toString.call(E).slice(8, -1).toLowerCase()
            }

            function R(E, C) {
                for (var r = []; C > 0; r[--C] = E);
                return r.join("")
            }
            w.sprintf = t, w.vsprintf = p
        })(typeof commonjsGlobal < "u" ? commonjsGlobal : self || window),
        function(w, t) {
            var p;
            if (typeof window < "u") p = window;
            else if (typeof self < "u") p = self;
            else if (typeof commonjsGlobal < "u") p = commonjsGlobal;
            else throw new Error("Unknow context");
            module.exports ? module.exports = function(f, R, E) {
                return R === t && (typeof window < "u" ? R = jqueryExports : R = jqueryExports(f)), E === t && (E = requireWcwidth()), w(R, E, f), R
            } : (p.jQuery || (p.$ = p.cash), w(p.jQuery || p.cash, p.wcwidth, p))
        }(function($, wcwidth, root, undefined$1) {
            function debug(w) {}

            function DelayQueue() {
                var w = $.Callbacks(),
                    t = !1;
                this.resolve = function() {
                    w.fire(), t = !0
                }, this.add = function(p) {
                    t ? p() : w.add(p)
                }
            }
            $.omap = function(w, t) {
                var p = {};
                return $.each(w, function(f, R) {
                    p[f] = t.call(w, f, R)
                }), p
            }, $.fn.text_length = function() {
                return this.map(function() {
                    return $(this).text().length
                }).get().reduce(function(w, t) {
                    return w + t
                }, 0)
            };
            var Clone = {
                    clone_object: function(w) {
                        var t = {};
                        if (typeof w == "object") {
                            if ($.isArray(w)) return this.clone_array(w);
                            if (w === null) return w;
                            for (var p in w) $.isArray(w[p]) ? t[p] = this.clone_array(w[p]) : typeof w[p] == "object" ? t[p] = this.clone_object(w[p]) : t[p] = w[p]
                        }
                        return t
                    },
                    clone_array: function(w) {
                        if (!is_function(Array.prototype.map)) throw new Error("Your browser don't support ES5 array map use es5-shim");
                        return w.slice(0).map((function(t) {
                            return typeof t == "object" ? this.clone_object(t) : t
                        }).bind(this))
                    }
                },
                clone = function(w) {
                    return Clone.clone_object(w)
                };
            "Map" in root && !("clear" in Map.prototype) && (Map.prototype.clear = function() {
                this.forEach(function(w, t, p) {
                    p.delete(t)
                })
            });
            var localStorage;
            (function() {
                var w = function() {
                        try {
                            var c = "test",
                                g = window.localStorage;
                            return g.setItem(c, "1"), g.removeItem(c), !0
                        } catch {
                            return !1
                        }
                    },
                    t = function() {
                        try {
                            return document.cookie.split(";"), !0
                        } catch {
                            return !1
                        }
                    },
                    p = w();

                function f(c, g) {
                    var u;
                    if (typeof c == "string" && typeof g == "string") return localStorage[c] = g, !0;
                    if (typeof c == "object" && typeof g > "u") {
                        for (u in c) c.hasOwnProperty(u) && (localStorage[u] = c[u]);
                        return !0
                    }
                    return !1
                }

                function R(c, g) {
                    var u, _, v;
                    if (u = new Date, u.setTime(u.getTime() + 31536e6), _ = "; expires=" + u.toGMTString(), typeof c == "string" && typeof g == "string") return document.cookie = c + "=" + g + _ + "; path=/", !0;
                    if (typeof c == "object" && typeof g > "u") {
                        for (v in c) c.hasOwnProperty(v) && (document.cookie = v + "=" + c[v] + _ + "; path=/");
                        return !0
                    }
                    return !1
                }

                function E(c) {
                    return localStorage[c]
                }

                function C(c) {
                    var g, u, _, v;
                    for (g = c + "=", u = document.cookie.split(";"), _ = 0; _ < u.length; _++) {
                        for (v = u[_]; v.charAt(0) === " ";) v = v.slice(1, v.length);
                        if (v.indexOf(g) === 0) return v.slice(g.length, v.length)
                    }
                    return null
                }

                function r(c) {
                    return delete localStorage[c]
                }

                function s(c) {
                    return R(c, "")
                }!t() && !p ? (localStorage = {}, $.extend({
                    Storage: {
                        set: f,
                        get: E,
                        remove: r
                    }
                })) : (p && (localStorage = window.localStorage), $.extend({
                    Storage: {
                        set: p ? f : R,
                        get: p ? E : C,
                        remove: p ? r : s
                    }
                }))
            })();
            var debounce = function() {
                    var w = "Expected a function";

                    function t(f) {
                        var R = typeof f;
                        return f != null && (R == "object" || R == "function")
                    }

                    function p() {
                        return Date.now()
                    }
                    return function(R, E, C) {
                        var r = Math.max,
                            s = Math.min,
                            c, g, u, _, v, D, d = 0,
                            a = !1,
                            o = !1,
                            i = !0;
                        if (typeof R != "function") throw new TypeError(w);
                        E = E || 0, t(C) && (a = !!C.leading, o = "maxWait" in C, u = o ? r(C.maxWait || 0, E) : u, i = "trailing" in C ? !!C.trailing : i);

                        function l(K) {
                            var U = c,
                                te = g;
                            return c = g = undefined$1, d = K, _ = R.apply(te, U), _
                        }

                        function b(K) {
                            return d = K, v = setTimeout(T, E), a ? l(K) : _
                        }

                        function A(K) {
                            var U = K - D,
                                te = K - d,
                                fe = E - U;
                            return o ? s(fe, u - te) : fe
                        }

                        function n(K) {
                            var U = K - D,
                                te = K - d;
                            return D === undefined$1 || U >= E || U < 0 || o && te >= u
                        }

                        function T() {
                            var K = p();
                            if (n(K)) return S(K);
                            v = setTimeout(T, A(K))
                        }

                        function S(K) {
                            return v = undefined$1, i && c ? l(K) : (c = g = undefined$1, _)
                        }

                        function L() {
                            v !== undefined$1 && clearTimeout(v), d = 0, c = D = g = v = undefined$1
                        }

                        function z() {
                            return v === undefined$1 ? _ : S(p())
                        }

                        function G() {
                            var K = p(),
                                U = n(K);
                            if (c = arguments, g = this, D = K, U) {
                                if (v === undefined$1) return b(D);
                                if (o) return v = setTimeout(T, E), l(D)
                            }
                            return v === undefined$1 && (v = setTimeout(T, E)), _
                        }
                        return G.cancel = L, G.flush = z, G
                    }
                }(),
                jQuery = $;
            (function(w) {
                jQuery.fn.extend({
                    everyTime: function(t, p, f, R, E) {
                        return this.each(function() {
                            jQuery.timer.add(this, t, p, f, R, E)
                        })
                    },
                    oneTime: function(t, p, f) {
                        return this.each(function() {
                            jQuery.timer.add(this, t, p, f, 1)
                        })
                    },
                    stopTime: function(t, p) {
                        return this.each(function() {
                            jQuery.timer.remove(this, t, p)
                        })
                    }
                }), jQuery.extend({
                    timer: {
                        guid: 1,
                        global: {},
                        regex: /^([0-9]+)\s*(.*s)?$/,
                        powers: {
                            ms: 1,
                            cs: 10,
                            ds: 100,
                            s: 1e3,
                            das: 1e4,
                            hs: 1e5,
                            ks: 1e6
                        },
                        timeParse: function(t) {
                            if (t === undefined$1 || t === null) return null;
                            var p = this.regex.exec(jQuery.trim(t.toString()));
                            if (p[2]) {
                                var f = parseInt(p[1], 10),
                                    R = this.powers[p[2]] || 1;
                                return f * R
                            } else return t
                        },
                        add: function(t, p, f, R, E, C) {
                            var r = 0;
                            if (jQuery.isFunction(f) && (E || (E = R), R = f, f = p), p = jQuery.timer.timeParse(p), !(typeof p != "number" || isNaN(p) || p <= 0)) {
                                E && E.constructor !== Number && (C = !!E, E = 0), E = E || 0, C = C || !1, t.$timers || (t.$timers = {}), t.$timers[f] || (t.$timers[f] = {}), R.$timerID = R.$timerID || this.guid++;
                                var s = function() {
                                    C && s.inProgress || (s.inProgress = !0, (++r > E && E !== 0 || R.call(t, r) === !1) && jQuery.timer.remove(t, f, R), s.inProgress = !1)
                                };
                                s.$timerID = R.$timerID, t.$timers[f][R.$timerID] || (t.$timers[f][R.$timerID] = setInterval(s, p)), this.global[f] || (this.global[f] = []), this.global[f].push(t)
                            }
                        },
                        remove: function(t, p, f) {
                            var R = t.$timers,
                                E;
                            if (R) {
                                if (p) {
                                    if (R[p]) {
                                        if (f) f.$timerID && (clearInterval(R[p][f.$timerID]), delete R[p][f.$timerID]);
                                        else
                                            for (var r in R[p]) R[p].hasOwnProperty(r) && (clearInterval(R[p][r]), delete R[p][r]);
                                        for (E in R[p])
                                            if (R[p].hasOwnProperty(E)) break;
                                        E || (E = null, delete R[p])
                                    }
                                } else
                                    for (var C in R) R.hasOwnProperty(C) && this.remove(t, C, f);
                                for (E in R)
                                    if (R.hasOwnProperty(E)) break;
                                E || (t.$timers = null)
                            }
                        }
                    }
                }), /(msie) ([\w.]+)/.exec(navigator.userAgent.toLowerCase()) && w(window).one("unload", function() {
                    var t = jQuery.timer.global;
                    for (var p in t)
                        if (t.hasOwnProperty(p))
                            for (var f = t[p], R = f.length; --R;) jQuery.timer.remove(f[R], p)
                })
            })(jQuery),
            function(w) {
                if (String.prototype.split.toString().match(/\[native/)) {
                    var t = String.prototype.split,
                        p = /()??/.exec("")[1] === w,
                        f;
                    return f = function(R, E, C) {
                        if (Object.prototype.toString.call(E) !== "[object RegExp]") return t.call(R, E, C);
                        var r = [],
                            s = (E.ignoreCase ? "i" : "") + (E.multiline ? "m" : "") + (E.extended ? "x" : "") + (E.sticky ? "y" : ""),
                            c = 0,
                            g, u, _, v;
                        for (E = new RegExp(E.source, s + "g"), R += "", p || (g = new RegExp("^" + E.source + "$(?!\\s)", s)), C = C === w ? -1 >>> 0 : C >>> 0;
                            (u = E.exec(R)) && (_ = u.index + u[0].length, !(_ > c && (r.push(R.slice(c, u.index)), !p && u.length > 1 && u[0].replace(g, function() {
                                for (var D = 1; D < arguments.length - 2; D++) arguments[D] === w && (u[D] = w)
                            }), u.length > 1 && u.index < R.length && Array.prototype.push.apply(r, u.slice(1)), v = u[0].length, c = _, r.length >= C)));) E.lastIndex === u.index && E.lastIndex++;
                        return c === R.length ? (v || !E.test("")) && r.push("") : r.push(R.slice(c)), r.length > C ? r.slice(0, C) : r
                    }, String.prototype.split = function(R, E) {
                        return f(this, R, E)
                    }, f
                }
            }(), $.fn.caret = function(w) {
                var t = this[0],
                    p = t.contentEditable === "true";
                if (arguments.length === 0) {
                    if (window.getSelection) {
                        if (p) {
                            this.is(":focus") || t.focus();
                            var f = window.getSelection().getRangeAt(0),
                                R = f.cloneRange();
                            return R.selectNodeContents(t), R.setEnd(f.endContainer, f.endOffset), R.toString().length
                        }
                        return t.selectionStart
                    }
                    if (document.selection) {
                        if (t.focus(), p) {
                            var f = document.selection.createRange(),
                                R = document.body.createTextRange();
                            return R.moveToElementText(t), R.setEndPoint("EndToEnd", f), R.text.length
                        }
                        var w = 0,
                            E = t.createTextRange(),
                            R = document.selection.createRange().duplicate(),
                            C = R.getBookmark();
                        for (E.moveToBookmark(C); E.moveStart("character", -1) !== 0;) w++;
                        return w
                    }
                    return 0
                }
                if (w === -1 && (w = this[p ? "text" : "val"]().length), window.getSelection)
                    if (p) {
                        this.is(":focus") || t.focus();
                        var r = window.getSelection();
                        r.collapse(r.focusNode, w)
                    } else t.setSelectionRange(w, w);
                else if (document.body.createTextRange) {
                    var E = document.body.createTextRange();
                    E.moveToElementText(t), E.moveStart("character", w), E.collapse(!0), E.select()
                }
                return !p && !this.is(":focus") && t.focus(), w
            };

            function make_callback_plugin(w) {
                var t = $.extend({
                    init: $.noop,
                    destroy: $.noop,
                    name: "event"
                }, w);
                return function(p, f) {
                    var R = arguments.length === 0,
                        E = arguments[0] === "unbind";
                    if (!R && !E && !is_function(p)) throw new Error('Invalid argument, it need to a function or string "unbind" or no arguments.');
                    E && (p = is_function(arguments[1]) ? arguments[1] : null);
                    var C = "callbacks_" + t.name;
                    return this.each(function() {
                        var r = $(this),
                            s;

                        function c(g) {
                            s.fireWith(r, [g])
                        }
                        R || E ? (s = r.data(C), R ? s && s.fire() : (p && s ? (s.remove(p), s.has() || (s = null)) : s = null, s || (r.removeData(C), t.destroy.call(this, c, f)))) : r.data(C) ? $(this).data(C).add(p) : (s = $.Callbacks(), s.add(p), r.data(C, s), t.init.call(this, c, f))
                    })
                }
            }
            $.fn.resizer = make_callback_plugin({
                name: "resize",
                init: function(w, t) {
                    var p = $.extend({
                            prefix: ""
                        }, t),
                        f = $(this),
                        R, E = !0;
                    if (f.is("body")) $(window).on("resize.resizer", w);
                    else if (window.ResizeObserver) R = new ResizeObserver(function() {
                        E || w(), E = !1
                    }), R.observe(this), f.data("observer", R);
                    else {
                        var C = $("<iframe/>").addClass(p.prefix + "resizer").appendTo(this)[0];
                        $(C.contentWindow).on("resize", w)
                    }
                },
                destroy: function() {
                    var w = $(this);
                    if (window.ResizeObserver) {
                        var t = w.data("observer");
                        t && (t.unobserve(this), w.removeData("observer"))
                    } else {
                        var p = w.find('> iframe[class$="resizer"]');
                        p.length ? ($(p[0].contentWindow).off("resize").remove(), p.remove()) : w.is("body") && $(window).off("resize.resizer")
                    }
                }
            }), $.fn.touch_scroll = make_callback_plugin({
                name: "touch",
                init: function(w) {
                    var t, p;
                    $(this).on("touchstart.scroll", function(f) {
                        f = f.originalEvent, f.target.tagName.toLowerCase() !== "a" && f.touches.length === 1 && (p = t = f.touches[0])
                    }).on("touchmove.scroll", function(f) {
                        if (f = f.originalEvent, t && f.touches.length === 1) {
                            var R = f.touches[0],
                                E = w({
                                    origin: t,
                                    previous: p,
                                    current: R
                                });
                            E === !1 && f.preventDefault(), p = R
                        }
                    }).on("touchend.scroll", function() {
                        (t || p) && (t = p = null)
                    })
                },
                destroy: function() {
                    $(this).off("touchstart.scroll touchmove.scroll touchend.scroll")
                }
            });

            function jquery_resolve(w) {
                var t = jQuery.Deferred();
                return t.resolve(w), t.promise()
            }

            function unpromise(w, t, p) {
                if (w !== undefined$1) {
                    if (is_function(w.catch) && w.catch(p), is_function(w.done)) return w.done(t);
                    if (is_function(w.then)) return w.then(t);
                    if (w instanceof Array) {
                        var f = w.filter(function(E) {
                            return E && (is_function(E.done) || is_function(E.then))
                        });
                        if (f.length) {
                            var R = $.when.apply($, w).then(function() {
                                return t([].slice.call(arguments))
                            });
                            return is_function(R.catch) && (R = R.catch(p)), R
                        }
                    }
                    return t(w)
                }
            }
            $.fn.is_fully_in_viewport = function() {
                function w(t, p) {
                    var f = t.getBoundingClientRect(),
                        R = p[0].getBoundingClientRect(),
                        E = f.top - R.top,
                        C = f.bottom - R.top,
                        r = p.height();
                    return C > 0 && E <= r
                }
                return root.IntersectionObserver ? function(t) {
                    var p = this[0],
                        f = jQuery.Deferred(),
                        R = new root.IntersectionObserver(function(E) {
                            f.resolve(E[0].isIntersecting && E[0].ratio === 1), R.unobserve(p)
                        }, {
                            root: t[0]
                        });
                    return R.observe(p), f.promise()
                } : function(t) {
                    return jquery_resolve(w(this[0], t))
                }
            }();
            var entity_re = /(&(?:[a-z\d]+|#\d+|#x[a-f\d]+);)/i,
                combine_chr_re = /(.(?:[\u0300-\u036F]|[\u1AB0-\u1abE]|[\u1DC0-\u1DF9]|[\u1DFB-\u1DFF]|[\u20D0-\u20F0]|[\uFE20-\uFE2F])+)/,
                astral_symbols_re = /([\uD800-\uDBFF][\uDC00-\uDFFF])/,
                emoji_re = /(\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC68(?:\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83E\uDDD1(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69])(?:\uD83C[\uDFFB-\uDFFE])|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69])(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69])(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69])(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69])(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83E\uDDD1(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC3B\u200D\u2744|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F\u200D[\u2640\u2642]|(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E-\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3C-\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDF])\u200D[\u2640\u2642])\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F?|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD]))/,
                mobile_re = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i,
                tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,
                format_split_re = /(\[\[(?:-?[@!gbiuso])*;[^;]*;[^\]]*\](?:[^\]\\]*(?:\\\\)*\\\][^\]]*|[^\]]*|[^[]*\[[^\]]*)\]?)/i,
                format_parts_re = /\[\[((?:-?[@!gbiuso])*);([^;]*);([^;\]]*);?([^;\]]*);?([^\]]*)\]([^\]\\]*\\\][^\]]*|[^\]]*|[^[]*\[[^\]]+)\]?/gi,
                format_re = /\[\[((?:-?[@!gbiuso])*;[^;\]]*;[^;\]]*(?:;|[^\]()]*);?[^\]]*)\]([^\]]*\\\][^\]]*|[^\]]*|[^[]*\[[^\]]*)\]?/gi,
                format_exist_re = /\[\[((?:-?[@!gbiuso])*;[^;\]]*;[^;\]]*(?:;|[^\]()]*);?[^\]]*)\]([^\]]*\\\][^\]]*|[^\]]*|[^[]*\[[^\]]*)\]/gi,
                format_full_re = /^(\[\[(?:(?:-?[@!gbiuso])*;[^;\]]*;[^;\]]*(?:;|[^\]()]*);?[^\]]*)\])([^\]]*\\\][^\]]*|[^\]]*|[^[]*\[[^\]]*)(\])$/i,
                format_begin_re = /(\[\[(?:-?[@!gbiuso])*;[^;]*;[^\]]*\])/i,
                format_start_re = /^(\[\[(?:-?[@!gbiuso])*;[^;]*;[^\]]*\])/i,
                format_end_re = /\[\[(?:-?[@!gbiuso])*;[^;]*;[^\]]*\]?$/i,
                self_closing_re = /^(?:\[\[)?[^;]*@[^;]*;/,
                color_re = /^(?:#([0-9a-f]{3}|[0-9a-f]{4}|[0-9a-f]{6}|[0-9a-f]{8})|rgba?\([^)]+\)|hsla?\([^)]+\))$/i,
                url_re = /(\b(?:file|ftp|https?):\/\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\s"'\\<>\][)])+)/gi,
                url_nf_re = /\b(?![^"\s[\]]*])(https?:\/\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\s"'\\<>\][)])+)/gi,
                email_re = /((([^<>('")[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,})))/g,
                url_full_re = /^(https?:\/\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\s"'<>\\\][)])+)$/gi,
                email_full_re = /^((([^<>('")[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,})))$/g,
                command_re = /((?:"[^"\\]*(?:\\[\S\s][^"\\]*)*"|'[^'\\]*(?:\\[\S\s][^'\\]*)*'|`[^`\\]*(?:\\[\S\s][^`\\]*)*`|\/[^\/\\]*(?:\\[\S\s][^\/\\]*)*\/[gimsuy]*(?=\s|$)|(?:\\\s|\S))+)(?=\s|$)/gi,
                extended_command_re = /^\s*((terminal|cmd)::([a-z_]+)\(([\s\S]*)\))\s*$/,
                format_exec_split_re = /(\[\[(?:-?[@!gbiuso])*;[^\]]+\](?:\\[[\]]|[^\]])*\]|\[\[[\s\S]+?\]\])/,
                format_exec_re = /(\[\[[\s\S]+?\]\])/,
                float_re = /^[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?$/,
                re_re = /^\/((?:\\\/|[^/]|\[[^\]]*\/[^\]]*\])+)\/([gimsuy]*)$/,
                string_re = /("(?:[^"\\]|\\(?:\\\\)*"|\\\\)*"|'(?:[^'\\]|\\(?:\\\\)*'|\\\\)*'|`(?:[^`\\]|\\(?:\\\\)*`|\\\\)*`)/,
                unclosed_strings_re = /^(?=((?:[^"']+|"[^"\\]*(?:\\[^][^"\\]*)*"|'[^'\\]*(?:\\[^][^'\\]*)*')*))\1./,
                broken_image = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 14"><title id="title2">rounded</title><path id="terminal-broken-image" d="m 14,10 h 2 v 1 a 3,3 0 0 1 -3,3 H 3 A 3,3 0 0 1 0,11 H 4.5 A 1.00012,1.00012 0 0 0 5.207,10.707 L 6.5,9.414 7.793,10.707 a 0.99963,0.99963 0 0 0 1.41406,0 l 2.36719,-2.36719 1.80127,1.44092 A 0.99807,0.99807 0 0 0 14,10 Z M 16,3 V 8 H 14.35059 L 12.12451,6.21924 A 0.99846,0.99846 0 0 0 10.793,6.293 L 8.5,8.586 7.207,7.293 a 0.99962,0.99962 0 0 0 -1.41406,0 L 4.08594,9 H 0 V 3 A 3,3 0 0 1 3,0 h 10 a 3,3 0 0 1 3,3 z M 6,4.5 A 1.5,1.5 0 1 0 4.5,6 1.5,1.5 0 0 0 6,4.5 Z" /></svg>',
                use_broken_image = '<svg class="terminal-broken-image" role="presentation" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 14" xmlns:xlink="http://www.w3.org/1999/xlink"><use xlink:href="#terminal-broken-image"/></svg>',
                animation_supported = function() {
                    if (typeof document > "u") return !1;
                    var w = !1,
                        t = "Webkit Moz O ms Khtml".split(" "),
                        p = document.createElement("div");
                    if (p.style.animationName && (w = !0), w === !1)
                        for (var f = 0; f < t.length; f++) {
                            var R = t[f] + "AnimationName";
                            if (p.style[R] !== undefined$1) {
                                w = !0;
                                break
                            }
                        }
                    return p = null, w
                }(),
                agent = (root.navigator || window.navigator).userAgent,
                is_IE = /MSIE|Trident/.test(agent) || /rv:11.0/i.test(agent),
                is_IEMobile = /IEMobile/.test(agent),
                is_ch_unit_supported = function() {
                    if (is_IE && !is_IEMobile) return !1;
                    if (typeof document > "u") return !0;
                    var w = document.createElement("div");
                    return w.style.width = "1ch", w.style.width === "1ch"
                }(),
                is_css_variables_supported = root.CSS && root.CSS.supports && root.CSS.supports("--fake-var", 0),
                is_android = navigator.userAgent.toLowerCase().indexOf("android") !== -1,
                is_key_native = function() {
                    if (!("KeyboardEvent" in root && "key" in root.KeyboardEvent.prototype)) return !1;
                    var t = root.KeyboardEvent.prototype,
                        p = Object.getOwnPropertyDescriptor(t, "key").get;
                    return !!p.toString().match(/\[native code\]/)
                }(),
                is_browser = function() {
                    try {
                        return this === window
                    } catch {
                        return !1
                    }
                }(),
                is_mobile = function(w) {
                    var t = !1;
                    return (mobile_re.test(w) || tablet_re.test(w.substr(0, 4))) && (t = !0), navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1 ? !0 : t
                }(navigator.userAgent || navigator.vendor || root.opera),
                ch_unit_bug = !1;
            is_browser && $(function() {
                function w(R) {
                    return R[0].getBoundingClientRect().width
                }
                var t = '<span style="font-family: monospace;visibility:hidden;',
                    p = $(t + 'width:1ch;overflow: hidden">&nbsp;</span>');
                p.appendTo("body");
                var f = $(t + '">&nbsp;</span>').appendTo("body");
                ch_unit_bug = Math.abs(w(p) - w(f)) > 1e-4, p.remove(), f.remove()
            });

            function css(w, t, p) {
                if (w instanceof $.fn.init) w.each(function() {
                    css(this, t)
                });
                else if ($.isPlainObject(t)) Object.keys(t).forEach(function(f) {
                    w.style.setProperty(f, t[f])
                });
                else return w.style.getPropertyValue(t)
            }

            function style_prop(w, t, p) {
                var f = [w + ":" + t + "px", w + ":calc(" + t + "px / var(--pixel-density, 1))"];
                return p && (f = f.map(function(R) {
                    return R + " !important"
                })), f.join(";")
            }

            function a11y_hide(w) {
                w.attr({
                    role: "presentation",
                    "aria-hidden": "true"
                })
            }
            var excepctions = [];

            function alert_exception(w, t) {
                arguments[0] instanceof $.terminal.Exception && (w = arguments[0].type, t = arguments[0]);
                var p = (w ? w + ": " : "") + exception_message(t);
                excepctions.indexOf(p) === -1 && (excepctions.push(p), setTimeout(function() {
                    throw t
                }, 0))
            }

            function generate_id() {
                var w = Math.random() * 46656 | 0,
                    t = Math.random() * 46656 | 0;
                return w = ("000" + w.toString(36)).slice(-3), t = ("000" + t.toString(36)).slice(-3), w + t
            }

            function scrollbar_event(w, t, p) {
                p = p || 1;
                var f = t.offset().left,
                    R = t.outerWidth() * p;
                return R <= w.clientX - f
            }

            function exception_message(w) {
                return typeof w == "string" ? w : typeof w.fileName == "string" ? w.fileName + ": " + w.message : w.message
            }

            function Cycle() {
                var w = [].slice.call(arguments),
                    t = 0;
                $.extend(this, {
                    get: function() {
                        return w
                    },
                    index: function() {
                        return t
                    },
                    rotate: function(p, f) {
                        if (f === undefined$1) f = t;
                        else if (f === t) return;
                        if (!p) {
                            var R = w.filter(function(E) {
                                return typeof E < "u"
                            });
                            if (!R.length) return
                        }
                        if (w.length) return w.length === 1 ? w[0] : (t === w.length - 1 ? t = 0 : ++t, typeof w[t] < "u" ? w[t] : this.rotate(!0, f))
                    },
                    length: function() {
                        return w.length
                    },
                    remove: function(p) {
                        delete w[p]
                    },
                    set: function(p) {
                        for (var f = w.length; f--;)
                            if (w[f] === p) {
                                t = f;
                                return
                            } this.append(p), t = w.length - 1
                    },
                    front: function() {
                        if (w.length) {
                            for (var p = t, f = !1; !w[p];)
                                if (p++, p > w.length) {
                                    if (f) break;
                                    p = 0, f = !0
                                } return w[p]
                        }
                    },
                    map: function(p) {
                        return w.map(function(f, R) {
                            return typeof f < "u" ? p(f, R) : null
                        }).filter(Boolean)
                    },
                    forEach: function(p) {
                        return w.forEach(function(f, R) {
                            typeof f < "u" && p(f, R)
                        })
                    },
                    append: function(p) {
                        w.push(p)
                    }
                })
            }

            function Stack(w) {
                var t = is_array(w) ? w : w ? [w] : [];
                $.extend(this, {
                    data: function() {
                        return t
                    },
                    map: function(p) {
                        return $.map(t, p)
                    },
                    size: function() {
                        return t.length
                    },
                    pop: function() {
                        if (t.length === 0) return null;
                        var p = t[t.length - 1];
                        return t = t.slice(0, t.length - 1), p
                    },
                    push: function(p) {
                        return t = t.concat([p]), p
                    },
                    top: function() {
                        return t.length > 0 ? t[t.length - 1] : null
                    },
                    clone: function() {
                        return new Stack(t.slice(0))
                    }
                })
            }

            function WorkerCache(w) {
                var t = $.extend({
                    validation: $.noop,
                    action: $.noop,
                    onCache: $.noop
                }, w);
                this._onCache = t.onCache.bind(this), this._action = t.action.bind(this), this._validation = t.validation.bind(this), "Map" in root && (this._cache = new Map)
            }
            WorkerCache.prototype.validate = function(w) {
                var t = this._validation(w),
                    p = t === undefined$1 || t === !0;
                return p || this._cache.clear(), p
            }, WorkerCache.prototype.clear = function() {
                this._cache.clear()
            }, WorkerCache.prototype.get = function(w) {
                if (!this._cache) return this._action(w);
                var t;
                return this.validate(w) && this._cache.has(w) ? (t = this._cache.get(w), this._onCache({
                    cache: t
                }), t) : (t = this._action(w), this._cache.set(w, t), t)
            };

            function History(w, t, p) {
                var f = !0,
                    R = "";
                typeof w == "string" && w !== "" && (R = w + "_"), R += "commands";
                var E;
                p ? E = [] : (E = $.Storage.get(R), E = E ? JSON.parse(E) : []);
                var C = E.length - 1;
                $.extend(this, {
                    append: function(r) {
                        f && E[E.length - 1] !== r && (E.push(r), t && E.length > t && (E = E.slice(-t)), C = E.length - 1, p || $.Storage.set(R, JSON.stringify(E)))
                    },
                    set: function(r) {
                        is_array(r) && (E = r, p || $.Storage.set(R, JSON.stringify(E)))
                    },
                    data: function() {
                        return E
                    },
                    reset: function() {
                        C = E.length - 1
                    },
                    last: function() {
                        return E[E.length - 1]
                    },
                    end: function() {
                        return C === E.length - 1
                    },
                    position: function() {
                        return C
                    },
                    current: function() {
                        return E[C]
                    },
                    next: function() {
                        var r = C;
                        if (C < E.length - 1 && ++C, r !== C) return E[C]
                    },
                    previous: function() {
                        var r = C;
                        if (C > 0 && --C, r !== C) return E[C]
                    },
                    clear: function() {
                        E = [], this.purge()
                    },
                    enabled: function() {
                        return f
                    },
                    enable: function() {
                        f = !0
                    },
                    purge: function() {
                        p || $.Storage.remove(R)
                    },
                    disable: function() {
                        f = !1
                    },
                    toggle: function(r) {
                        typeof r > "u" ? f = !f : f = r
                    }
                })
            }

            function OutputLines(w) {
                this._settings = w, this._lines = [], this._snapshot = []
            }
            OutputLines.prototype.make_snapshot = function(w) {
                this._snapshot.push(w)
            }, OutputLines.prototype.get_partial = function() {
                var w = this._snapshot[this._snapshot.length - 1];
                return w
            }, OutputLines.prototype.update_snapshot = function(w, t) {
                this._snapshot[w] = t
            }, OutputLines.prototype.limit_snapshot = function(w) {
                this._snapshot = this._snapshot.slice(w)
            }, OutputLines.prototype.clear_snapshot = function() {
                this._snapshot = []
            }, OutputLines.prototype.get_snapshot = function() {
                return this._snapshot.reduce(function(w, t) {
                    return w.concat(t)
                }, []).join(`
`)
            }, OutputLines.prototype.join = function() {
                var w = [].slice.call(arguments);
                return w.some(is_function) ? function() {
                    return w.reduce(function(t, p) {
                        return is_function(t) && (t = t()), is_function(p) && (p = p()), is_promise(t) || is_promise(p) ? $.when(t, p).then(function(f, R) {
                            return f + R
                        }) : p
                    })
                } : w.some(is_promise) ? w.reduce(function(t, p) {
                    return $.when(t, p).then(function(f, R) {
                        return f + R
                    })
                }) : w.join("")
            }, OutputLines.prototype.import = function(w) {
                this._lines = w
            }, OutputLines.prototype.push = function(w) {
                var t = w[0],
                    p = w[1];
                if (this.has_newline()) this._lines.push(w);
                else {
                    var f = this.last_line();
                    f[0] = this.join(f[0], t), f[1].newline = p.newline
                }
            }, OutputLines.prototype.clear = function(w) {
                this._lines.forEach(function(t, p) {
                    var f = t[1];
                    is_function(f.onClear) && f.onClear.call(self, w(p))
                }), this._lines = [], this._snapshot = []
            }, OutputLines.prototype.data = function() {
                return this._lines
            }, OutputLines.prototype.has_newline = function() {
                return this._lines.length === 0 ? !0 : this.last_line()[1].newline
            }, OutputLines.prototype.unmount = function(w) {
                var t = w.data("index"),
                    p = this._lines[t];
                if (p) {
                    var f = p[1];
                    is_function(f.unmount) && f.unmount.call(self, w)
                }
            }, OutputLines.prototype.last_line = function() {
                var w = this._lines.length;
                return this._lines[w - 1]
            }, OutputLines.prototype.update = function(w, t, p) {
                if (t === null) this._lines.splice(w, 1);
                else return this._lines[w][0] = t, p && (this._lines[w][1] = $.extend(this._lines[w][1], p)), this._lines[w][1]
            }, OutputLines.prototype.length = function() {
                return this._lines.length
            }, OutputLines.prototype.valid_index = function(w) {
                return !!this._lines[w]
            }, OutputLines.prototype.render = function(w, t) {
                var p = this._settings(),
                    f = [];
                if (this._snapshot = [], p.outputLimit >= 0) {
                    var R;
                    p.outputLimit === 0 ? R = w : R = p.outputLimit, this._lines.forEach(function(C, r) {
                        var s = C[0],
                            c = C[1];
                        f.push({
                            value: s,
                            index: r,
                            options: c
                        })
                    });
                    var E = f.length - R - 1;
                    f = f.slice(E)
                } else f = this._lines.map(function(C, r) {
                    return {
                        value: C[0],
                        index: r,
                        options: C[1]
                    }
                });
                return t(f)
            };

            function FormatBuffer(w) {
                this._options = w, "Map" in root && (this._format_cache = new Map), this._output_buffer = []
            }
            FormatBuffer.NEW_LINE = 1, FormatBuffer.prototype.format = function(t, p, f) {
                var R = this._format_cache && this._settings.useCache;
                if (R) {
                    var E = JSON.stringify([t, this._settings]);
                    if (this._format_cache.has(E)) return this._format_cache.get(E)
                }
                var C = {
                    line: $.terminal.format(t, this._settings),
                    raw: f,
                    newline: p
                };
                return R && this._format_cache.set(E, C), C
            }, FormatBuffer.prototype.empty = function() {
                return !this._output_buffer.length
            }, FormatBuffer.prototype.append = function(w, t, p, f) {
                if (this._settings = $.extend({
                        useCache: !0
                    }, this._options(p)), this._output_buffer.push(FormatBuffer.NEW_LINE), w instanceof Array)
                    for (var R = f.split(`
`), E = 0, C = w.length; E < C; ++E)
                        if (w[E] === "" || w[E] === "\r") this._output_buffer.push({
                            line: "",
                            raw: ""
                        });
                        else {
                            var r = this.format(w[E], E === C - 1, R[E]);
                            this._output_buffer.push(r)
                        }
                else p.raw ? this._output_buffer.push({
                    line: w,
                    raw: f
                }) : this._output_buffer.push(this.format(w, !1, f));
                this._output_buffer.push({
                    finalize: p.finalize,
                    index: t,
                    raw: p.raw,
                    newline: p.newline
                })
            }, FormatBuffer.prototype.clear_cache = function() {
                this._format_cache && this._format_cache.clear()
            }, FormatBuffer.prototype.output = function() {
                return this._output_buffer.slice()
            }, FormatBuffer.prototype.is_empty = function() {
                return !this._output_buffer.length
            }, FormatBuffer.prototype.clear = function() {
                this._output_buffer = []
            }, FormatBuffer.prototype.forEach = function(w) {
                for (var t = 0; t < this._output_buffer.length;) {
                    var p = this._output_buffer[t++];
                    p === FormatBuffer.NEW_LINE ? w() : w(p)
                }
            }, FormatBuffer.prototype.flush = function(w) {
                this.forEach(w), this.clear()
            };

            function with_prompt(w, t, p) {
                function f(r) {
                    var s = $.terminal.escape_brackets("[ERR]> ");
                    t("[[;red;]" + s + "]"), alert_exception("Prompt", r)
                }

                function R(r) {
                    t(r), E.resolve()
                }
                var E = new $.Deferred;
                switch (typeof w) {
                    case "string":
                        R(w);
                        break;
                    case "function":
                        try {
                            var C = w.call(p, function(r) {
                                R(r)
                            });
                            typeof C == "string" && R(C), C && C.then && C.then(R).catch(f)
                        } catch (r) {
                            f(r)
                        }
                        break
                }
                return E.promise()
            }
            var cmd_index = 0;
            $.cmd = {
                defaults: {
                    mask: !1,
                    caseSensitiveSearch: !0,
                    historySize: 60,
                    prompt: "> ",
                    enabled: !0,
                    history: !0,
                    onPositionChange: $.noop,
                    onCommandChange: $.noop,
                    inputStyle: "textarea",
                    mobileDelete: is_mobile,
                    onPaste: $.noop,
                    clickTimeout: 200,
                    holdTimeout: 400,
                    holdRepeatTimeout: 200,
                    mobileIngoreAutoSpace: [],
                    repeatTimeoutKeys: [],
                    tabindex: 1,
                    tabs: 4
                }
            }, $.fn.cmd = function(w) {
                var t = $.extend({}, $.cmd.defaults, w);

                function p(j) {
                    return t.mobileIngoreAutoSpace.length && t.mobileIngoreAutoSpace.indexOf(j) !== -1 && is_android
                }
                var f = this,
                    R = f.data("cmd");
                if (R) return R;
                var E = cmd_index++;
                f.addClass("cmd");
                var C = $('<div class="cmd-wrapper"/>').appendTo(f);
                C.append('<span class="cmd-prompt"></span>'), C.append('<div class="cmd-cursor-line"><span></span><span class="cmd-cursor"><span data-text class="end"><span>&nbsp;</span></span></span><span></span></div>');
                var r = C.find(".cmd-cursor-line");
                a11y_hide(r);
                var s;
                is_mobile ? (s = function() {
                    var j = $('<div class="cmd-editable"/>').attr({
                        contenteditable: "plaintext-only",
                        autocapitalize: "off",
                        autocorrect: "off",
                        spellcheck: "false",
                        tabindex: t.tabindex
                    }).insertAfter(f);
                    j.on("focus", function() {
                        f.enable()
                    }).on("blur", function() {
                        f.disable()
                    });
                    var ne, se = {
                        $node: j,
                        val: function(xe) {
                            if (typeof xe > "u") return j.text();
                            j.html(xe)
                        },
                        reset: function() {
                            clearTimeout(ne), ne = setTimeout(function() {
                                j.css({
                                    top: "",
                                    bottom: ""
                                })
                            }, 400)
                        },
                        focus: function() {
                            css(j[0], {
                                top: "calc(var(--terminal-scroll, 0) * 1px)"
                            }), se.reset()
                        },
                        blur: function() {
                            j.css({
                                top: "100%",
                                bottom: 0
                            }).blur(), window.getSelection().removeAllRanges(), se.reset()
                        }
                    };
                    return se
                }(), f.addClass("cmd-mobile")) : (s = function() {
                    var j = generate_id(),
                        ne = $("<textarea>").attr({
                            autocapitalize: "off",
                            spellcheck: "false",
                            id: j,
                            tabindex: t.tabindex
                        }).addClass("cmd-clipboard").appendTo(f);
                    return ne.before('<label class="visually-hidden" for="' + j + '">Clipbard textarea for jQuery Terminal</label>'), {
                        $node: ne,
                        val: function(se) {
                            return typeof se > "u" ? ne.val() : ne.val(se)
                        }
                    }
                }(), s.val(" ")), t.width && f.width(t.width);
                var c, g, u, _, v, D = 0,
                    d, a = f.find(".cmd-prompt"),
                    o = !1,
                    i = "",
                    l = null,
                    b, A = "",
                    n, T = "",
                    S = 0,
                    L, z, G = 0,
                    K, U, te = f.find(".cmd-cursor"),
                    fe, ye, Fe = 0,
                    ge = "￿",
                    O = /\uFFFF$/,
                    Z = /^\uFFFF$/;

                function q(j) {
                    var ne = $(j.target);
                    if (ne.is("span,img,a")) return ne = ne.closest("[data-text]"), ne.index() + ne.parent("span").prevAll().find("[data-text]").length + ne.closest('[role="presentation"]').prevUntil(".cmd-prompt").find("[data-text]").length;
                    if (ne.is('div[role="presentation"]')) {
                        var se = !ne.next().length;
                        return ne.find("[data-text]").length + ne.prevUntil(".cmd-prompt").find("[data-text]").length - (se ? 0 : 1)
                    }
                }
                var re = {
                    SPACEBAR: " ",
                    UP: "ArrowUP",
                    DOWN: "ArrowDown",
                    LEFT: "ArrowLeft",
                    RIGHT: "ArrowRight",
                    DEL: "Delete",
                    MULTIPLY: "*",
                    DIVIDE: "/",
                    SUBTRACT: "-",
                    ADD: "+"
                };

                function we(j) {
                    var ne = j.key.toUpperCase();
                    return re[ne] ? re[ne] : ne
                }

                function Ee(j) {
                    if (j.key) {
                        var ne = we(j).toUpperCase();
                        if (ne === "CONTROL") return "CTRL";
                        var se = [];
                        return j.ctrlKey && se.push("CTRL"), j.metaKey && ne !== "META" && se.push("META"), j.shiftKey && ne !== "SHIFT" && se.push("SHIFT"), j.altKey && ne !== "ALT" && se.push("ALT"), se.length && ne === " " && (ne = "SPACEBAR"), j.key && se.push(ne), se.join("+")
                    }
                }
                var je = {
                        3: "Cancel",
                        6: "Help",
                        8: "Backspace",
                        9: "Tab",
                        12: "Clear",
                        13: "Enter",
                        16: "Shift",
                        17: "Control",
                        18: "Alt",
                        19: "Pause",
                        20: "CapsLock",
                        27: "Escape",
                        28: "Convert",
                        29: "NonConvert",
                        30: "Accept",
                        31: "ModeChange",
                        32: " ",
                        33: "PageUp",
                        34: "PageDown",
                        35: "End",
                        36: "Home",
                        37: "ArrowLeft",
                        38: "ArrowUp",
                        39: "ArrowRight",
                        40: "ArrowDown",
                        41: "Select",
                        42: "Print",
                        43: "Execute",
                        44: "PrintScreen",
                        45: "Insert",
                        46: "Delete",
                        48: ["0", ")"],
                        49: ["1", "!"],
                        50: ["2", "@"],
                        51: ["3", "#"],
                        52: ["4", "$"],
                        53: ["5", "%"],
                        54: ["6", "^"],
                        55: ["7", "&"],
                        56: ["8", "*"],
                        57: ["9", "("],
                        91: "OS",
                        93: "ContextMenu",
                        144: "NumLock",
                        145: "ScrollLock",
                        181: "VolumeMute",
                        182: "VolumeDown",
                        183: "VolumeUp",
                        186: [";", ":"],
                        187: ["=", "+"],
                        188: [",", "<"],
                        189: ["-", "_"],
                        190: [".", ">"],
                        191: ["/", "?"],
                        192: ["`", "~"],
                        219: ["[", "{"],
                        220: ["\\", "|"],
                        221: ["]", "}"],
                        222: ["'", '"'],
                        224: "Meta",
                        225: "AltGraph",
                        246: "Attn",
                        247: "CrSel",
                        248: "ExSel",
                        249: "EraseEof",
                        250: "Play",
                        251: "ZoomOut"
                    },
                    ze;
                for (ze = 1; ze < 25; ze++) je[111 + ze] = "F" + ze;
                var oe = "";
                for (ze = 65; ze < 91; ze++) oe = String.fromCharCode(ze), je[ze] = [oe.toLowerCase(), oe.toUpperCase()];
                var W = {};
                Object.keys(je).forEach(function(j) {
                    is_array(je[j]) ? je[j].forEach(function(ne) {
                        W[ne.toUpperCase()] = j
                    }) : W[je[j].toUpperCase()] = j
                });
                var Ce, pe = {
                    "ALT+D": Ne({
                        clipboard: !0
                    }),
                    "HOLD+ALT+D": Ne({
                        clipboard: !0,
                        hold: !0
                    }),
                    "HOLD+DELETE": Ne({
                        clipboard: !1,
                        hold: !0
                    }),
                    "HOLD+SHIFT+DELETE": Ne({
                        clipboard: !1,
                        hold: !0
                    }),
                    ENTER: function() {
                        U && A && !t.mask && (is_function(t.historyFilter) && t.historyFilter(A) || t.historyFilter instanceof RegExp && A.match(t.historyFilter) || !t.historyFilter) && U.append(A);
                        var j = A;
                        s.$node.blur(), U.reset(), nr = "", bt = !0;
                        var ne;
                        return t.commands && (ne = t.commands.call(f, j)), is_function(L) && (ne && is_function(ne.then) ? ne.then(Ut) : Ut()), f.set(""), s.val(""), s.$node.focus(), !1
                    },
                    "SHIFT+ENTER": function() {
                        return f.insert(`
`), !0
                    },
                    BACKSPACE: F,
                    "SHIFT+BACKSPACE": F,
                    TAB: function() {
                        f.insert("	")
                    },
                    "CTRL+D": function() {
                        return f.delete(1), !1
                    },
                    DELETE: function() {
                        return f.delete(1), !0
                    },
                    "HOLD+ARROWUP": cr,
                    ARROWUP: cr,
                    "CTRL+ARROWUP": $e,
                    "CTRL+P": $e,
                    ARROWDOWN: nt,
                    "HOLD+ARROWDOWN": nt,
                    "CTRL+N": Ve,
                    "CTRL+ARROWDOWN": Ve,
                    ARROWLEFT: kt,
                    "HOLD+ARROWLEFT": debounce(kt, 10),
                    "CTRL+B": kt,
                    "CTRL+ARROWLEFT": function() {
                        var j = S - 1,
                            ne = 0;
                        A[j] === " " && --j;
                        for (var se = j; se > 0; --se)
                            if (A[se] === " " && A[se + 1] !== " ") {
                                ne = se + 1;
                                break
                            } else if (A[se] === `
` && A[se + 1] !== `
`) {
                            ne = se;
                            break
                        }
                        f.position(ne)
                    },
                    "CTRL+R": function() {
                        return o ? Fr(!0) : (b = L, Tt(), n = A, f.set(""), ft(), o = !0), !1
                    },
                    "CTRL+G": function() {
                        if (o) return L = b, Ut(), f.set(n), ft(), o = !1, i = "", !1
                    },
                    ARROWRIGHT: Et,
                    "HOLD+ARROWRIGHT": debounce(Et, 10),
                    "CTRL+F": Et,
                    "CTRL+ARROWRIGHT": function() {
                        A[S] === " " && ++S;
                        var j = /\S[\n\s]{2,}|[\n\s]+\S?/,
                            ne = A.slice(S).match(j);
                        !ne || ne[0].match(/^\s+$/) ? f.position(bare_text(A).length) : ne[0][0] !== " " ? S += ne.index + 1 : (S += ne.index + ne[0].length - 1, ne[0][ne[0].length - 1] !== " " && --S), ft()
                    },
                    F12: Xe,
                    END: mr(!0),
                    "CTRL+END": mr(),
                    "CTRL+E": mr(),
                    HOME: Ht(!0),
                    "CTRL+HOME": Ht(),
                    "CTRL+A": Ht(),
                    "SHIFT+INSERT": ut,
                    "CTRL+SHIFT+T": Xe,
                    "CTRL+W": Pe({
                        clipboard: !0,
                        hold: !1
                    }),
                    "HOLD+BACKSPACE": Pe({
                        clipboard: !1,
                        hold: !0
                    }),
                    "HOLD+SHIFT+BACKSPACE": Pe({
                        clipboard: !1,
                        hold: !0
                    }),
                    "CTRL+H": function() {
                        return A !== "" && S > 0 && f.delete(-1), !1
                    },
                    "CTRL+X": Xe,
                    "CTRL+C": function() {
                        return get_selected_html() === ""
                    },
                    "CTRL+T": Xe,
                    "CTRL+Y": function() {
                        T !== "" && f.insert(T)
                    },
                    "CTRL+V": ut,
                    "META+V": ut,
                    "CTRL+K": function() {
                        var j = text(A).length;
                        return j > S && (T = f.delete(j - S), text_to_clipboard(s.$node, T)), !1
                    },
                    "CTRL+U": function() {
                        return A !== "" && S !== 0 && (T = f.delete(-S), text_to_clipboard(s.$node, T)), !1
                    },
                    "CTRL+TAB": function() {
                        return !1
                    },
                    "META+`": Xe,
                    "META+R": Xe,
                    "META+L": Xe
                };

                function Ne(j) {
                    return j = j || {}, j.hold && !t.mobileDelete ? function() {
                        return f.delete(1), !1
                    } : function() {
                        var se = / *[^ ]+ *(?= )|[^ ]+$/,
                            xe = A.slice(S),
                            Oe = xe.match(se);
                        return Oe && (T = Oe[0], j.clipboard && text_to_clipboard(s.$node, T)), f.set(A.slice(0, S) + A.slice(S).replace(se, ""), !0), !1
                    }
                }

                function Pe(j) {
                    return j = j || {}, j.hold && !t.mobileDelete ? function() {
                        f.delete(-1)
                    } : function() {
                        if (A !== "" && S !== 0) {
                            var se = A.slice(0, S).match(/([^ ]* *$)/);
                            se[0].length && (T = f.delete(-se[0].length), j.clipboard && text_to_clipboard(s.$node, T))
                        }
                        return !1
                    }
                }

                function Xe() {
                    return !0
                }

                function ut() {
                    return s.val(""), Fe = 0, f.isenabled() && !s.$node.is(":focus") && s.$node.trigger("focus", [!0]), s.$node.one("input", ct), !0
                }

                function ct() {
                    if (Fe++ > 0) return;

                    function j() {
                        s.val(A), Dt()
                    }

                    function ne(se) {
                        f.insert(se), j()
                    }
                    f.isenabled() && f.oneTime(100, function() {
                        var se = s.val().replace(/\r/g, "");
                        if (is_function(t.onPaste)) {
                            var xe = t.onPaste.call(f, {
                                target: f,
                                text: se
                            });
                            if (xe !== undefined$1) {
                                xe && is_function(xe.then || xe.done) ? (xe.then || xe.done).call(xe, ne) : typeof xe == "string" ? ne(xe) : xe === !1 && j();
                                return
                            }
                        }
                        ne(se)
                    })
                }

                function $e() {
                    return Rr ? (n = A, f.set(U.current())) : f.set(U.previous()), Rr = !1, !1
                }

                function Ve() {
                    return U.end() ? (Rr = !0, f.set(n)) : f.set(U.next()), !1
                }

                function rr(j) {
                    return j.match(/\n/)
                }

                function gr(j, ne) {
                    var se = j.split(`
`).map(function(Oe) {
                        return $.terminal.length(Oe)
                    });
                    ne && (se[0] += ne);
                    var xe = se.filter(function(Oe) {
                        return Oe >= c
                    });
                    return !!xe.length
                }

                function vr(j) {
                    var ne = u,
                        se = $.terminal.split_equal(ne + j, c),
                        xe = new RegExp("^" + $.terminal.escape_regex(ne));
                    return se = se.map($.terminal.unescape_brackets), se[0] = se[0].replace(xe, ""), se
                }

                function cr() {
                    var j = ir(A);
                    j = $.terminal.strip(j);
                    var ne = $.terminal.substring(j, 0, S),
                        se = f.column(),
                        xe = f.find(".cmd-cursor-line"),
                        Oe = xe.prevUntil("span").length;
                    if (Oe === 1 && se <= d) return f.position(0), !1;
                    if (Oe === 0) return $e();
                    if (rr(ne) || gr(ne, d)) {
                        var k = xe.prev(),
                            P = k.is(".cmd-end-line"),
                            H = vr(j);
                        k = H[Oe - 1];
                        var V = H[Oe].substring(se).length,
                            X;
                        return V > 0 ? (X = se, Oe - 1 === 0 && (X -= d), X = se + k.substring(X).length, P && ++X) : X = se + 1, f.position(-X, !0), !1
                    } else return $e()
                }

                function nt() {
                    var j = ir(A);
                    j = $.terminal.strip(j);
                    var ne = $.terminal.substring(j, S);
                    if (rr(ne) || gr(ne)) {
                        var se = vr(j),
                            xe = f.column(),
                            Oe = f.find(".cmd-cursor-line"),
                            k = Oe.prevUntil("span"),
                            P = k.length,
                            H = Oe.is(".cmd-end-line"),
                            V = Oe.next().is(".cmd-end-line"),
                            X = se[P + 1];
                        if (!X) return Ve();
                        var ce = se[P].substring(xe).length,
                            ue;
                        return ce === 0 ? (ue = X.length, V && ue++) : (ue = Math.min(xe, X.length) + ce, P === 0 && (ue += d), H && (ue += 1)), f.position(ue, !0), !1
                    } else return Ve()
                }

                function F() {
                    o ? (i = i.slice(0, -1), Tt()) : A !== "" && S > 0 && f.delete(-1), f.oneTime(1, function() {
                        bt = !0
                    })
                }

                function kt() {
                    S > 0 && f.position(-1, !0)
                }

                function Et() {
                    return S < bare_text(A).length && f.position(1, !0), !1
                }

                function Ht(j) {
                    function ne() {
                        f.position(0)
                    }
                    return j ? function() {
                        if (A.match(/\n/)) {
                            var se = A.substring(0, f.position());
                            f.position(se.lastIndexOf(`
`) + 1)
                        } else ne()
                    } : ne
                }

                function mr(j) {
                    function ne() {
                        f.position(text(A).length)
                    }
                    return j ? function() {
                        if (A.match(/\n/)) {
                            for (var se = A.split(`
`), xe = f.position(), Oe = 0, k = 0; k < se.length; ++k)
                                if (Oe += se[k].length, Oe > xe) {
                                    f.position(Oe + k);
                                    return
                                }
                        }
                        ne()
                    } : ne
                }

                function Lt() {
                    var j = s.$node,
                        ne = j.is(":focus");
                    z ? f.oneTime(10, function() {
                        !j.is(":focus") && z && j.trigger("focus", [!0])
                    }) : ne && !z && j.trigger("blur", [!0])
                }

                function Zt() {
                    if (animation_supported) {
                        var j = window.getComputedStyle(te[0]),
                            ne = j.getPropertyValue("--animation");
                        ne = ne.replace(/^\s*|\s*$/g, "");
                        var se = f.attr("class");
                        if (se.match(/-animation/) && (se = se.replace(/[a-z]+-animation/g, "")), ne && !ne.match(/blink/)) {
                            var xe = ne.replace(/terminal-/, "") + "-animation";
                            se.match(xe) || (se += " " + xe)
                        }
                        se = se.replace(/\s+/g, " "), se !== f.attr("class").replace(/\s+/g, " ") && f.attr("class", se)
                    }
                }

                function Dt(j) {
                    f.isenabled() && f.oneTime(10, function() {
                        !is_mobile && s.val() !== A && !j && s.val(" " + A), z && f.oneTime(10, function() {
                            try {
                                var ne = is_mobile ? S : S + 1;
                                s.$node.caret() !== ne && s.$node.caret(ne)
                            } catch {}
                        })
                    })
                }
                if (animation_supported && !is_android) fe = function(j) {
                    j ? te.addClass("cmd-blink") : te.removeClass("cmd-blink")
                }, ye = function() {
                    var j = te.clone();
                    j.insertBefore(te), te.remove(), te = j
                };
                else {
                    var Pt = !1;
                    fe = function(j) {
                        j && !Pt ? (Pt = !0, te.addClass("cmd-inverted cmd-blink"), f.everyTime(500, "blink", ot)) : Pt && !j && (Pt = !1, f.stopTime("blink", ot), te.removeClass("cmd-inverted cmd-blink"))
                    }, ye = function() {
                        fe(!1), fe(!0)
                    }
                }

                function ot() {
                    te.toggleClass("cmd-inverted")
                }

                function Tt() {
                    L = "(reverse-i-search)`" + i + "': ", Ut()
                }

                function Ar() {
                    L = b, o = !1, l = null, i = ""
                }

                function Fr(j) {
                    var ne = U.data(),
                        se, xe, Oe = ne.length;
                    if (j && l > 0 && (Oe -= l), i.length > 0)
                        for (var k = i.length; k > 0; k--) {
                            xe = $.terminal.escape_regex(i.slice(0, k)), t.caseSensitiveSearch ? se = new RegExp(xe) : se = new RegExp(xe, "i");
                            for (var P = Oe; P--;)
                                if (se.test(ne[P])) {
                                    l = ne.length - P, f.position(ne[P].indexOf(xe)), f.set(ne[P], !0), ft(), i.length !== k && (i = i.slice(0, k), Tt());
                                    return
                                }
                        }
                    i = ""
                }

                function wt() {
                    var j = f.find(".cmd-prompt"),
                        ne = j.html();
                    j.html("<span>&nbsp;</span>");
                    var se = j.find("span").get(0).getBoundingClientRect().width;
                    return j.html(ne), se
                }

                function It(j) {
                    var ne = f.width();
                    return Math.floor(ne / j)
                }

                function br(j) {
                    function ne(Se) {
                        return $.terminal.split_equal(Se, c)
                    }

                    function se(Se) {
                        var _e = [];
                        return Se.forEach(function(Ie, Re) {
                            $.terminal.strip(Ie).match(Z) ? (_e[Re] = !1, Re > 0 && (_e[Re - 1] += ge)) : _e[Re] = Se[Re]
                        }), _e.filter(function(Ie) {
                            return Ie !== !1
                        })
                    }
                    var xe = a.find(".cmd-line"),
                        Oe;
                    xe.length ? Oe = xe.nextUntil(".cmd-line").text() : Oe = a.text(), Oe = $.terminal.escape_brackets(Oe);
                    var k = kr(),
                        P = new RegExp("^" + k + $.terminal.escape_regex(Oe)),
                        H;
                    if (j.match(/\n/)) {
                        for (var V = j.split(`
`), X = c - d - 1, ce = 0; ce < V.length - 1; ++ce) V[ce] += ge;
                        for (strlen(V[0]) > X ? (H = ne(Oe + V[0]), H[0] = H[0].replace(P, ""), H = se(H)) : H = [V[0]], ce = 1; ce < V.length; ++ce)
                            if (strlen(V[ce]) > c) {
                                var ue = ne(V[ce]);
                                ce < V.length - 1 && (ue = se(ue)), H = H.concat(ue)
                            } else H.push(V[ce])
                    } else H = ne(k + Oe + j), H[0] = H[0].replace(P, "");
                    if (H.length > 1) {
                        var me = $.terminal.length(H[H.length - 1]);
                        me === c && H.push("")
                    }
                    return H
                }
                var Nr = new WorkerCache({
                    validation: function(j) {
                        var ne = !1;
                        return (!this._previous_value || this._previous_value === j) && (!this._cols || this._cols === c) && (ne = !0), this._previous_value = j, this._cols = c, ne
                    },
                    action: br
                });

                function Hr(j) {
                    return Nr.get(j)
                }

                function ir(j, ne) {
                    try {
                        j = $.terminal.escape_formatting(j);
                        var se = $.extend({}, t, {
                                unixFormattingEscapeBrackets: !0,
                                position: S,
                                command: !0
                            }),
                            xe = $.terminal.apply_formatters(j, se),
                            Oe = $.terminal.normalize(xe[0]),
                            k = $.terminal.length(Oe);
                        return ne || (G = xe[1], G > k && (G = k)), Oe
                    } catch (P) {
                        return alert_exception("[Formatting]", P.stack), j
                    }
                }

                function jt(j, ne) {
                    var se = $.terminal.encode(yr(j), {
                        tabs: t.tabs,
                        before: ne
                    });
                    return $.terminal.format(se, {
                        charWidth: t.charWidth,
                        allowedAttributes: t.allowedAttributes || []
                    })
                }

                function yr(j) {
                    return $.terminal.partition(j).join("")
                }

                function Ft(j, ne) {
                    return $.terminal.length(j, ne)
                }

                function Cr(j) {
                    return strlen(text(j)) > c - d - 1 || j.match(/\n/)
                }

                function ur(j, ne, se) {
                    return $.terminal.substring(j, ne, se)
                }

                function Dr(j) {
                    return $.terminal.is_formatting(j) ? j.replace(format_parts_re, "$4").match(/^emoji /) : !1
                }
                var ft = function() {
                        var j = te.prev(),
                            ne = te.next(),
                            se = te.parent();

                        function xe(V, X) {
                            var ce = V.match(O);
                            ce && (V = V.replace(O, " ")), se.toggleClass("cmd-end-line", !!ce);
                            var ue = !1,
                                me = $.extend({
                                    prompt: "",
                                    last: !1
                                }, X),
                                Se = me.position,
                                _e = Ft(V),
                                Ie = me.prompt,
                                Re;
                            if (Se === _e) j.html(jt(V)), Re = "&nbsp;", k(), ne.html("");
                            else if (Se === 0) j.html(""), Re = ur(V, 0, 1), te.html(jt(Re)), ne.html(jt(ur(V, 1), Ie + Re));
                            else {
                                var Ke = $.terminal.substring(V, 0, Se);
                                j.html(jt(Ke, Ie)), Re = ur(V, Se, Se + 1);
                                var Ye = (Ie + Ke).replace(/^.*\t/, "");
                                te.html(jt(Re, Ye)), Se === _e - 1 ? (ue = !0, ne.html("")) : (Re.match(/\t/) ? Ye = "" : Ye += Re, ne.html(jt(ur(V, Se + 1), Ye)))
                            }
                            if (ch_unit_bug)
                                if (typeof wcwidth < "u") {
                                    var be = strlen(text(Re));
                                    be === 1 && Dr(Re) && (be = 2), te.width(g * be)
                                } else te.width(g);
                            te.toggleClass("cmd-end-line", ue), Zt();
                            var Le = $.terminal.length(te.text());
                            if (Le > 1) {
                                var Be = te.find("[data-text]")[0];
                                Be.style.setProperty("--length", Le)
                            }
                            ye()
                        }

                        function Oe(V, X) {
                            var ce = V.match(O),
                                ue = '<div role="presentation" aria-hidden="true"';
                            return ce && (V = V.replace(O, " "), ue += ' class="cmd-end-line"'), ue += ">" + jt(V, X || "") + "</div>", ue
                        }

                        function k() {
                            te.html('<span data-text class="end"><span>&nbsp;<span></span>')
                        }

                        function P(V) {
                            var X = se;
                            $.each(V, function(ce, ue) {
                                X = $(Oe(ue)).insertAfter(X)
                            })
                        }

                        function H(V) {
                            $.each(V, function(X, ce) {
                                se.before(Oe(ce, X === 0 ? _ : ""))
                            })
                        }
                        return function() {
                            var V;
                            switch (typeof t.mask) {
                                case "boolean":
                                    V = t.mask ? A.replace(/./g, "*") : A;
                                    break;
                                case "string":
                                    V = A.replace(/./g, t.mask);
                                    break
                            }
                            var X = ir(V),
                                ce;
                            Ft(X) === text(V).length ? ce = S : ce = G;
                            var ue;
                            if (C.css({
                                    display: "none"
                                }), C.find("div:not(.cmd-cursor-line)").remove(), j.html(""), Cr(X)) {
                                var me = X.match(/\t/g),
                                    Se = X;
                                me && (X = X.replace(/\t/g, "\0\0\0\0"));
                                var _e = Hr(X);
                                me && (_e = $.map(_e, function(st) {
                                    return st.replace(/\x00\x00\x00\x00/g, "	")
                                }));
                                var Ie = Ft(_e[0]);
                                if (!(Ie === 0 && _e.length === 1))
                                    if (ce < Ie) xe(_e[0], {
                                        length: _e.length,
                                        position: ce,
                                        prompt: _
                                    }), P(_e.slice(1));
                                    else if (ce === Ie) se.before(Oe(_e[0], _)), xe(_e[1] || "", {
                                    length: _e.length,
                                    position: 0,
                                    last: _e.length <= 2
                                }), _e.length > 2 && P(_e.slice(2));
                                else {
                                    var Re = _e.slice(-1)[0],
                                        Ke = Ft(Se),
                                        Ye = Ke - ce,
                                        be = Ft(Re),
                                        Le = 0;
                                    if (Ye === -1 && (Ye = 0), Ye <= be) H(_e.slice(0, -1)), be === Ye ? Le = 0 : Le = be - Ye, xe(Re, {
                                        length: _e.length,
                                        position: Le,
                                        last: !0
                                    });
                                    else {
                                        var Be, Ge;
                                        for (Le = ce, ue = 0; ue < _e.length; ++ue) {
                                            var Ue = $.terminal.length(_e[ue]);
                                            if (Le > Ue) Le -= Ue;
                                            else break
                                        }
                                        if (Ge = _e[ue], Be = ue, Le === Ft(Ge) && (Le = 0, Ge = _e[++Be], Ge === undefined$1)) {
                                            var dt = $.terminal.defaults.strings.redrawError;
                                            throw new Error(dt)
                                        }
                                        xe(Ge, {
                                            length: _e.length,
                                            position: Le
                                        }), H(_e.slice(0, Be)), P(_e.slice(Be + 1))
                                    }
                                }
                                f.find(".cmd-cursor-line ~ div:last-of-type").append("<span></span>")
                            } else X === "" ? (j.html(""), k(), ne.html("")) : xe(X, {
                                length: 1,
                                position: ce
                            });
                            var gt = se.prevUntil(".cmd-prompt").length;
                            is_css_variables_supported ? f[0].style.setProperty("--cursor-line", gt) : s.$node.css("top", gt * 14 + "px"), C.css({
                                display: ""
                            })
                        }
                    }(),
                    $r = function() {
                        function j(se, xe) {
                            var Oe = $.extend({}, t, {
                                position: xe,
                                command: !0
                            });
                            return $.terminal.apply_formatters(se, Oe)[1]
                        }

                        function ne(se, xe, Oe) {
                            var k = j(Oe, xe);
                            if (k === se) {
                                var P = j(Oe, xe + 1);
                                return P > se ? 0 : 1
                            } else return k < se ? 1 : -1
                        }
                        return function(se, xe) {
                            if (xe === 0) return 0;
                            se = bare_text(se);
                            var Oe = se.length,
                                k = $.terminal.escape_brackets(A),
                                P = binary_search(0, Oe, xe, ne, [k]),
                                H = $.terminal.split_characters(se);
                            if (Oe > H.length) {
                                for (var V = 0, X = 0; X < H.length; ++X)
                                    if (V += H[X].length, V >= P) return V
                            }
                            return P
                        }
                    }();

                function kr() {
                    return D ? new Array(D + 1).join("￿") : ""
                }
                var hr, Ut = function() {
                    function j(se) {
                        if (!se) return v = 0, d = v + D, se;
                        var xe = kr(),
                            Oe = xe + se,
                            k = $.terminal.split_equal(Oe, c);
                        k = k.map(function(X) {
                            return X.replace(/^\uFFFF+/, "")
                        }).filter(Boolean), k = k.map(function(X) {
                            return $.terminal.have_formatting(X) ? $.terminal.format_split(X).map(function(ce) {
                                return $.terminal.is_formatting(ce) ? ce : "[[;;]" + $.terminal.escape_brackets(ce) + "]"
                            }).join("") : "[[;;]" + $.terminal.escape_brackets(X) + "]"
                        });
                        var P = {
                            charWidth: t.charWidth
                        };
                        _ = k[k.length - 1];
                        var H = $.terminal.encode(k[k.length - 1], {
                                tabs: t.tabs
                            }),
                            V = $.terminal.format(H, P);
                        return v = strlen(text(H)), d = v + D, k.slice(0, -1).map(function(X) {
                            return X = $.terminal.encode(X, {
                                tabs: t.tabs
                            }), '<span class="cmd-line">' + $.terminal.format(X, P) + "</span>"
                        }).concat([V]).join(`
`)
                    }

                    function ne(se) {
                        se && (se = $.terminal.apply_formatters(se, {
                            prompt: !0
                        }), se = $.terminal.normalize(se), se = crlf(se));
                        var xe = j(se);
                        if (u = se, xe = xe || $.terminal.format("[[;;]​]"), a.html() !== xe) {
                            a.html(xe);
                            var Oe = a.find("> span span");
                            s.$node.attr("data-cmd-prompt", a.text()), is_ch_unit_supported && (a.hide(), Oe.each(function() {
                                var k = $(this),
                                    P = strlen(k.text());
                                P === 0 ? k.css("width", 1) : k.css("width", P + "ch")
                            }), a.show())
                        }
                    }
                    return function() {
                        hr && hr.set && (hr.set = $.noop, hr = null);
                        var se = hr = {
                            set: ne
                        };
                        with_prompt(L, function(xe) {
                            se.set(xe)
                        }, f)
                    }
                }();

                function ee() {
                    is_function(t.onCommandChange) && t.onCommandChange.call(f, A)
                }
                $.extend(f, {
                    option: function(j, ne) {
                        return typeof ne > "u" ? t[j] : (t[j] = ne, f)
                    },
                    name: function(j) {
                        if (j !== undefined$1) {
                            K = j;
                            var ne = U && U.enabled() || !U;
                            return U = new History(K, t.historySize, t.history === "memory"), ne || U.disable(), f
                        } else return K
                    },
                    purge: function() {
                        return U.clear(), f
                    },
                    history: function() {
                        return U
                    },
                    delete: function(j, ne) {
                        var se, xe;
                        return j === 0 ? "" : (j < 0 ? S > 0 && (se = A.slice(0, S).slice(j), xe = bare_text(A), xe = xe.slice(0, S + j) + xe.slice(S, xe.length), ne || f.position(S + j)) : A !== "" && (xe = text(A), S < xe.length && (se = xe.slice(S).slice(0, j), xe = xe.slice(0, S) + xe.slice(S + j, xe.length))), se && (A = xe), ft(), Dt(), ee(), se)
                    },
                    set: function(j, ne, se) {
                        return j !== undefined$1 && (A = j, ne || f.position(bare_text(A).length), ft(), Dt(), se || ee()), f
                    },
                    keymap: function(j, ne) {
                        function se(xe, Oe) {
                            var k = pe[xe];
                            return is_function(k) && (k = k.bind(f)),
                                function(P) {
                                    return Oe.call(f, P, k)
                                }
                        }
                        if (j === null) return Ce = pe, f;
                        if (typeof j > "u") return Ce;
                        if (typeof j == "string")
                            if (typeof ne > "u") {
                                if (Ce[j]) return Ce[j];
                                if (pe[j]) return pe[j]
                            } else Ce[j] = se(j, ne);
                        else return Ce = $.extend({}, Ce || pe, $.omap(j || {}, se)), f
                    },
                    insert: function(j, ne) {
                        var se = bare_text(A),
                            xe = bare_text(j).length;
                        return S === se.length ? j = se + j : S === 0 ? j = j + se : j = se.slice(0, S) + j + se.slice(S), A = j, ne || f.position(xe, !0, !0), Dt(), ft(), ee(), f
                    },
                    get: function() {
                        return A
                    },
                    commands: function(j) {
                        return j && (t.commands = j, f)
                    },
                    destroy: function() {
                        return zt.unbind("keypress.cmd", Gt), zt.unbind("keydown.cmd", Mt), zt.unbind("input.cmd", Sr), f.stopTime("blink", ot), f.find(".cmd-wrapper").remove(), f.find(".cmd-prompt, .cmd-clipboard, .cmd-editable").remove(), f.removeClass("cmd").removeData("cmd").off(".cmd"), f
                    },
                    column: function(j) {
                        var ne = A.substring(0, S);
                        if (S === 0 || !A.length) return 0;
                        var se = /\n?([^\n]*)$/,
                            xe = ne.match(se),
                            Oe = xe[1].length;
                        return !rr(ne) && (j || gr(ne, d)) && (Oe += d), Oe === 0 ? Oe : (Oe %= c, Oe === 0 ? c : Oe)
                    },
                    line: function() {
                        var j = A.substring(0, S);
                        return S === 0 || !A.length ? 0 : j.split(/\n/).length - 1
                    },
                    __set_prompt_margin: function(j) {
                        D = j, d = v + D
                    },
                    prompt: function(j) {
                        if (j === !0) return u;
                        if (j === undefined$1) return L;
                        var ne = j !== L;
                        if (typeof j == "string" || typeof j == "function") L = j;
                        else throw new Error("prompt must be a function or string");
                        return ne && (Ut(), ft()), f
                    },
                    kill_text: function() {
                        return T
                    },
                    position: function(j, ne, se) {
                        if (typeof j == "number") {
                            var xe = S,
                                Oe = bare_text(A).length;
                            return ne ? S += j : j < 0 ? S = 0 : j > Oe ? S = Oe : S = j, xe !== S && (ft(), !se && is_function(t.onPositionChange) && t.onPositionChange(S, G), Dt(!0)), f
                        } else return S
                    },
                    refresh: function() {
                        return Ut(), ft(), Dt(!0), f
                    },
                    display_position: function(j, ne) {
                        if (j === undefined$1) return G;
                        var se = ir($.terminal.escape_formatting(A), !0),
                            xe = Ft(se),
                            Oe = bare_text(A).length,
                            k;
                        if (ne ? k = G + j : j > xe ? k = xe : k = j, xe === Oe) return G = k, f.position(k);
                        if (xe === k) return G = k, f.position(Oe);
                        var P = $r(A, k);
                        return P !== -1 && (G = k, f.position(P)), f
                    },
                    visible: function() {
                        var j = f.visible;
                        return function() {
                            return j.apply(f, []), ft(), Ut(), f
                        }
                    }(),
                    show: function() {
                        var j = f.show;
                        return function() {
                            return j.apply(f, []), ft(), Ut(), f
                        }
                    }(),
                    resize: function(j) {
                        g = wt();
                        var ne;
                        return typeof j == "number" ? ne = j : ne = It(g), (c !== ne || arguments[0] === !0) && (c = ne, ft(), Ut()), f
                    },
                    clear_cache: "Map" in root ? function() {
                        Nr.clear()
                    } : function() {
                        return f
                    },
                    invoke_key: function(j) {
                        z || warn('invoke_key("' + j + '") called on disabled terminal');
                        var ne = j.toUpperCase().split("+"),
                            se = ne.pop(),
                            xe = ne.indexOf("CTRL") !== -1,
                            Oe = ne.indexOf("SHIFT") !== -1,
                            k = ne.indexOf("ALT") !== -1,
                            P = ne.indexOf("META") !== -1,
                            H = $.Event("keydown", {
                                ctrlKey: xe,
                                shiftKey: Oe,
                                altKey: k,
                                metaKey: P,
                                which: W[se],
                                key: se
                            }),
                            V = $(document.documentElement || window);
                        return V.trigger(H), H = $.Event("keypress"), H.key = se, H.which = H.keyCode = 0, V.trigger(H), f
                    },
                    clip: function() {
                        return s
                    },
                    enable: function(j) {
                        if (!z) {
                            z = !0, f.addClass("enabled");
                            try {
                                s.$node.is(":focus") || s.$node.focus(), s.$node.caret(S)
                            } catch {}
                            fe(!0), !j && is_function(L) && Ut(), Zt(), Dt()
                        }
                        return Lt(), f
                    },
                    isenabled: function() {
                        return z
                    },
                    disable: function(j) {
                        return z = !1, f.removeClass("enabled"), fe(!1), j || Lt(), f
                    },
                    mask: function(j) {
                        return typeof j > "u" ? t.mask : (t.mask = j, ft(), f)
                    }
                }), f.name(t.name || t.prompt || ""), t.prompt !== !1 && (L = t.prompt, Ut()), t.enabled === !0 && f.enable(), g = wt(), c = It(g), t.history || U.disable();
                var Rr = !0,
                    Vt = !1,
                    _t = !1,
                    Ot = !1,
                    xt = !1,
                    Jt = !1,
                    bt = !0,
                    qt = !1,
                    at = !1,
                    We = !1,
                    Tr = !1,
                    At, nr = "",
                    pt;

                function fr(j) {
                    return j.key.toUpperCase() === "BACKSPACE" || j.which === 8
                }

                function Wr(j) {
                    return j.key && j.key.length === 1 && !j.ctrlKey
                }

                function jr(j) {
                    var ne = ["HOLD+SHIFT+BACKSPACE", "HOLD+BACKSPACE"];
                    return ne.indexOf(j) !== -1 && t.mobileDelete || t.repeatTimeoutKeys.indexOf(j) !== -1
                }

                function dr(j) {
                    return j.which === 35 || j.which === 36 || j.which === 37 || j.which === 38 || j.which === 39 || j.which === 40 || j.which === 13 || j.which === 27
                }
                var Xt = !1;

                function Mt(j) {
                    "" + j.key + j.fake + j.which;
                    var ne;
                    at = (j.key || "").toLowerCase() === "process" || j.which === 0, _t = xt && Ot && !fr(j);
                    try {
                        j.fake || (Ot = Wr(j), Jt = String(j.key).toLowerCase() === "unidentified", qt = fr(j))
                    } catch {}
                    if (j.key === "Unidentified") {
                        bt = !0;
                        return
                    }!j.fake && ["meta", "os"].indexOf(j.key.toLowerCase()) === -1 && (bt = !1), xt = !0, s.$node.off("input", ct);
                    var se = Ee(j);
                    if (is_function(t.keydown) && (j.key = we(j), ne = t.keydown.call(f, j), ne !== undefined$1)) return ne || (At = !0), ne;
                    if (se !== pt && wr(), z || se === "CTRL+C" && is_terminal_selected(f)) {
                        if (We) {
                            if (pt = se, se = "HOLD+" + se, Tr) return;
                            t.holdRepeatTimeout > 0 && jr(se) && (Tr = !0, f.oneTime(t.holdRepeatTimeout, "delay", function() {
                                Tr = !1
                            }))
                        } else f.oneTime(t.holdTimeout, "hold", function() {
                            We = !0
                        }), pt = se;
                        if (!j.fake && is_android) {
                            if (Xt) return wr(), Xt = !1, !1;
                            p(se) ? Xt = !0 : p(pt) && (Xt = !1)
                        }
                        if (ye(), At = ["CTRL+V", "META+V"].indexOf(se) !== -1, se.toLowerCase() === "enter" && (Rr = !0), o && dr(j)) Ar(), Ut(), j.which === 27 && f.set(""), ft(), j.which === 13 && Mt.call(this, j);
                        else if (is_function(Ce[se])) {
                            if (ne = Ce[se](j), ne === !0) return;
                            if (ne !== undefined$1) return ne
                        } else {
                            if (j.altKey) return;
                            Vt = !1;
                            return
                        }
                    }
                }

                function wr() {
                    f.stopTime("hold"), f.stopTime("delay"), Tr = We = !1
                }
                var zt = $(document.documentElement || window);
                f.keymap(t.keymap || {});

                function Gt(j) {
                    "" + j.key + j.fake, wr();
                    var ne;
                    if (j.fake || (xt = !1), !((j.ctrlKey || j.metaKey) && !j.altKey) && !Vt) {
                        if (is_function(t.keypress) && (ne = t.keypress.call(f, j), ne !== undefined$1)) return ne || (At = !0), ne;
                        if (z) {
                            if (j.fake) return;
                            var se;
                            if (is_key_native) {
                                se = j.key;
                                var xe = se.toUpperCase();
                                re[xe] && (se = re[xe])
                            }
                            if ((!se || Jt) && (se = String.fromCharCode(j.which)), $.inArray(j.which, [13, 0, 8]) > -1) return j.keyCode === 123 ? void 0 : !1;
                            se && (!j.ctrlKey || j.ctrlKey && j.ctrlKey) && (!(j.altKey && j.which === 100) || j.altKey) && !_t && (o ? (i += se, Fr(), Tt()) : se.length === 1 && f.insert(se))
                        }
                    }
                }

                function Lr(j, ne, se) {
                    var xe = $.Event(j);
                    xe.which = se, xe.key = ne, xe.fake = !0, zt.trigger(xe)
                }
                var St = !1;

                function _r() {
                    nr = A, At = !1, bt = !0
                }

                function Sr() {
                    var j = s.val();
                    if (is_mobile || (j = j.replace(/^ /, "")), bt || at || (xt || _t) && !At && (Ot || Jt) && !qt) {
                        if (j && j === A) {
                            is_android && bt && Lr("keydown", "Enter", 13), _r();
                            return
                        }
                        var ne = S;
                        if (bt) {
                            var se = nr;
                            qt = se.slice(0, se.length - 1).length === j.length
                        }
                        if (St) {
                            St = !1, s.val(A);
                            return
                        }
                        if (o) i = j, Fr(), Tt();
                        else {
                            var xe = j.slice(S);
                            if (xe.length === 1 || qt) {
                                var Oe = get_next_character(xe);
                                if (p(Oe) && (St = !0), bt) {
                                    var k;
                                    qt ? k = 8 : k = xe.toUpperCase().charCodeAt(0), Lr("keydown", qt ? "Backspace" : xe, k)
                                }
                                xt && !qt && Lr("keypress", Oe, xe.charCodeAt(0))
                            }
                            if (qt) {
                                nr = A;
                                return
                            }
                            if (At) {
                                At = !1;
                                return
                            }
                            f.set(j)
                        }
                        qt ? f.position(ne - 1) : f.position(ne + Math.abs(j.length - nr.length))
                    }
                    _r()
                }
                return zt.bind("keypress.cmd", Gt), zt.bind("keydown.cmd", Mt), zt.bind("keyup.cmd", wr), zt.bind("input.cmd", Sr),
                    function() {
                        if (is_mobile) {
                            $(f[0]).add(s.$node).on("touchstart.cmd", function() {
                                f.isenabled() ? s.blur() : s.focus()
                            }), f.disable();
                            return
                        }
                        var j = !1,
                            ne = 0;
                        f.on("mousedown.cmd", function() {
                            j = !0
                        }).on("mouseup.cmd", function(se) {
                            function xe() {
                                var H = $(se.target),
                                    V = H.is(".cmd-prompt");
                                !V && P && get_selected_html() === "" && z && (H.is(".cmd") ? f.position(text(A).length) : f.display_position(q(se))), ne = 0
                            }
                            var Oe;
                            if (se.originalEvent === undefined$1 ? Oe = se.button : Oe = se.originalEvent.button, Oe === 0 && get_selected_html() === "") {
                                var k = "click_" + E;
                                if (++ne === 1) {
                                    var P = j;
                                    z ? t.clickTimeout === 0 ? xe() : f.oneTime(t.clickTimeout, k, xe) : ne = 0
                                } else f.stopTime(k), ne = 0
                            }
                            j = !1
                        })
                    }(), f.data("cmd", f), "KeyboardEvent" in window && "key" in window.KeyboardEvent.prototype || setTimeout(function() {
                        throw new Error("key event property not supported try https://github.com/inexorabletash/polyfill/blob/master/keyboard.js")
                    }, 0), f
            };
            var strlen = function() {
                return typeof wcwidth > "u" ? function(w) {
                    return w = w.replace(/\u200B/g, ""), $.terminal.length(w)
                } : wcwidth
            }();

            function count_selfclosing_formatting(w) {
                var t = 0;
                if ($.terminal.have_formatting(w)) {
                    var p = new RegExp(format_parts_re.source, "i");
                    $.terminal.format_split(w).forEach(function(f) {
                        if ($.terminal.is_formatting(f)) {
                            var R = f.match(p);
                            R && R[1].match(/@/) && R[6] === "" && t++
                        }
                    })
                }
                return t
            }
            var entities = {
                "&amp;": "&",
                "&lt;": "<",
                "&gt;": ">",
                "&Agrave;": "À",
                "&Aacute;": "Á",
                "&Acirc;": "Â",
                "&Atilde;": "Ã",
                "&Auml;": "Ä",
                "&Aring;": "Å",
                "&AElig;": "Æ",
                "&Ccedil;": "Ç",
                "&Egrave;": "È",
                "&Eacute;": "É",
                "&Ecirc;": "Ê",
                "&Euml;": "Ë",
                "&Igrave;": "Ì",
                "&Iacute;": "Í",
                "&Icirc;": "Î",
                "&Iuml;": "Ï",
                "&ETH;": "Ð",
                "&Ntilde;": "Ñ",
                "&Ograve;": "Ò",
                "&Oacute;": "Ó",
                "&Ocirc;": "Ô",
                "&Otilde;": "Õ",
                "&Ouml;": "Ö",
                "&Oslash;": "Ø",
                "&Ugrave;": "Ù",
                "&Uacute;": "Ú",
                "&Ucirc;": "Û",
                "&Uuml;": "Ü",
                "&Yacute;": "Ý",
                "&THORN;": "Þ",
                "&szlig;": "ß",
                "&agrave;": "à",
                "&aacute;": "á",
                "&acirc;": "â",
                "&atilde;": "ã",
                "&auml;": "ä",
                "&aring;": "å",
                "&aelig;": "æ",
                "&ccedil;": "ç",
                "&egrave;": "è",
                "&eacute;": "é",
                "&ecirc;": "ê",
                "&euml;": "ë",
                "&igrave;": "ì",
                "&iacute;": "í",
                "&icirc;": "î",
                "&iuml;": "ï",
                "&eth;": "ð",
                "&ntilde;": "ñ",
                "&ograve;": "ò",
                "&oacute;": "ó",
                "&ocirc;": "ô",
                "&otilde;": "õ",
                "&ouml;": "ö",
                "&oslash;": "ø",
                "&ugrave;": "ù",
                "&uacute;": "ú",
                "&ucirc;": "û",
                "&uuml;": "ü",
                "&yacute;": "ý",
                "&thorn;": "þ",
                "&yuml;": "ÿ",
                "&nbsp;": " ",
                "&iexcl;": "¡",
                "&cent;": "¢",
                "&pound;": "£",
                "&curren;": "¤",
                "&yen;": "¥",
                "&brvbar;": "¦",
                "&sect;": "§",
                "&uml;": "¨",
                "&copy;": "©",
                "&ordf;": "ª",
                "&laquo;": "«",
                "&not;": "¬",
                "&shy;": "­",
                "&reg;": "®",
                "&macr;": "¯",
                "&deg;": "°",
                "&plusmn;": "±",
                "&sup2;": "²",
                "&sup3;": "³",
                "&acute;": "´",
                "&micro;": "µ",
                "&para;": "¶",
                "&cedil;": "¸",
                "&sup1;": "¹",
                "&ordm;": "º",
                "&raquo;": "»",
                "&frac14;": "¼",
                "&frac12;": "½",
                "&frac34;": "¾",
                "&iquest;": "¿",
                "&times;": "×",
                "&divide;": "÷",
                "&forall;": "∀",
                "&part;": "∂",
                "&exist;": "∃",
                "&empty;": "∅",
                "&nabla;": "∇",
                "&isin;": "∈",
                "&notin;": "∉",
                "&ni;": "∋",
                "&prod;": "∏",
                "&sum;": "∑",
                "&minus;": "−",
                "&lowast;": "∗",
                "&radic;": "√",
                "&prop;": "∝",
                "&infin;": "∞",
                "&ang;": "∠",
                "&and;": "∧",
                "&or;": "∨",
                "&cap;": "∩",
                "&cup;": "∪",
                "&int;": "∫",
                "&there4;": "∴",
                "&sim;": "∼",
                "&cong;": "≅",
                "&asymp;": "≈",
                "&ne;": "≠",
                "&equiv;": "≡",
                "&le;": "≤",
                "&ge;": "≥",
                "&sub;": "⊂",
                "&sup;": "⊃",
                "&nsub;": "⊄",
                "&sube;": "⊆",
                "&supe;": "⊇",
                "&oplus;": "⊕",
                "&otimes;": "⊗",
                "&perp;": "⊥",
                "&sdot;": "⋅",
                "&Alpha;": "Α",
                "&Beta;": "Β",
                "&Gamma;": "Γ",
                "&Delta;": "Δ",
                "&Epsilon;": "Ε",
                "&Zeta;": "Ζ",
                "&Eta;": "Η",
                "&Theta;": "Θ",
                "&Iota;": "Ι",
                "&Kappa;": "Κ",
                "&Lambda;": "Λ",
                "&Mu;": "Μ",
                "&Nu;": "Ν",
                "&Xi;": "Ξ",
                "&Omicron;": "Ο",
                "&Pi;": "Π",
                "&Rho;": "Ρ",
                "&Sigma;": "Σ",
                "&Tau;": "Τ",
                "&Upsilon;": "Υ",
                "&Phi;": "Φ",
                "&Chi;": "Χ",
                "&Psi;": "Ψ",
                "&Omega;": "Ω",
                "&alpha;": "α",
                "&beta;": "β",
                "&gamma;": "γ",
                "&delta;": "δ",
                "&epsilon;": "ε",
                "&zeta;": "ζ",
                "&eta;": "η",
                "&theta;": "θ",
                "&iota;": "ι",
                "&kappa;": "κ",
                "&lambda;": "λ",
                "&mu;": "μ",
                "&nu;": "ν",
                "&xi;": "ξ",
                "&omicron;": "ο",
                "&pi;": "π",
                "&rho;": "ρ",
                "&sigmaf;": "ς",
                "&sigma;": "σ",
                "&tau;": "τ",
                "&upsilon;": "υ",
                "&phi;": "φ",
                "&chi;": "χ",
                "&psi;": "ψ",
                "&omega;": "ω",
                "&thetasym;": "ϑ",
                "&upsih;": "ϒ",
                "&piv;": "ϖ",
                "&OElig;": "Œ",
                "&oelig;": "œ",
                "&Scaron;": "Š",
                "&scaron;": "š",
                "&Yuml;": "Ÿ",
                "&fnof;": "ƒ",
                "&circ;": "ˆ",
                "&tilde;": "˜",
                "&ensp;": " ",
                "&emsp;": " ",
                "&thinsp;": " ",
                "&zwnj;": "‌",
                "&zwj;": "‍",
                "&lrm;": "‎",
                "&rlm;": "‏",
                "&ndash;": "–",
                "&mdash;": "—",
                "&lsquo;": "‘",
                "&rsquo;": "’",
                "&sbquo;": "‚",
                "&ldquo;": "“",
                "&rdquo;": "”",
                "&bdquo;": "„",
                "&dagger;": "†",
                "&Dagger;": "‡",
                "&bull;": "•",
                "&hellip;": "…",
                "&permil;": "‰",
                "&prime;": "′",
                "&Prime;": "″",
                "&lsaquo;": "‹",
                "&rsaquo;": "›",
                "&oline;": "‾",
                "&euro;": "€",
                "&trade;": "™",
                "&larr;": "←",
                "&uarr;": "↑",
                "&rarr;": "→",
                "&darr;": "↓",
                "&harr;": "↔",
                "&crarr;": "↵",
                "&lceil;": "⌈",
                "&rceil;": "⌉",
                "&lfloor;": "⌊",
                "&rfloor;": "⌋",
                "&loz;": "◊",
                "&spades;": "♠",
                "&clubs;": "♣",
                "&hearts;": "♥",
                "&diams;": "♦"
            };

            function render_entities(w) {
                return w.replace(/&#(x?)([0-9]+);/g, function(t, p, f) {
                    return f = parseInt(f, p ? 16 : 10), String.fromCharCode(f)
                }).replace(/(&[^;]+;)/g, function(t, p) {
                    return entities[p] || p
                })
            }

            function bare_text(w) {
                return w.match(/&/) ? render_entities(safe(w)) : w
            }

            function text(w) {
                return bare_text($.terminal.strip(w))
            }

            function safe(w) {
                return w.match(/[<>&]/) ? w.replace(/&(?![^;]+;)/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;") : w
            }

            function crlf(w) {
                return w.replace(/\r/g, "")
            }

            function char_len(w) {
                return entity_re.test(w) ? 1 : w.length
            }

            function make_re_fn(w) {
                return function(t) {
                    var p = t.match(w);
                    if (starts_with(p)) return p[1]
                }
            }

            function starts_with(w) {
                return w && w.index === 0
            }

            function make_next_char_fun(w) {
                var t = [];
                return [entity_re, emoji_re, combine_chr_re].forEach(function(p) {
                        w.match(p) && t.push(make_re_fn(p))
                    }), w.match(astral_symbols_re) && t.push(function(p) {
                        var f = p.match(astral_symbols_re);
                        if (starts_with(f)) {
                            var R = p.match(combine_chr_re);
                            return R && R.index === 1 ? p.slice(0, 3) : f[1]
                        }
                    }),
                    function(p) {
                        for (var f = 0; f < t.length; ++f) {
                            var R = t[f],
                                E = R(p);
                            if (E) return E
                        }
                        return p[0]
                    }
            }

            function get_next_character(w) {
                var t = w.match(entity_re);
                if (starts_with(t)) return t[1];
                var p = w.match(combine_chr_re);
                if (starts_with(p)) return p[1];
                var f = w.match(emoji_re);
                if (starts_with(f)) return f[1];
                if (w.charCodeAt(0) < 255) return w[0];
                var R = w.match(astral_symbols_re);
                return starts_with(R) ? (p = w.match(combine_chr_re), p && p.index === 1 ? w.slice(0, 3) : w.slice(0, 2)) : w[0]
            }

            function normalize_position(w, t) {
                if (t === 0) return t;
                w = $.terminal.strip(w);
                var p = $.terminal.split_characters(w).reduce(function(f, R) {
                    if (typeof f == "number") return f;
                    var E = f.length + char_len(R);
                    return E >= t ? f.position + 1 : {
                        position: f.position + 1,
                        length: E
                    }
                }, {
                    position: 0,
                    length: 0
                });
                return typeof p == "number" ? p : p.position
            }

            function style_to_string(w) {
                return Object.keys(w).map(function(t) {
                    return t + ":" + w[t]
                }).join(";")
            }

            function escape_html_attr(w) {
                return w.replace(/"/g, "&quot;")
            }

            function char_width_object(w, t) {
                var p = {};
                return w === 0 ? p.width = "1px" : is_ch_unit_supported ? p.width = w + "ch" : is_css_variables_supported ? p["--length"] = w : t.charWidth && (p.width = t.charWidth * w + "px"), p
            }

            function char_width_prop(w, t) {
                return style_to_string(char_width_object(w, t))
            }

            function extra_css(w, t) {
                if (typeof wcwidth < "u") {
                    var p = bare_text(w),
                        f = strlen(p);
                    if (f > 1 && f !== $.terminal.length(p)) return char_width_object(f, t)
                }
            }

            function wide_characters(w, t) {
                if (typeof wcwidth < "u") {
                    var p = bare_text(w),
                        f = $.terminal.split_characters(p);
                    if (f.length === 1) return w;
                    var R = f.map(function(r) {
                        return {
                            len: strlen(r),
                            chr: r
                        }
                    }).reduce(function(r, s) {
                        var c = r[r.length - 1];
                        return c ? c.len !== s.len ? r.concat([{
                            sum: s.len,
                            len: s.len,
                            specs: [s]
                        }]) : (r.pop(), r.concat([{
                            sum: c.sum + s.len,
                            len: c.len,
                            specs: c.specs.concat(s)
                        }])) : [{
                            sum: s.len,
                            specs: [s],
                            len: s.len
                        }]
                    }, []);
                    return R.map(function(r) {
                        if (r.len === 1) return E(r);
                        var s = char_width_prop(r.sum, t);
                        return r.sum === f.length || !s.length ? "<span>" + E(r) + "</span>" : r.specs.length > 1 ? C(s, r.specs.map(function(c) {
                            return C(char_width_prop(c.len), c.chr)
                        }).join("")) : C(s, E(r))
                    }).join("")
                }

                function E(r) {
                    return r.specs.map(function(s) {
                        return s.chr
                    }).join("")
                }

                function C(r, s) {
                    return '<span style="' + r + '">' + s + "</span>"
                }
                return w
            }

            function binary_search(w, t, p, f, R) {
                var E = t - w,
                    C = w + Math.floor(E / 2),
                    r = [p, C].concat(R),
                    s = f.apply(null, r);
                return s === 0 ? C : s > 0 && E > 1 ? binary_search(C, t, p, f, R) : s < 0 && E > 1 ? binary_search(w, C, p, f, R) : -1
            }

            function is_terminal_selected(w) {
                if (is_function(window.getSelection)) {
                    var t = window.getSelection();
                    if (t.toString()) {
                        var p = t.getRangeAt(0).startContainer.parentNode,
                            f = $(p).closest(".terminal");
                        return f.length && (w && f.find(".cmd").is(w) || !w)
                    }
                }
            }

            function get_selected_html() {
                var w = "";
                if (is_function(window.getSelection)) {
                    var t = window.getSelection();
                    if (t.rangeCount) {
                        for (var p = document.createElement("div"), f = 0, R = t.rangeCount; f < R; ++f) p.appendChild(t.getRangeAt(f).cloneContents());
                        w = p.innerHTML
                    }
                }
                return w
            }

            function with_selection(w) {
                var t = "",
                    p = [];
                if (is_function(window.getSelection)) {
                    var f = window.getSelection();
                    if (f.rangeCount) {
                        for (var R = document.createElement("div"), E = 0, C = f.rangeCount; E < C; ++E) {
                            var r = f.getRangeAt(E).cloneRange();
                            p.push(r), R.appendChild(r.cloneContents())
                        }
                        t = R.innerHTML
                    }
                }
                return w(t), p.length && (f.removeAllRanges(), p.forEach(function(s) {
                    f.addRange(s)
                })), t !== ""
            }

            function process_selected_line() {
                var w = $(this),
                    t = w.text();
                return w.hasClass("cmd-end-line") && (t += `
`), t
            }

            function process_div(w) {
                return $(w).find("> div, > span").map(process_selected_line).get().join(`
`).replace(/\n$/, "")
            }

            function process_selected_html(w) {
                var t, p = "",
                    f = $("<div>" + w + "</div>");
                w.match(/<\/div>/) && (t = f.find("div[data-index]").map(function() {
                    return process_div(this)
                }).get().join(`
`), !t && w.match(/style="width: 100%;?"/) && (t = process_div(f)), p = t);
                var R = f.find(".cmd-prompt");
                R.length && (p.length && (p += `
`), p += R.text());
                var E = f.find('[role="presentation"]');
                return E.length && (p += E.map(process_selected_line).get().join("")), !p.length && w && (p = f.text()), p.replace(/\xA0/g, " ")
            }
            var support_copy = function() {
                    return typeof document > "u" || !is_function(document.queryCommandSupported) ? !1 : document.queryCommandSupported("copy")
                }(),
                text_to_clipboard;
            support_copy ? text_to_clipboard = function(t, p) {
                var f = t.val(),
                    R = t.is(":focus"),
                    E = t.caret();
                if (window.navigator && window.navigator.clipboard) navigator.clipboard.writeText(p);
                else if (R) t.val(p).focus(), t[0].select(), document.execCommand("copy"), t.val(f), t.caret(E);
                else {
                    var C = $("<textarea/>").css({
                        position: "fixed",
                        top: 0,
                        left: 0
                    }).appendTo("body");
                    C.val(p).focus(), C[0].select(), document.execCommand("copy"), C.blur(), C.remove()
                }
                return !0
            } : text_to_clipboard = $.noop;
            var get_textarea_selection = function() {
                function w() {
                    return ""
                }
                if (typeof document > "u") return w;
                var t = document.createElement("textarea"),
                    p = "selectionStart" in t;
                return t = null, p ? function(f) {
                    var R = f.selectionEnd - f.selectionStart;
                    return f.value.substr(f.selectionStart, R)
                } : document.selection ? function() {
                    var f = document.selection.createRange();
                    return f.text()
                } : w
            }();

            function clear_textarea_selection(w) {
                w.selectionStart = w.selectionEnd = 0
            }

            function common_string(w, t, p) {
                if (!t.length) return "";
                for (var f = string_case(w), R = [], E = w.length; E < t[0].length; ++E) {
                    for (var C = !1, r = t[0].charAt(E), s = r.toLowerCase(), c = 1; c < t.length; ++c) {
                        C = !0;
                        var g = t[c].charAt(E),
                            u = g.toLowerCase();
                        if (r !== g)
                            if (p || f === "mixed") {
                                C = !1;
                                break
                            } else if (s === u)
                            if (f === "lower") r = r.toLowerCase();
                            else if (f === "upper") r = r.toUpperCase();
                        else {
                            C = !1;
                            break
                        } else {
                            C = !1;
                            break
                        }
                    }
                    if (C) R.push(r);
                    else break
                }
                return w + R.join("")
            }

            function trigger_terminal_change(w) {
                terminals.forEach(function(t) {
                    t.settings().onTerminalChange.call(t, w)
                })
            }
            var select = function() {
                if (root.getSelection) {
                    var w = root.getSelection();
                    return w.setBaseAndExtent ? function(t, p) {
                        var f = root.getSelection();
                        f.setBaseAndExtent(t, 0, p, 1)
                    } : function(t, p) {
                        var f = root.getSelection(),
                            R = document.createRange();
                        R.setStart(t, 0), R.setEnd(p, p.childNodes.length), f.removeAllRanges(), f.addRange(R)
                    }
                } else return $.noop
            }();

            function process_command(w, t) {
                var p = w.trim(),
                    f = p.match(command_re) || [];
                if (f.length) {
                    var R = f.shift(),
                        E = $.map(f, function(s) {
                            return s.match(/^["']/) ? (s = s.replace(/\n/g, "\\u0000\\u0000\\u0000\\u0000"), s = t(s), s.replace(/\x00\x00\x00\x00/g, `
`)) : t(s)
                        }),
                        C = $.map(f, function(s) {
                            var c = s.match(/^(['"`]).*\1$/);
                            return c && c[1] || ""
                        }),
                        r = p.slice(R.length).trim();
                    return {
                        command: w,
                        name: R,
                        args: E,
                        args_quotes: C,
                        rest: r
                    }
                } else return {
                    command: w,
                    name: "",
                    args: [],
                    args_quotes: [],
                    rest: ""
                }
            }
            $.terminal = {
                version: "2.34.0",
                date: "Sun, 10 Jul 2022 21:53:25 +0000",
                color_names: ["transparent", "currentcolor", "black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkgrey", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "green", "greenyellow", "grey", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightgrey", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen", "rebeccapurple"],
                Cycle,
                History,
                Stack,
                valid_color: function(t) {
                    return t.match(color_re) ? !0 : $.inArray(t.toLowerCase(), $.terminal.color_names) !== -1
                },
                unclosed_strings: function(t) {
                    return !!t.match(unclosed_strings_re)
                },
                escape_regex: function(t) {
                    if (typeof t == "string") {
                        var p = /([-\\^$[\]()+{}?*.|])/g;
                        return t.replace(p, "\\$1")
                    }
                },
                have_formatting: function(t) {
                    return typeof t == "string" && !!t.match(format_exist_re)
                },
                is_formatting: function(t) {
                    return typeof t == "string" && !!t.match(format_full_re)
                },
                is_extended_command: function(t) {
                    return typeof t == "string" && t.match(format_exec_re) && !$.terminal.is_formatting(t)
                },
                each_extended_command: function(w, t) {
                    var p = w.split(format_exec_split_re);
                    return $.map(p, function(f) {
                        if ($.terminal.is_extended_command(f)) {
                            var R = f.replace(/^\[\[|\]\]$/g, "");
                            return t(R) || ""
                        }
                        return f
                    }).join("")
                },
                format_split: function(t) {
                    return t.split(format_split_re).filter(Boolean)
                },
                tracking_replace: function(t, p, f, R) {
                    if (!(p instanceof RegExp)) throw new Error("tracking_replace: Second argument need to be RegExp");

                    function E(d, a, o) {
                        return d.slice(a, o)
                    }

                    function C(d) {
                        return $.terminal.strip(d).length
                    }
                    var r = "",
                        s, c = 0,
                        g, u = R,
                        _;
                    for (p.lastIndex = 0; s = p.exec(t);) {
                        if (p.global) {
                            var v = C(E(t, 0, p.lastIndex));
                            _ = v - C(s[0])
                        } else _ = s.index, v = _ + C(s[0]);
                        if (c < _ && (r += E(t, c, _)), c = v, typeof f == "function" ? g = f.apply(null, s) : g = f.replace(/\$(\$|\d)/g, function(d, a) {
                                return a === "$" ? "$" : s[a]
                            }), r += g, _ < R) {
                            var D = C(g);
                            D += count_selfclosing_formatting(g), v < R ? u = Math.max(0, u + D - C(s[0])) : u += D - (R - _)
                        }
                        if (!p.global) break
                    }
                    return c < C(t) && (r += E(t, c)), t === r ? [t, R] : [r, u]
                },
                iterate_formatting: function(t, p) {
                    function f(ge) {
                        return t.slice(ge - 6, ge) === "&nbsp;" || t.slice(ge - 1, ge).match(/\s/)
                    }

                    function R(ge) {
                        return t.slice(ge).match(entity_re)
                    }

                    function E(ge) {
                        return t[ge] === "[" && t[ge + 1] === "["
                    }

                    function C(ge) {
                        return t[ge - 1] !== "\\" && t[ge] === "\\" && t[ge + 1] === "]"
                    }

                    function r(ge) {
                        return G && !K && (t[ge] !== "]" && !z || !v) || d && !D
                    }
                    var s = make_next_char_fun(t);

                    function c() {
                        var ge = s(L);
                        return ge.length > 1 && $.terminal.length(L) > 1 ? ge.length - 1 : 0
                    }

                    function g() {
                        return f(S) && (G || K) && (i === -1 && b !== S || i !== -1)
                    }
                    var u = !1;

                    function _() {
                        return S === t.length - 1 && !u ? u = !0 : u = D && !!L.match(/^.]$/), u
                    }
                    for (var v = $.terminal.have_formatting(t), D = "", d = !1, a = 0, o, i = -1, l = -1, b, A = 0, n = 0, T = /(&[^;]+);$/, S = 0; S < t.length; S++) {
                        var L = t.slice(S),
                            z = !1;
                        o = L.match(format_start_re), o ? (D = o[1], d = !1) : D ? t[S] === "]" && (z = d, d ? (D = "", d = !1) : d = !0) : d = !0;
                        var G = D && d || !D,
                            K = E(S);
                        g() && (i = S, l = a);
                        var U = t[S].match(/[[\]]/);
                        if (n = 0, G)
                            if (t[S] === "&") {
                                if (o = R(S), o) {
                                    S += o[1].length - 2;
                                    continue
                                }++a, ++A
                            } else C(S) ? (++a, ++A, n = 1, S += 1) : (!U || !v || d && !D) && (++a, ++A);
                        if (r(S)) {
                            strlen(t[S]) === 2 && A++;
                            var te = s(L),
                                fe = te.length;
                            te === ";" && (o = t.slice(0, S + 1).match(T), o && (n = o[1].length, fe = n + 1));
                            var ye = {
                                    last: _(),
                                    count: a,
                                    index: S - n,
                                    formatting: D,
                                    length: A,
                                    text: d,
                                    size: fe,
                                    space: i,
                                    space_count: l
                                },
                                Fe = p(ye);
                            if (Fe === !1) break;
                            if (Fe && (Fe.count !== undefined$1 && (a = Fe.count), Fe.length !== undefined$1 && (A = Fe.length), Fe.space !== undefined$1 && (b = i, i = Fe.space), Fe.index !== undefined$1)) {
                                S = Fe.index;
                                continue
                            }
                        } else S === t.length - 1 && !u && p({
                            last: !0,
                            count: a + 1,
                            index: S,
                            formatting: D,
                            length: 0,
                            text: d,
                            space: i
                        });
                        d && (S += c())
                    }
                },
                partition: function(t, p) {
                    var f = $.extend({
                        wrap: !0
                    }, p);
                    if (!$.terminal.have_formatting(t)) {
                        var R = $.terminal.split_characters(t);
                        return R.map(C)
                    }
                    var E = [];

                    function C(s) {
                        return s.match(/\\$/) && (s += "\\"), "[[;;]" + s + "]"
                    }

                    function r(s) {
                        return $.terminal.is_formatting(s) ? s.match(/\\]$/) && (s = s.replace(/\\]/g, "\\\\]")) : f.wrap && (s = C(s)), s
                    }
                    return $.terminal.iterate_formatting(t, function(s) {
                        if (s.text) {
                            var c = [];
                            s.formatting && c.push(s.formatting), c.push(t.substring(s.index, s.index + s.size)), s.formatting && c.push("]"), E.push(r(c.join("")))
                        }
                    }), E
                },
                substring: function(t, p, f) {
                    var R = $.terminal.split_characters(t);
                    if (!R.slice(p, f).length) return "";
                    if (!$.terminal.have_formatting(t)) return R.slice(p, f).join("");
                    var E = 0,
                        C, r = "",
                        s = "",
                        c, g = 1;
                    return $.terminal.iterate_formatting(t, function(u) {
                        p && u.count === p + 1 && (E = u.index, u.formatting && (r = u.formatting)), f && u.count === f && (s = u.formatting, c = u.index, g = u.size), u.count === f + 1 && (C = u.index, u.formatting && (C = c + g))
                    }), p && !E ? "" : (C === undefined$1 && (C = t.length), t = r + t.slice(E, C), s && (t = t.replace(/(\[\[^\]]+)?\]$/, ""), t += "]"), t)
                },
                normalize: function(t) {
                    return t = t.replace(format_re, function(p, f, R) {
                        if (f.match(self_closing_re) && R === "") return "[[" + f + "] ]";
                        if (R === "") return "";

                        function E(g) {
                            return g.replace(/\\\]/g, "&#93;").replace(/\n/g, "\\n").replace(/&nbsp;/g, " ")
                        }
                        f = E(f);
                        var C = f.match(/;/g).length;
                        if (C >= 4) {
                            var r = f.split(/;/),
                                s = r.slice(0, 4).join(";"),
                                c = r.slice(4).join(";");
                            return "[[" + s + ";" + (c || R) + "]" + R + "]"
                        } else C === 2 ? C = ";;" : C === 3 && (C = ";");
                        return f += C + E(R), "[[" + f + "]" + R + "]"
                    }), $.terminal.amp(t)
                },
                split_equal: function(t, p, f) {
                    for (var R = "", E = [], C = $.terminal.normalize(t).split(/\n/g), r = 0, s = C.length; r < s; ++r) {
                        if (C[r] === "") {
                            E.push("");
                            continue
                        }
                        var c = C[r],
                            g = make_next_char_fun(c),
                            u = 0,
                            _, v = c.length,
                            D = !!c.match(/\[\[[^\]]+\](?:[^\][]|\\\])+\]$/),
                            d = !!c.match(/^(&nbsp;|\s)/);
                        $.terminal.iterate_formatting(c, function(a) {
                            var o, i;
                            if (a.length >= p || a.last || a.length === p - 1 && strlen(c[a.index + 1]) === 2) {
                                var l = !1;
                                if (f && a.space !== -1) {
                                    var b = text(c).substring(a.space_count);
                                    b = b.slice(0, p).replace(/\s+$/, "");
                                    var A = strlen(b);
                                    (b.match(/\s/) || A < p) && (l = !0)
                                }
                                var n = a.index + a.size;
                                D && (n += 1);
                                var T;
                                if (f && a.space !== -1 && n !== v && l ? (_ = c.slice(u, a.space), T = a.space - 1) : (i = c.slice(a.index), o = g(i), _ = c.slice(u, a.index) + o, a.last && D && o !== "]" && (_ += "]"), T = a.index + o.length - 1), f && (_ = _.replace(/(&nbsp;|\s)+$/g, ""), d || (_ = _.replace(/^(&nbsp;|\s)+/g, ""))), u = (T || a.index) + 1, R) {
                                    var S = _.match(/^[^\]]*\]/);
                                    _ = R + _, S && (R = "")
                                }
                                var L = _.match(format_re);
                                if (L) {
                                    var z = L[L.length - 1];
                                    z[z.length - 1] !== "]" ? (R = z.match(format_begin_re)[1], _ += "]") : _.match(format_end_re) && (_ = _.replace(format_end_re, ""), R = z.match(format_begin_re)[1])
                                }
                                return E.push(_), {
                                    index: T,
                                    length: 0,
                                    space: -1
                                }
                            }
                        })
                    }
                    return E
                },
                amp: function(t) {
                    return t.replace(/&(?!#[0-9]+;|#x[0-9a-f]+;|[a-z]+;)/gi, "&amp;")
                },
                encode: function(t, p) {
                    var f = $.extend({
                        tabs: 4,
                        before: ""
                    }, p);
                    return $.terminal.amp(t).replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/ /g, "&nbsp;").split(`
`).map(function(R) {
                        var E = R.split(/((?:\[\[[^\]]+\])?\t(?:\])?)/);
                        return E = E.filter(Boolean), E.map(function(C, r) {
                            return C.match(/\t/) ? C.replace(/\t([^\t]*)$/, function(s, c) {
                                if (r !== 0 && E[r - 1].match(/\t\]?$/)) {
                                    var g = new Array(f.tabs + 1).join("&nbsp;");
                                    return g + c
                                } else {
                                    var u = E.slice(r - 1, r).join("");
                                    f.before && r <= 1 && (u = f.before + u);
                                    var _ = $.terminal.length(u),
                                        v = f.tabs - _ % f.tabs;
                                    return v === 0 && (v = 4), new Array(v + 1).join("&nbsp;") + c
                                }
                            }) : C
                        }).join("")
                    }).join(`
`)
                },
                nested_formatting: function(t) {
                    if (!$.terminal.have_formatting(t)) return t;
                    var p = [],
                        f = /((?:\[\[(?:[^\][]|\\\])+\])?(?:[^\][]|\\\])*\]?)/,
                        R = /\[\[([^\][]+)\][\s\S]*/,
                        E = /^\[\[([^;]*);([^;]*);([^\]]*)\]/,
                        C = 3,
                        r = 5;

                    function s(o, i, l) {
                        return l.indexOf(o) === i
                    }

                    function c(o, i) {
                        return o = g(o), i ? $.extend(i, o) : o
                    }

                    function g(o) {
                        var i = {};
                        return o.split(/\s*;\s*/).forEach(function(l) {
                            var b = l.split(":").map(function(T) {
                                    return T.trim()
                                }),
                                A = b[0],
                                n = b[1];
                            i[A] = n
                        }), i
                    }

                    function u(o) {
                        var i = o.slice();
                        return o[r] && (i[r] = v(o[r])), o[C] && (i[C] = D(o[C])), i[0] = _(o[0]), i.join(";")
                    }

                    function _(o) {
                        var i = o.filter(function(l) {
                            return l[0] === "-"
                        }).map(function(l) {
                            return l[1]
                        });
                        return o.filter(function(l) {
                            return i.indexOf(l) === -1 && i.indexOf(l[1]) === -1
                        }).join("")
                    }

                    function v(o) {
                        return JSON.stringify(o, function(i, l) {
                            return i === "style" ? d(l) : l
                        })
                    }

                    function D(o) {
                        return o.filter(s).join(" ")
                    }

                    function d(o) {
                        return Object.keys(o).map(function(i) {
                            return i + ":" + o[i]
                        }).join(";")
                    }

                    function a(o) {
                        function i(G) {
                            l[r] || (l[r] = {});
                            try {
                                var K = JSON.parse(G);
                                if (K.style) {
                                    var U = K.style,
                                        te = l[r].style;
                                    K.style = c(U, te), l[r] = $.extend(K, l[r], {
                                        style: c(U, te)
                                    })
                                } else l[r] = $.extend(K, l[r])
                            } catch {
                                warn("Invalid JSON " + G)
                            }
                        }
                        var l = [
                            [], "", ""
                        ];
                        if (!o.length) return l;
                        for (var b = o.length; b--;) {
                            var A = $.terminal.parse_formatting(o[b]);
                            if (A.length > 5) {
                                var n = A.slice(5).join(";");
                                A = A.slice(0, 5).concat(n)
                            }
                            var T = A[0].split(/(-?[@!gbiuso])/g).filter(Boolean);
                            T.forEach(function(G) {
                                l[0].indexOf(G) === -1 && l[0].push(G)
                            });
                            for (var S = 1; S < A.length; ++S) {
                                var L = A[S].trim();
                                if (L)
                                    if (S === C) {
                                        l[C] || (l[C] = []);
                                        var z = L.split(/\s+/);
                                        l[C] = l[C].concat(z)
                                    } else S === r ? i(L) : l[S] || (l[S] = L)
                            }
                        }
                        return u(l)
                    }
                    return t.split(f).filter(Boolean).map(function(o) {
                        var i;
                        if (o.match(/^\[\[/) && !$.terminal.is_extended_command(o)) {
                            var l = o.replace(R, "$1"),
                                b = $.terminal.is_formatting(o);
                            o = o.replace(E, ""), p.push(l), $.terminal.nested_formatting.__inherit__ ? i = a(p) : i = l, b ? p.pop() : o += "]", o = "[[" + i + "]" + o
                        } else {
                            var A = !1;
                            o.match(/\]/) && (A = !0), p.length && ($.terminal.nested_formatting.__inherit__ ? i = a(p) : i = p[p.length - 1], o = "[[" + i + "]" + o), A ? p.pop() : p.length && (o += "]")
                        }
                        return o
                    }).join("")
                },
                escape_formatting: function(t) {
                    return $.terminal.escape_brackets(t)
                },
                apply_formatters: function(t, p) {
                    if (t === "") return p && typeof p.position == "number" ? ["", p.position] : "";

                    function f(D, d, a, o) {
                        !D.__no_warn__ && $.terminal.length(a) !== $.terminal.length(o) && warn("Your formatter[" + d + "] change length of the string, you should use [regex, replacement] formatter or function  that return [replacement, position] instead")
                    }

                    function R(D) {
                        if (!p || !D) return !0;
                        var d = ["echo", "command", "prompt"],
                            a = d.some(function(l) {
                                return D[l] === !0
                            });
                        if (!a) return !0;
                        for (var o = d.length; o--;) {
                            var i = d[o];
                            if (D[i] === !0 && p[i] === !0) return !0
                        }
                        return !1
                    }
                    p = p || {};
                    var E = p.formatters || $.terminal.defaults.formatters,
                        C = 0;

                    function r(D, d) {
                        var a = $.extend({}, p, {
                                position: d[1]
                            }),
                            o = D(d[0], a);
                        return typeof o == "string" ? (f(D, C - 1, o, d[0]), typeof o == "string" ? [o, a.position] : d) : is_array(o) && o.length === 2 ? o : d
                    }
                    var s;
                    typeof p.position == "number" ? s = [t, p.position] : s = [t, 0];
                    try {
                        var c = E.reduce(function(D, d) {
                            if (C++, typeof d == "function" && d.__meta__) return r(d, D);
                            var a = 0,
                                o = !1,
                                i = $.terminal.format_split(D[0]),
                                l = i.map(function(z) {
                                    var G, K = text(z).length;
                                    D[1] < a + K && !o ? (G = D[1] - a, o = !0) : o ? G = -1 : G = D[1];
                                    var U = a,
                                        te;
                                    if (a += K, $.terminal.is_formatting(z)) return o ? [z, G] : [z, -1];
                                    if (is_array(d)) {
                                        var fe = d[2] || {};
                                        if (te = [z, G < 0 ? 0 : G], te[0].match(d[0]) && R(d[2]))
                                            if (fe.loop)
                                                for (; te[0].match(d[0]);) te = $.terminal.tracking_replace(te[0], d[0], d[1], te[1]);
                                            else te = $.terminal.tracking_replace(te[0], d[0], d[1], te[1]);
                                        if (G < 0) return [te[0], -1]
                                    } else typeof d == "function" && (te = r(d, [z, G]));
                                    if (typeof te < "u") {
                                        te[1] !== -1 && (te[1] += U);
                                        var ye = text(te[0]).length;
                                        return te
                                    }
                                    return [z, -1]
                                }),
                                b = l.filter(function(z) {
                                    return z[1] !== -1
                                })[0],
                                A = l.map(function(z) {
                                    return z[0]
                                }).join(""),
                                n;
                            typeof b > "u" ? n = D[1] : n = b[1];
                            var T = text(A).length;
                            if (T += count_selfclosing_formatting(A), n > T && (n = T), A === D[0]) return D;
                            var S = $.terminal.strip(D[0]),
                                L = $.terminal.strip(A);
                            return S === L ? [A, D[1]] : [A, n]
                        }, s);
                        if (typeof p.position == "number") {
                            var g = $.terminal.strip(c[0]).length;
                            if ($.terminal.length(c[0]) < g) {
                                var u = c[1];
                                u = normalize_position(c[0], u);
                                var _ = $.terminal.length(c[0]);
                                u > _ && (u = _), c[1] = u
                            }
                            return c
                        } else return c[0]
                    } catch (D) {
                        var v = "Error in formatter [" + (C - 1) + "]";
                        throw E.splice(C - 1), new $.terminal.Exception("formatting", v, D.stack)
                    }
                },
                format: function(t, p) {
                    var f = $.extend({}, {
                        linksNoReferrer: !1,
                        linksNoFollow: !1,
                        allowedAttributes: [],
                        charWidth: undefined$1,
                        escape: !0,
                        anyLinks: !1
                    }, p || {});

                    function R(D) {
                        return D.length && f.allowedAttributes.length ? D.filter(function(d) {
                            if (d === "data-text") return !1;
                            for (var a = !1, o = f.allowedAttributes, i = 0; i < o.length; ++i)
                                if (o[i] instanceof RegExp) {
                                    if (o[i].test(d)) {
                                        a = !0;
                                        break
                                    }
                                } else if (o[i] === d) {
                                a = !0;
                                break
                            }
                            return a
                        }) : []
                    }

                    function E(D, d) {
                        return D === "" ? d : D.replace(/&#93;/g, "]").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;")
                    }

                    function C(D, d) {
                        if (d) {
                            var a = R(Object.keys(d));
                            if (a.length) return " " + a.map(function(o) {
                                var i = escape_html_attr(d[o]);
                                return o === "style" && (i = i ? D + ";" + i : D), i ? o + '="' + i + '"' : o
                            }).join(" ")
                        }
                        return D ? ' style="' + D + '"' : ""
                    }

                    function r() {
                        var D = ["noopener"];
                        return f.linksNoReferrer && D.unshift("noreferrer"), f.linksNoFollow && D.unshift("nofollow"), D
                    }

                    function s(D) {
                        return D.match(/^\.{1,2}\//) || D.match(/^\//) || !(D.match(/\//) || D.match(/^[^:]+:/))
                    }

                    function c(D) {
                        return function(d) {
                            if (f.anyLinks) return !0;
                            var a = D(d);
                            return a || warn("Invalid URL " + d + " only http(s) ftp and Path are allowed"), a
                        }
                    }
                    var g = c(function(D) {
                            return D.match(/^((https?|file|ftp):\/\/|\.{0,2}\/)/) || s(D)
                        }),
                        u = c(function(D) {
                            return D.match(/^(https?:|file:|blob:|data:)/) || s(D)
                        });

                    function _(D, d, a, o, i, l, b) {
                        function A(ye) {
                            var Fe;
                            return ye.match(email_re) ? Fe = '<a href="mailto:' + ye + '"' : (g(ye) || (ye = ""), Fe = '<a target="_blank"', ye && (Fe += ' href="' + ye + '"'), Fe += ' rel="' + r().join(" ") + '"'), Fe
                        }

                        function n(ye) {
                            var Fe = "<img";
                            return u(ye) && (Fe += ' src="' + ye + '"', b && (Fe += ' alt="' + b + '"')), Fe
                        }
                        var T;
                        if (l.match(/;/)) try {
                            var S = l.split(";"),
                                L = S.slice(1).join(";").replace(/&nbsp;/g, " ").replace(/&lt;/g, "<").replace(/&gt;/g, ">");
                            L.match(/^\s*\{[^}]*\}\s*$/) && (T = JSON.parse(L), l = S[0])
                        } catch {}
                        if (b === "" && !d.match(/@/)) return "";
                        b = safe(b), b = b.replace(/\\\]/g, "&#93;"), f.escape && (b = b.replace(/\\\\/g, "\\"));
                        var z = {};
                        d.indexOf("b") !== -1 && (z["font-weight"] = "bold");
                        var G = [];
                        d.indexOf("u") !== -1 && G.push("underline"), d.indexOf("s") !== -1 && G.push("line-through"), d.indexOf("o") !== -1 && G.push("overline"), G.length && (z["text-decoration"] = G.join(" ")), d.indexOf("i") !== -1 && (z["font-style"] = "italic"), $.terminal.valid_color(a) && ($.extend(z, {
                            color: a,
                            "--color": a,
                            "--original-color": a
                        }), d.indexOf("!") !== -1 && (z["--link-color"] = a), d.indexOf("g") !== -1 && (z["text-shadow"] = "0 0 5px " + a)), $.terminal.valid_color(o) && $.extend(z, {
                            "background-color": o,
                            "--background": o
                        });
                        var K = E(l, b),
                            U = extra_css(b, f);
                        U && (b = wide_characters(b, f), $.extend(z, U));
                        var te;
                        d.indexOf("!") !== -1 ? te = A(K) : d.indexOf("@") !== -1 ? te = n(K) : te = "<span";
                        var fe = style_to_string(z);
                        return te += C(fe, T), i !== "" && (te += ' class="' + i + '"'), d.indexOf("!") !== -1 ? te += " data-text>" + b + "</a>" : d.indexOf("@") !== -1 ? te += " data-text/>" : te += ' data-text="' + K + '"><span>' + b + "</span></span>", te
                    }
                    if (typeof t == "string") {
                        var v = $.terminal.format_split(t);
                        return t = $.map(v, function(D) {
                            if (D === "") return D;
                            if ($.terminal.is_formatting(D)) return D = D.replace(/\[\[[^\]]+\]/, function(i) {
                                return i.replace(/&nbsp;/g, " ")
                            }), D.replace(format_parts_re, _);
                            D = safe(D), D = D.replace(/\\\]/, "&#93;");
                            var d = E(D),
                                a = extra_css(D, f),
                                o;
                            return a ? (D = wide_characters(D, f), o = '<span style="' + style_to_string(a) + '"') : o = "<span", o + ' data-text="' + d + '">' + D + "</span>"
                        }).join(""), t.replace(/<span><br\s*\/?><\/span>/gi, "<br/>")
                    } else return ""
                },
                escape_brackets: function(t) {
                    return t.replace(/\[/g, "&#91;").replace(/\]/g, "&#93;").replace(/\\/g, "&#92;")
                },
                unescape_brackets: function(t) {
                    return t.replace(/&#91;/g, "[").replace(/&#93;/g, "]").replace(/&#92;/g, "\\")
                },
                length: function(w, t) {
                    return w ? $.terminal.split_characters(t ? w : text(w)).length : 0
                },
                split_characters: function(t) {
                    for (var p = [], f = make_next_char_fun(t); t.length;) {
                        var R = f(t);
                        t = t.slice(R.length), p.push(R)
                    }
                    return p
                },
                columns: function(w, t, p) {
                    w = w.map(function(_) {
                        return typeof _ != "string" ? String(_) : _
                    });
                    var f = w.map(function(_) {
                            return $.terminal.strip(_)
                        }),
                        R = f.map(function(_) {
                            return strlen(_)
                        });
                    typeof p > "u" && (p = 4);
                    var E = Math.max.apply(null, R) + p,
                        C = Math.floor(t / E) - 1;
                    if (C < 1) return w.join(`
`);
                    for (var r = [], s = 0, c = w.length; s < c; s += C) {
                        var g = w.slice(s, s + C),
                            u = g.pop();
                        r.push(g.reduce(function(_, v) {
                            var D = $.terminal.strip(v),
                                d = new Array(E - D.length + 1).join(" ");
                            return _.push(v + d), _
                        }, []).join("") + u)
                    }
                    return r.join(`
`)
                },
                strip: function(t) {
                    return $.terminal.have_formatting(t) ? $.terminal.format_split(t).map(function(p) {
                        return $.terminal.is_formatting(p) ? (p = p.replace(format_parts_re, "$6"), p.replace(/\\([[\]])/g, function(f, R) {
                            return R
                        })) : p
                    }).join("") : t
                },
                active: function() {
                    return terminals.front()
                },
                last_id: function() {
                    var t = terminals.length();
                    return t - 1
                },
                parse_argument: function(t, p) {
                    function f(E) {
                        return E.split(string_re).map(function(C) {
                            if (C.match(/^['"`]/)) {
                                if (C === '""' || C === "''" || C === "``") return "";
                                var r = C[0],
                                    s = new RegExp("(\\\\\\\\(?:\\\\\\\\)*)" + r, "g");
                                C = C.replace(s, "$1").replace(/^[`'"]|[`'"]$/g, ""), r === "'" && (C = C.replace(/"/g, '\\"'))
                            }
                            return C = '"' + C + '"', JSON.parse(C)
                        }).join("")
                    }
                    if (p === !1) return t[0] === "'" && t[t.length - 1] === "'" ? t.replace(/^'|'$/g, "") : t[0] === "`" && t[t.length - 1] === "`" ? t.replace(/^`|`$/g, "") : t[0] === '"' && t[t.length - 1] === '"' ? t.replace(/^"|"$/g, "").replace(/\\([" ])/g, "$1") : t.match(/\/.*\/[gimy]*$/) ? t : t.match(/['"`]]/) ? f(t) : t.replace(/\\ /g, " ");
                    if (t === "true") return !0;
                    if (t === "false") return !1;
                    var R = t.match(re_re);
                    return R ? new RegExp(R[1], R[2]) : t.match(/['"`]/) ? f(t) : t.match(/^-?[0-9]+$/) ? parseInt(t, 10) : t.match(float_re) ? parseFloat(t) : t.replace(/\\(['"() ])/g, "$1")
                },
                parse_arguments: function(t) {
                    return $.map(t.match(command_re) || [], $.terminal.parse_argument)
                },
                split_arguments: function(t) {
                    return $.map(t.match(command_re) || [], function(p) {
                        return $.terminal.parse_argument(p, !1)
                    })
                },
                parse_command: function(t) {
                    return process_command(t, $.terminal.parse_argument)
                },
                split_command: function(t) {
                    return process_command(t, function(p) {
                        return $.terminal.parse_argument(p, !1)
                    })
                },
                parse_options: function w(t, p) {
                    var f = $.extend({}, {
                        boolean: []
                    }, p);
                    if (typeof t == "string") return w($.terminal.split_arguments(t), p);
                    var R = {
                        _: []
                    };

                    function E(r) {
                        this.value = r
                    }
                    var C = t.reduce(function(r, s) {
                        var c = typeof s == "string" ? s : "";
                        if (c.match(/^--?[^-]/) && r instanceof E && (R[r.value] = !0), c.match(/^--[^-]/)) {
                            var g = c.replace(/^--/, "");
                            if (f.boolean.indexOf(g) === -1) return new E(g);
                            R[g] = !0
                        } else if (c.match(/^-[^-]/)) {
                            var u = c.replace(/^-/, "").split("");
                            if (f.boolean.indexOf(u.slice(-1)[0]) === -1) var _ = u.pop();
                            if (u.forEach(function(v) {
                                    R[v] = !0
                                }), _) return new E(_)
                        } else r instanceof E ? R[r.value] = s : s && R._.push(s);
                        return null
                    }, null);
                    return C instanceof E && (R[C.value] = !0), R
                },
                parse_formatting: function(w) {
                    var t = $.terminal.unescape_brackets(w).split(";"),
                        p = 4;
                    if (t.length >= 5) {
                        var f = $.terminal.escape_brackets(t[p]);
                        t[p] = f
                    }
                    return t
                },
                extended_command: function extended_command(term, string, options) {
                    var settings = $.extend({
                            invokeMethods: !1
                        }, options),
                        deferred = new $.Deferred;
                    try {
                        change_hash = !1;
                        var m = string.match(extended_command_re);
                        if (m)
                            if (!settings.invokeMethods) warn("To invoke terminal or cmd methods you need to enable invokeMethods option"), deferred.reject();
                            else {
                                string = m[1];
                                var obj = m[2] === "terminal" ? term : term.cmd(),
                                    fn = m[3];
                                try {
                                    var args = eval("[" + m[4] + "]");
                                    if (!obj[fn]) term.error("Unknow function " + fn);
                                    else {
                                        var ret = obj[fn].apply(term, args);
                                        if (ret && ret.then) return ret
                                    }
                                    deferred.resolve()
                                } catch (w) {
                                    term.error("Invalid invocation in " + $.terminal.escape_brackets(string)), deferred.reject()
                                }
                            }
                        else return term.exec(string, !0).done(function() {
                            change_hash = !0
                        })
                    } catch (w) {
                        deferred.reject()
                    }
                    return deferred.promise()
                },
                iterator: function(w) {
                    function t(E) {
                        return $.terminal.is_formatting(E) && E.match(/\]\\\]/) && (E = E.replace(/\]\\\]/g, "]\\\\]")), E
                    }
                    if (typeof Symbol == "function" && typeof Symbol.iterator == "symbol") {
                        var p = $.terminal.length(w),
                            f = 0,
                            R = {};
                        return R[Symbol.iterator] = function() {
                            return {
                                next: function() {
                                    if (f < p) {
                                        var E = $.terminal.substring(w, f, f + 1);
                                        return f++, {
                                            value: t(E)
                                        }
                                    } else return {
                                        done: !0
                                    }
                                }
                            }
                        }, R
                    }
                },
                formatter: new function() {
                    try {
                        this[Symbol.split] = function(w) {
                            return $.terminal.format_split(w)
                        }, this[Symbol.match] = function(w) {
                            return w.match(format_re)
                        }, this[Symbol.replace] = function(w, t) {
                            return w.replace(format_parts_re, t)
                        }, this[Symbol.search] = function(w) {
                            return w.search(format_re)
                        }
                    } catch {}
                },
                new_formatter: function(w) {
                    for (var t = $.terminal.defaults.formatters, p = 0; p < t.length; ++p)
                        if (t[p] === $.terminal.nested_formatting) {
                            t.splice(p, 0, w);
                            return
                        } t.push(w)
                }
            }, $.terminal.Exception = function w(t, p, f) {
                arguments.length === 1 ? (this.message = arguments[0], this.type = "TERMINAL") : (this.type = t, this.message = p, f && (this.stack = f))
            }, $.terminal.Exception.prototype = new Error, $.terminal.Exception.prototype.toString = function() {
                return this.message + `
` + this.stack
            }, $.fn.visible = function() {
                return this.css("visibility", "visible")
            }, $.fn.hidden = function() {
                return this.css("visibility", "hidden")
            };
            var warnings = [];

            function warn(w) {
                w = "[jQuery Terminal] " + w, warnings.indexOf(w) === -1 && (warnings.push(w), console ? console.warn ? console.warn(w) : console.log && console.log(w) : setTimeout(function() {
                    throw new Error("WARN: " + w)
                }, 0))
            }
            var ids = {};
            $.jrpc = function(w, t, p, f, R) {
                var E = new $.Deferred,
                    C;
                $.isPlainObject(w) ? C = w : C = {
                    url: w,
                    method: t,
                    params: p,
                    success: f,
                    error: R
                };

                function r(c) {
                    return $.isNumeric(c.id) && (typeof c.result < "u" || typeof c.error < "u")
                }
                ids[C.url] = ids[C.url] || 0;
                var s = {
                    jsonrpc: "2.0",
                    method: C.method,
                    params: C.params,
                    id: ++ids[C.url]
                };
                return $.ajax({
                    url: C.url,
                    beforeSend: function(g, u) {
                        is_function(C.request) && C.request(g, s), u.data = JSON.stringify(s)
                    },
                    success: function(g, u, _) {
                        var v = _.getResponseHeader("Content-Type");
                        v.match(/(application|text)\/json/) || warn("Response Content-Type is neither application/json nor text/json");
                        var D;
                        try {
                            D = JSON.parse(g)
                        } catch (d) {
                            if (C.error) C.error(_, "Invalid JSON", d);
                            else throw new $.terminal.Exception("JSON", "Invalid JSON", d.stack);
                            E.reject({
                                message: "Invalid JSON",
                                response: g
                            });
                            return
                        }
                        is_function(C.response) && C.response(_, D), r(D) || C.method === "system.describe" ? (C.success && C.success(D, u, _), E.resolve(D)) : (C.error && C.error(_, "Invalid JSON-RPC"), E.reject({
                            message: "Invalid JSON-RPC",
                            response: g
                        }))
                    },
                    error: C.error,
                    contentType: "application/json",
                    dataType: "text",
                    async: !0,
                    cache: !1,
                    type: "POST"
                }), E.promise()
            }, $.rpc = function(w, t, p) {
                var f = new $.Deferred;

                function R(C) {
                    C.error ? f.reject(C.error) : f.resolve(C.result)
                }

                function E(C, r, s) {
                    f.reject({
                        message: s
                    })
                }
                return $.jrpc(w, t, p, R, E), f.promise()
            };

            function terminal_ready(w) {
                return !!(w.closest("body").length && w.is(":visible") && w.find(".cmd-prompt").length)
            }

            function get_char_size(w) {
                var t;
                if (terminal_ready(w)) {
                    var p = w.find(".cmd-prompt").clone().css({
                        visiblity: "hidden",
                        position: "absolute"
                    });
                    p.appendTo(w.find(".cmd")).html("&nbsp;").wrap('<div class="cmd-wrapper"/>'), t = {
                        width: p.width(),
                        height: p.height()
                    }, p.parent().remove()
                } else {
                    var f = $('<div class="terminal terminal-temp"><div class="terminal-wrapper"><div class="terminal-output"><div><div class="terminal-line" style="float: left"><span>&nbsp;</span></div></div></div><div class="terminal-pixel"></div></div>').appendTo("body");
                    if (f.addClass(w.attr("class")).attr("id", w.attr("id")), w) {
                        var R = w.attr("style");
                        R && (R = R.split(/\s*;\s*/).filter(function(C) {
                            return !C.match(/display\s*:\s*none/i)
                        }).join(";"), f.attr("style", R))
                    }
                    var E = f.find(".terminal-line");
                    t = {
                        width: E.width(),
                        height: E.height()
                    }, f.remove()
                }
                return t
            }

            function get_num_chars(w, t) {
                var p = w.find(".terminal-fill").width(),
                    f = Math.floor(p / t.width);
                return f || 1e3
            }

            function get_num_rows(w, t) {
                var p = w.find(".terminal-fill"),
                    f = p.height();
                return Math.floor(f / t.height)
            }

            function all(w, t) {
                var p = w.filter(function(f) {
                    return f[t]() === f
                });
                return p.length === w.length
            }

            function string_case(w) {
                var t = w.split("");
                return all(t, "toLowerCase") ? "lower" : all(t, "toUpperCase") ? "upper" : "mixed"
            }

            function same_case(w) {
                return string_case(w) !== "mixed"
            }

            function is_function(w) {
                return get_type(w) === "function"
            }

            function is_object(w) {
                return w && typeof w == "object"
            }

            function is_promise(w) {
                return is_object(w) && is_function(w.then || w.done)
            }

            function is_deferred(w) {
                return is_promise(w) && is_function(w.promise)
            }
            Array.isArray || (Array.isArray = function(w) {
                return Object.prototype.toString.call(w) === "[object Array]"
            });

            function is_array(w) {
                return Array.isArray(w)
            }

            function get_type(w) {
                return typeof w == "function" ? "function" : w === null ? w + "" : Array.isArray(w) ? "array" : typeof w == "object" ? "object" : typeof w
            }
            var version_set = !$.terminal.version.match(/^\{\{/),
                copyright = "Copyright (c) 2011-2022 Jakub T. Jankiewicz <https://jcubic.pl/me>",
                version_string = version_set ? " v. " + $.terminal.version : " ",
                reg = new RegExp(" {" + version_string.length + "}$"),
                name_ver = "jQuery Terminal Emulator" + (version_set ? version_string : ""),
                signatures = [
                    ["jQuery Terminal", "(c) 2011-2022 jcubic"],
                    [name_ver, copyright.replace(/^Copyright | *<.*>/g, "")],
                    [name_ver, copyright.replace(/^Copyright /, "")],
                    ["      _______                 ________                        __", "     / / _  /_ ____________ _/__  ___/______________  _____  / /", " __ / / // / // / _  / _/ // / / / _  / _/     / /  \\/ / _ \\/ /", "/  / / // / // / ___/ // // / / / ___/ // / / / / /\\  / // / /__", "\\___/____ \\\\__/____/_/ \\__ / /_/____/_//_/_/_/_/_/  \\/\\__\\_\\___/", "         \\/          /____/                                   ".replace(reg, " ") + version_string, copyright],
                    ["      __ _____                     ________                              __", "     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /", " __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /", "/  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__", "\\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/", "          \\/              /____/                                          ".replace(reg, "") + version_string, copyright]
                ];
            $.terminal.nested_formatting.__meta__ = !0, $.terminal.nested_formatting.__inherit__ = !0, $.terminal.nested_formatting.__no_warn__ = !0, $.terminal.defaults = {
                prompt: "> ",
                history: !0,
                exit: !0,
                clear: !0,
                enabled: !0,
                maskChar: "*",
                wrap: !0,
                checkArity: !0,
                raw: !1,
                tabindex: 1,
                invokeMethods: !1,
                exceptionHandler: null,
                pauseEvents: !0,
                softPause: !1,
                mousewheel: null,
                touchscroll: null,
                memory: !1,
                cancelableAjax: !0,
                processArguments: !0,
                execAnimation: !1,
                execAnimationDelay: 100,
                linksNoReferrer: !1,
                imagePause: !0,
                useCache: !0,
                anyLinks: !1,
                linksNoFollow: !1,
                processRPCResponse: null,
                completionEscape: !0,
                onCommandChange: null,
                mobileDelete: is_mobile,
                onPositionChange: null,
                convertLinks: !0,
                extra: {},
                tabs: 4,
                historySize: 60,
                scrollObject: null,
                historyState: !1,
                importHistory: !1,
                historyFilter: null,
                echoCommand: !0,
                scrollOnEcho: !0,
                login: null,
                outputLimit: -1,
                formatters: [$.terminal.nested_formatting],
                unixFormatting: {
                    escapeBrackets: !1,
                    ansiParser: {},
                    ansiArt: !1
                },
                onAjaxError: null,
                pasteImage: !0,
                scrollBottomOffset: 20,
                wordAutocomplete: !0,
                caseSensitiveAutocomplete: !0,
                caseSensitiveSearch: !0,
                clickTimeout: 200,
                holdTimeout: 400,
                holdRepeatTimeout: 200,
                repeatTimeoutKeys: [],
                mobileIngoreAutoSpace: [],
                request: $.noop,
                response: $.noop,
                describe: "procs",
                onRPCError: null,
                keymap: null,
                doubleTab: null,
                doubleTabEchoCommand: !1,
                completion: !1,
                onInit: $.noop,
                onClear: $.noop,
                onBlur: $.noop,
                onFocus: $.noop,
                onTerminalChange: $.noop,
                onExit: $.noop,
                onPush: $.noop,
                onPop: $.noop,
                keypress: $.noop,
                keydown: $.noop,
                renderHandler: null,
                onAfterRedraw: $.noop,
                onEchoCommand: $.noop,
                onPaste: $.noop,
                onFlush: $.noop,
                onBeforeCommand: null,
                onAfterCommand: null,
                onBeforeEcho: null,
                onAfterEcho: null,
                onBeforeLogin: null,
                onAfterLogout: null,
                onBeforeLogout: null,
                allowedAttributes: ["title", /^aria-/, "id", /^data-/],
                strings: {
                    comletionParameters: "From version 1.0.0 completion function need to have two arguments",
                    wrongPasswordTryAgain: "Wrong username or password try again!",
                    wrongPassword: "Wrong username or password!",
                    ajaxAbortError: "Error while aborting ajax call!",
                    wrongArity: "Wrong number of arguments. Function '%s' expects %s got %s!",
                    commandNotFound: "Command '%s' Not Found!",
                    oneRPCWithIgnore: "You can use only one rpc with describe == false or rpc without system.describe",
                    oneInterpreterFunction: "You can't use more than one function (rpc without system.describe or with option describe == false counts as one)",
                    loginFunctionMissing: "You didn't specify a login function",
                    noTokenError: "Access denied (no token)",
                    serverResponse: "Server responded",
                    wrongGreetings: "Wrong value of greetings parameter",
                    notWhileLogin: "You can't call `%s' function while in login",
                    loginIsNotAFunction: "Authenticate must be a function",
                    canExitError: "You can't exit from main interpreter",
                    invalidCompletion: "Invalid completion",
                    invalidSelector: "Sorry, but terminal said that you use invalid selector!",
                    invalidTerminalId: "Invalid Terminal ID",
                    login: "login",
                    password: "password",
                    recursiveLoop: "Recursive loop in echo detected, skip",
                    notAString: "%s function: argument is not a string",
                    redrawError: "Internal error, wrong position in cmd redraw",
                    invalidStrings: "Command %s have unclosed strings",
                    invalidMask: "Invalid mask used only string or boolean allowed",
                    defunctTerminal: "You can't call method on terminal that was destroyed"
                }
            };
            var requests = [],
                terminals = new Cycle,
                save_state = [],
                hash_commands, change_hash = !1,
                fire_hash_change = !0,
                first_instance = !0;
            $.fn.terminal = function(w, t) {
                function p(k) {
                    k && (this.storage = {}), this.set = function(P, H) {
                        k ? this.storage[P] = H : $.Storage.set(P, H)
                    }, this.get = function(P) {
                        return k ? this.storage[P] : $.Storage.get(P)
                    }, this.remove = function(P) {
                        k ? delete this.storage[P] : $.Storage.remove(P)
                    }
                }

                function f(k) {
                    if ($.terminal.unclosed_strings(k)) {
                        var P = $.terminal.escape_brackets(k),
                            H = sprintf(nt().invalidStrings, "`" + P + "`");
                        throw new $.terminal.Exception(H)
                    } else return is_function(ee.processArguments) ? process_command(k, ee.processArguments) : ee.processArguments ? $.terminal.parse_command(k) : $.terminal.split_command(k)
                }

                function R(k, P) {
                    if ($.terminal.Animation && k instanceof $.terminal.Animation) return k.start(F), !1;
                    if (is_function(ee.renderHandler)) {
                        var H = ee.renderHandler.call(F, k, P, F);
                        return H === !1 ? !1 : typeof H == "string" || s(H) || is_promise(H) ? H : k
                    }
                    return k
                }

                function E(k, P) {
                    if (s(k)) {
                        var H = $.extend({}, P, {
                            raw: !0,
                            finalize: function(V) {
                                V.find(".terminal-render-item").replaceWith(k), P && is_function(P.finalize) && P.finalize(V, F)
                            }
                        });
                        return ['<div class="terminal-render-item"/>', H]
                    }
                }

                function C(k, P) {
                    var H = E(k, P);
                    if (H) return F.echo.apply(F, H), !0
                }

                function r(k) {
                    return Tt.find("[data-index=" + k + "]")
                }

                function s(k) {
                    return k instanceof $.fn.init || k instanceof Element
                }

                function c(k) {
                    k = R(k), k !== !1 && (C(k) || (typeof k == "string" ? F.echo(k) : is_array(k) ? F.echo($.map(k, function(P) {
                        return JSON.stringify(P)
                    }).join(" ")) : typeof k == "object" ? F.echo(JSON.stringify(k)) : F.echo(k)))
                }

                function g(k, P) {
                    var H = /(.*):([0-9]+):([0-9]+)$/,
                        V = k.match(H);
                    V && (F.pause(ee.softPause), $.get(V[1], function(X) {
                        var ce = V[1],
                            ue = X.split(`
`),
                            me = +V[2] - 1,
                            Se = me > 2 ? me - 2 : 0,
                            _e = ue.slice(Se, me + 3).map(function(Ie, Re) {
                                var Ke = "[" + (me + Re - 1) + "]: ",
                                    Ye = P - Ke.length - 4;
                                return Ie.length > Ye && (Ie = Ie.substring(0, Ye) + "..."), (me > 2 ? Re === 2 : Re === me) && (Ie = "[[;#f00;]" + $.terminal.escape_brackets(Ie) + "]"), Ke + Ie
                            }).filter(Boolean).join(`
`);
                        _e.length && (F.echo("[[b;white;]" + ce + "]"), F.echo(_e).resume())
                    }, "text"))
                }

                function u(k) {
                    if (is_function(ee.onRPCError)) ee.onRPCError.call(F, k);
                    else if (F.error("&#91;RPC&#93; " + k.message), k.error && k.error.message) {
                        k = k.error;
                        var P = "	" + k.message;
                        k.file && (P += ' in file "' + k.file.replace(/.*\//, "") + '"'), k.at && (P += " at line " + k.at), F.error(P)
                    }
                }

                function _(k, P) {
                    var H = function(V, X) {
                        F.pause(ee.softPause), $.jrpc({
                            url: k,
                            method: V,
                            params: X,
                            request: function(ce, ue) {
                                try {
                                    ee.request.call(F, ce, ue, F)
                                } catch (me) {
                                    i(me, "USER")
                                }
                            },
                            response: function(ce, ue) {
                                try {
                                    ee.response.call(F, ce, ue, F)
                                } catch (me) {
                                    i(me, "USER")
                                }
                            },
                            success: function(ue) {
                                ue.error ? u(ue.error) : is_function(ee.processRPCResponse) ? ee.processRPCResponse.call(F, ue.result, F) : ue.result !== null && c(ue.result), F.resume()
                            },
                            error: D
                        })
                    };
                    return function(V, X) {
                        if (V !== "") {
                            try {
                                V = f(V)
                            } catch (ue) {
                                i(ue, "TERMINAL (get_processed_command)");
                                return
                            }
                            if (!P || V.name === "help") H(V.name, V.args);
                            else {
                                var ce = X.token(!0);
                                ce ? H(V.name, [ce].concat(V.args)) : X.error("&#91;AUTH&#93; " + nt().noTokenError)
                            }
                        }
                    }
                }

                function v(k, P, H, V) {
                    return function(X, ce) {
                        if (X !== "") {
                            var ue;
                            try {
                                ue = f(X)
                            } catch (Ie) {
                                is_function(ee.exception) ? ee.exception(Ie, F) : F.error("Error: " + (Ie.message || Ie));
                                return
                            }
                            var me = k[ue.name],
                                Se = get_type(me);
                            if (Se === "function")
                                if (P && me.length !== ue.args.length) F.error("&#91;Arity&#93; " + sprintf(nt().wrongArity, ue.name, me.length, ue.args.length));
                                else return me.apply(F, ue.args);
                            else if (Se === "object" || Se === "string") {
                                var _e = [];
                                Se === "object" && (_e = Object.keys(me), me = v(me, P)), ce.push(me, {
                                    prompt: ue.name + "> ",
                                    name: ue.name,
                                    completion: Se === "object" ? _e : undefined$1
                                })
                            } else is_function(V) ? V(X, F) : is_function(ee.onCommandNotFound) ? ee.onCommandNotFound.call(F, X, F) : ce.error(sprintf(nt().commandNotFound, ue.name))
                        }
                    }
                }

                function D(k, P, H) {
                    F.resume(), is_function(ee.onAjaxError) ? ee.onAjaxError.call(F, k, P, H) : P !== "abort" && F.error("&#91;AJAX&#93; " + P + " - " + nt().serverResponse + `:
` + $.terminal.escape_brackets(k.responseText))
                }

                function d(k, P, H) {
                    function V(me) {
                        me.error ? u(me.error) : is_function(ee.processRPCResponse) ? ee.processRPCResponse.call(F, me.result, F) : c(me.result), F.resume()
                    }

                    function X(me, Se) {
                        try {
                            ee.request.call(F, me, Se, F)
                        } catch (_e) {
                            i(_e, "USER")
                        }
                    }

                    function ce(me, Se) {
                        try {
                            ee.response.call(F, me, Se, F)
                        } catch (_e) {
                            i(_e, "USER")
                        }
                    }

                    function ue(me) {
                        var Se = me;
                        if (ee.describe !== !1 && ee.describe !== "" && ee.describe.split(".").forEach(function(Re) {
                                Se = Se[Re]
                            }), Se && Se.length) {
                            var _e = {};
                            $.each(Se, function(Re, Ke) {
                                $.isPlainObject(Ke) && typeof Ke.name == "string" && (_e[Ke.name] = function() {
                                    var Ye = P && Ke.name !== "help",
                                        be = Array.prototype.slice.call(arguments),
                                        Le = be.length + (Ye ? 1 : 0);
                                    if (ee.checkArity && Ke.params && Ke.params.length !== Le) F.error("&#91;Arity&#93; " + sprintf(nt().wrongArity, Ke.name, Ke.params.length, Le));
                                    else {
                                        if (F.pause(ee.softPause), Ye) {
                                            var Be = F.token(!0);
                                            Be ? be = [Be].concat(be) : F.error("&#91;AUTH&#93; " + nt().noTokenError)
                                        }
                                        $.jrpc({
                                            url: k,
                                            method: Ke.name,
                                            params: be,
                                            request: X,
                                            response: ce,
                                            success: V,
                                            error: D
                                        })
                                    }
                                })
                            });
                            var Ie = typeof P == "string" ? P : "login";
                            _e.help = _e.help || function(Re) {
                                if (typeof Re > "u") {
                                    var Ke = Se.map(function(Le) {
                                        return Le.name
                                    }).join(", ") + ", help";
                                    F.echo("Available commands: " + Ke)
                                } else {
                                    var Ye = !1;
                                    if ($.each(Se, function(Le, Be) {
                                            if (Be.name === Re) {
                                                Ye = !0;
                                                var Ge = "";
                                                if (Ge += "[[bu;;]" + Be.name + "]", Be.params) {
                                                    var Ue = Be.params;
                                                    P && Be.name !== Ie && (Ue = Ue.slice(1)), Ge += " " + Ue.join(" ")
                                                }
                                                return Be.help && (Ge += `
` + Be.help), F.echo(Ge), !1
                                            }
                                        }), !Ye)
                                        if (Re === "help") F.echo(`[[bu;;]help] [method]
display help for the method or list of methods if not specified`);
                                        else {
                                            var be = "Method `" + Re + "' not found ";
                                            F.error(be)
                                        }
                                }
                            }, H(_e)
                        } else H(null)
                    }
                    return $.jrpc({
                        url: k,
                        method: "system.describe",
                        params: [],
                        success: ue,
                        request: X,
                        response: ce,
                        error: function() {
                            H(null)
                        }
                    })
                }

                function a(k, P, H) {
                    H = H || $.noop;
                    var V = get_type(k),
                        X, ce = {},
                        ue = 0,
                        me;
                    if (V === "array") X = {},
                        function _e(Ie, Re) {
                            if (Ie.length) {
                                var Ke = Ie[0],
                                    Ye = Ie.slice(1),
                                    be = get_type(Ke);
                                be === "string" ? (F.pause(ee.softPause), ee.describe === !1 ? (++ue === 1 ? me = _(Ke, P) : F.error(nt().oneRPCWithIgnore), _e(Ye, Re)) : d(Ke, P, function(Le) {
                                    Le ? $.extend(X, Le) : ++ue === 1 ? me = _(Ke, P) : F.error(nt().oneRPCWithIgnore), F.resume(), _e(Ye, Re)
                                })) : be === "function" ? (me ? F.error(nt().oneInterpreterFunction) : me = Ke, _e(Ye, Re)) : be === "object" && ($.extend(X, Ke), _e(Ye, Re))
                            } else Re()
                        }(k, function() {
                            H({
                                interpreter: v(X, !1, P, me && me.bind(F)),
                                completion: Object.keys(X)
                            })
                        });
                    else if (V === "string") ee.describe === !1 ? (X = {
                        interpreter: _(k, P)
                    }, $.isArray(ee.completion) && (X.completion = ee.completion), H(X)) : (F.pause(ee.softPause), d(k, P, function(_e) {
                        _e ? (ce.interpreter = v(_e, !1), ce.completion = Object.keys(_e)) : ce.interpreter = _(k, P), H(ce), F.resume()
                    }));
                    else if (V === "object") H({
                        interpreter: v(k, ee.checkArity),
                        completion: Object.keys(k)
                    });
                    else {
                        if (V === "undefined") k = $.noop;
                        else if (V !== "function") {
                            var Se = V + " is invalid interpreter value";
                            throw new $.terminal.Exception(Se)
                        }
                        H({
                            interpreter: k,
                            completion: ee.completion
                        })
                    }
                }

                function o(k, P) {
                    var H = get_type(P) === "boolean" ? "login" : P;
                    return function(V, X, ce) {
                        F.pause(ee.softPause), $.jrpc({
                            url: k,
                            method: H,
                            params: [V, X],
                            request: function(ue, me) {
                                try {
                                    ee.request.call(F, ue, me, F)
                                } catch (Se) {
                                    i(Se, "USER")
                                }
                            },
                            response: function(ue, me) {
                                try {
                                    ee.response.call(F, ue, me, F)
                                } catch (Se) {
                                    i(Se, "USER")
                                }
                            },
                            success: function(me) {
                                !me.error && me.result ? ce(me.result) : ce(null), F.resume()
                            },
                            error: D
                        })
                    }
                }

                function i(k, P, H) {
                    is_function(ee.exceptionHandler) ? ee.exceptionHandler.call(F, k, P) : (F.exception(k, P), H || setTimeout(function() {
                        throw k
                    }, 0))
                }

                function l(k) {
                    function P(V, X, ce, ue, me, Se, _e) {
                        function Ie(be, Le) {
                            return "[[" + [X + (be || ""), ce, ue, me, Le || Se].join(";") + "]"
                        }

                        function Re(be) {
                            return "]" + Ie("!", be) + be + "]" + Ie()
                        }
                        if (!X.match(/!/)) {
                            var Ke = _e.match(email_full_re) || _e.match(url_full_re);
                            if (Ke) return Ie("!", Ke[1]) + _e + "]";
                            if (_e.match(email_re) || _e.match(url_nf_re)) {
                                var Ye = _e.replace(email_re, Re).replace(url_nf_re, Re);
                                return Ie("", Se) + Ye + "]"
                            }
                        }
                        return V
                    }

                    function H(V) {
                        return V.replace(email_re, "[[!;;]$1]").replace(url_nf_re, "[[!;;]$1]")
                    }
                    return $.terminal.have_formatting(k) ? $.terminal.format_split(k).map(function(V) {
                        return $.terminal.is_formatting(V) ? V.replace(format_parts_re, P) : H(V)
                    }).join("") : H(k)
                }

                function b(k, P) {
                    return (strlen(text(k)) > P.cols || k.match(/\n/)) && (ee.wrap === !0 && P.wrap === undefined$1 || ee.wrap === !1 && P.wrap === !0)
                }
                var A;
                "Map" in root && (A = new Map);

                function n(k, P, H) {
                    return H.exec || P.options.clear_exec ? $.terminal.each_extended_command(k, function(V) {
                        if (H.exec) {
                            P.options.exec = !1, P.options.clear_exec = !0;
                            var X = V.trim();
                            Pt && Pt === X ? (Pt = "", F.error(nt().recursiveLoop)) : (Pt = X, $.terminal.extended_command(F, V, {
                                invokeMethods: H.invokeMethods
                            }).then(function() {
                                Pt = ""
                            }))
                        }
                    }) : k
                }

                function T(k) {
                    try {
                        var P = !is_function(k.value),
                            H = $.extend({
                                exec: !0,
                                raw: !1,
                                finalize: $.noop,
                                useCache: P,
                                invokeMethods: !1,
                                formatters: !0,
                                convertLinks: ee.convertLinks
                            }, k.options || {}),
                            V = ne(k.value);
                        if (V && is_function(V.then)) return V.then(function(Re) {
                            T($.extend(k, {
                                value: Re,
                                options: H
                            }))
                        });
                        if (V !== "") {
                            if (!H.raw) {
                                if (ee.useCache && H.useCache) {
                                    var X = V;
                                    if (A && A.has(X)) {
                                        var ce = A.get(X);
                                        return Vt.append(ce.input, k.index, H, ce.raw), !0
                                    }
                                }
                                if (H.formatters) try {
                                    V = $.terminal.apply_formatters(V, $.extend(ee, {
                                        echo: !0
                                    }))
                                } catch (Re) {
                                    i(Re, "FORMATTING")
                                }
                                if (V = n(V, k, H), V === "") return;
                                H.convertLinks && (V = l(V));
                                var ue = V;
                                V = crlf($.terminal.normalize(V)), V = $.terminal.encode(V, {
                                    tabs: ee.tabs
                                });
                                var me, Se = H.cols = F.cols();
                                if (b(V, H)) {
                                    var _e = H.keepWords;
                                    me = $.terminal.split_equal(V, Se, _e)
                                } else V.match(/\n/) && (me = V.split(/\n/))
                            }
                        } else ue = "";
                        var Ie = me || V;
                        A && X && P && A.set(X, {
                            input: Ie,
                            raw: ue
                        }), Vt.append(Ie, k.index, H, ue)
                    } catch (Re) {
                        Vt.clear(), is_function(ee.exceptionHandler) ? ee.exceptionHandler.call(F, Re, "TERMINAL") : alert_exception("[Internal Exception(process_line)]", Re)
                    }
                    return !0
                }

                function S(k) {
                    if (k = $.extend({}, {
                            update: !1,
                            scroll: !0
                        }, k || {}), !k.update) {
                        We.resize(wt);
                        var P = Tt.empty().detach()
                    }
                    try {
                        Vt.clear(), unpromise(_t.render(F.rows(), function(H) {
                            return H.map(T)
                        }), function() {
                            F.flush(k), k.update || We.before(P), Ee("onAfterRedraw")
                        })
                    } catch (H) {
                        is_function(ee.exceptionHandler) ? ee.exceptionHandler.call(F, H, "TERMINAL (redraw)") : alert_exception("[redraw]", H)
                    }
                }

                function L() {
                    if (ee.outputLimit >= 0) {
                        var k;
                        ee.outputLimit === 0 ? k = F.rows() : k = ee.outputLimit;
                        var P = Tt.find("> div > div");
                        if (P.length + 1 > k) {
                            var H = P.length - k + 1,
                                V = P.slice(0, H),
                                X = V.parent();
                            V.remove(), X.each(function() {
                                var ce = $(this);
                                ce.is(":empty") && (_t.unmount(ce), ce.remove())
                            }), _t.limit_snapshot(H)
                        }
                    }
                }

                function z() {
                    if (ee.greetings === undefined$1) F.echo(F.signature, {
                        finalize: a11y_hide,
                        formatters: !1
                    });
                    else if (ee.greetings) {
                        var k = typeof ee.greetings;
                        k === "string" ? F.echo(ee.greetings) : k === "function" ? F.echo(function() {
                            try {
                                return ee.greetings.call(F, F.echo)
                            } catch (P) {
                                ee.greetings = null, i(P, "greetings")
                            }
                        }) : F.error(nt().wrongGreetings)
                    }
                }

                function G(k) {
                    var P = We.mask();
                    switch (typeof P) {
                        case "string":
                            return k.replace(/./g, P);
                        case "boolean":
                            return P ? k.replace(/./g, ee.maskChar) : $.terminal.escape_formatting(k)
                    }
                    throw new $.terminal.Exception(nt().invalidMask)
                }

                function K(k) {
                    typeof k > "u" && (k = F.get_command());
                    var P = We.prompt(!0);
                    k = G(k);
                    var H = {
                        exec: !1,
                        formatters: !1,
                        convertLinks: !1,
                        finalize: function(X) {
                            a11y_hide(X.addClass("terminal-command")), Ee("onEchoCommand", [X, k])
                        }
                    };
                    k = $.terminal.apply_formatters(k, {
                        command: !0
                    }), F.echo(P + k, H)
                }

                function U() {
                    return dr.outerWidth() !== F.outerWidth()
                }

                function te(k) {
                    var P = terminals.get()[k[0]];
                    if (!P) throw new $.terminal.Exception(nt().invalidTerminalId);
                    var H = k[1];
                    if (save_state[H]) P.import_view(save_state[H]);
                    else {
                        change_hash = !1;
                        var V = k[2];
                        V && P.exec(V).done(function() {
                            change_hash = !0, save_state[H] = P.export_view()
                        })
                    }
                }

                function fe(k) {
                    return function(P) {
                        F.error("[" + k + "] " + (P.message || P)).resume()
                    }
                }

                function ye() {
                    change_hash && (fire_hash_change = !1, location.hash = "#" + JSON.stringify(hash_commands), setTimeout(function() {
                        fire_hash_change = !0
                    }, 100))
                }
                var Fe = !0,
                    ge = [];

                function O(k, P, H) {
                    function V() {
                        (ee.historyState || ee.execHash && H) && (save_state.length ? F.save_state(null) : F.save_state())
                    }

                    function X() {
                        H || (change_hash = !0, ee.historyState && F.save_state(k, !1), change_hash = Re)
                    }

                    function ce() {
                        Ie.resolve(), Ee("onAfterCommand", [k])
                    }

                    function ue(be) {
                        typeof be < "u" && c(be), ce(), F.resume()
                    }

                    function me(be) {
                        return is_function(be.done || be.then) && ir
                    }

                    function Se() {
                        var be = _e.interpreter.call(F, k, F);
                        if (X(), be) {
                            Fr || (me(be) ? bt = !0 : F.pause(ee.softPause)), Fr = !1;
                            var Le = fe("Command");
                            return is_function(be.done || be.then) ? unpromise(be, ue, Le) : $.when(be).done(ue).catch(Le)
                        } else return bt ? ge.push(function() {
                            ce()
                        }) : ce(), Ie.promise()
                    }
                    Fe && (Fe = !1, V());
                    try {
                        if (Ee("onBeforeCommand", [k]) === !1) return;
                        H ? (Pt = k.trim(), Dt = $.terminal.split_command(Pt)) : Dt = $.terminal.split_command(k), pe() || H && (is_function(ee.historyFilter) && ee.historyFilter(k) || k.match(ee.historyFilter)) && We.history().append(k);
                        var _e = at.top();
                        !P && ee.echoCommand && K(k);
                        var Ie = new $.Deferred,
                            Re = change_hash;
                        if (k.match(/^\s*login\s*$/) && F.token(!0)) X(), F.level() > 1 ? F.logout(!0) : F.logout(), ce();
                        else if (ee.exit && k.match(/^\s*exit\s*$/) && !ft) {
                            X();
                            var Ke = F.level();
                            (Ke === 1 && F.get_token() || Ke > 1) && (F.get_token(!0) && F.set_token(undefined$1, !0), F.pop()), ce()
                        } else if (ee.clear && k.match(/^\s*clear\s*$/) && !ft) X(), F.clear(), ce();
                        else {
                            var Ye = Se();
                            if (Ye) return Ye
                        }
                        return Ie.promise()
                    } catch (be) {
                        if (i(be, "USER", H), F.resume(), H) throw be
                    }
                }

                function Z() {
                    Ee("onBeforeLogout", [], !0) !== !1 && (q(), Ee("onAfterlogout", [], !0), F.login(St, !0, Ce))
                }

                function q() {
                    var k = F.prefix_name(!0) + "_";
                    Ot.remove(k + "token"), Ot.remove(k + "login")
                }

                function re(k) {
                    var P = F.prefix_name() + "_interpreters",
                        H = Ot.get(P);
                    H ? H = JSON.parse(H) : H = [], $.inArray(k, H) === -1 && (H.push(k), Ot.set(P, JSON.stringify(H)))
                }

                function we(k) {
                    var P = at.top(),
                        H = F.prefix_name(!0);
                    pe() || re(H);
                    var V = F.login_name(!0);
                    We.name(H + (V ? "_" + V : ""));
                    var X = P.prompt;
                    is_function(X) && (X = se(X)), X !== We.prompt() && (is_function(P.prompt) && We.prompt(""), We.prompt(P.prompt)), typeof P.history < "u" && F.history().toggle(P.history), $.isPlainObject(P.keymap) && We.keymap(null).keymap($.extend({}, Oe, $.omap(P.keymap, function(ce, ue) {
                        return function() {
                            var me = [].slice.call(arguments);
                            try {
                                return ue.apply(F, me)
                            } catch (Se) {
                                i(Se, "USER KEYMAP")
                            }
                        }
                    }))), We.set(""), yr.resolve(), !k && is_function(P.onStart) && P.onStart.call(F, F)
                }

                function Ee(k, P, H) {
                    P = (P || []).concat([F]);
                    var V = at && at.top();
                    if (V && is_function(V[k]) && !H) try {
                        return V[k].apply(F, P)
                    } catch (X) {
                        delete V[k], i(X, k)
                    } else if (is_function(ee[k])) try {
                        return ee[k].apply(F, P)
                    } catch (X) {
                        ee[k] = null, i(X, k)
                    }
                }
                var je = function() {
                    function k(P) {
                        if (!P) try {
                            return F.scroll_to(F.find(".cmd-cursor-line")), !0
                        } catch {
                            return !0
                        }
                    }
                    return typeof commonjsGlobal < "u" && typeof commonjsGlobal.it == "function" ? k : debounce(k, 100, {
                        leading: !0,
                        trailing: !1
                    })
                }();

                function ze() {
                    var k = F.find(".cmd-cursor-line");
                    return k.is_fully_in_viewport(F).then(je)
                }

                function oe(k) {
                    if (typeof history < "u" && history.replaceState) {
                        var P = "#" + JSON.stringify(k),
                            H = location.href.replace(/#.*$/, P);
                        history.replaceState(null, "", H)
                    }
                }

                function W() {
                    if (fire_hash_change && ee.execHash) try {
                        if (location.hash) {
                            var k = location.hash.replace(/^#/, "");
                            hash_commands = JSON.parse(decodeURIComponent(k))
                        } else hash_commands = [];
                        hash_commands.length ? te(hash_commands[hash_commands.length - 1]) : save_state[0] && F.import_view(save_state[0])
                    } catch (P) {
                        i(P, "TERMINAL")
                    }
                }

                function Ce() {
                    we(), z(), _t.length && (Lt.length ? $.when.apply($, Lt).then(F.refresh) : F.refresh());

                    function k() {
                        $r = $.noop, !P && F.enabled() && F.resume(!0)
                    }
                    var P = !1;
                    if (is_function(ee.onInit)) {
                        $r = function() {
                            P = !0
                        };
                        var H;
                        try {
                            H = ee.onInit.call(F, F)
                        } catch (V) {
                            i(V, "OnInit")
                        } finally {
                            is_promise(H) ? H.then(k).catch(function(V) {
                                i(V, "OnInit"), k()
                            }) : k()
                        }
                    }
                    first_instance && (first_instance = !1, $(window).on("hashchange", W))
                }

                function pe() {
                    return ft || We.mask() !== !1
                }

                function Ne(k) {
                    var P, H = at.top();
                    if (is_function(H.keydown)) {
                        if (P = H.keydown.call(F, k, F), P !== undefined$1) return P
                    } else if (is_function(ee.keydown) && (P = ee.keydown.call(F, k, F), P !== undefined$1)) return P
                }
                var Pe = {
                    "CTRL+D": function(k, P) {
                        return ft || (We.get() === "" ? at.size() > 1 || is_function(St) ? F.pop("") : F.resume() : P()), !1
                    },
                    "CTRL+C": function() {
                        return with_selection(function(k) {
                            if (k === "") {
                                var P = F.get_command(),
                                    H = F.get_position();
                                P = P.slice(0, H) + "^C" + P.slice(H + 2), K(P), F.set_command("")
                            } else {
                                var V = F.find("textarea");
                                text_to_clipboard(V, process_selected_html(k))
                            }
                        }), !1
                    },
                    "CTRL+L": function() {
                        return F.clear(), !1
                    },
                    TAB: function(k, P) {
                        var H = at.top(),
                            V, X;
                        typeof H.caseSensitiveAutocomplete < "u" ? X = H.caseSensitiveAutocomplete : X = ee.caseSensitiveAutocomplete, ee.completion && get_type(ee.completion) !== "boolean" && H.completion === undefined$1 ? V = ee.completion : V = H.completion, V === "settings" && (V = ee.completion);

                        function ce(_e) {
                            _e = _e.slice(), F.before_cursor(!1).match(/\s/) || (ee.clear && $.inArray("clear", _e) === -1 && _e.push("clear"), ee.exit && $.inArray("exit", _e) === -1 && _e.push("exit")), F.complete(_e, {
                                echo: !0,
                                word: ee.wordAutocomplete,
                                escape: ee.completionEscape,
                                caseSensitive: X,
                                echoCommand: ee.doubleTabEchoCommand,
                                doubleTab: ee.doubleTab
                            })
                        }
                        if (V) switch (get_type(V)) {
                            case "function":
                                var ue = F.before_cursor(ee.wordAutocomplete);
                                if (V.length === 3) {
                                    var me = new Error(nt().comletionParameters);
                                    return i(me, "USER"), !1
                                }
                                var Se = V.call(F, ue, ce);
                                unpromise(Se, ce, fe("Completion"));
                                break;
                            case "array":
                                ce(V);
                                break;
                            default:
                                throw new $.terminal.Exception(nt().invalidCompletion)
                        } else P();
                        return !1
                    },
                    "CTRL+V": function(k, P) {
                        return P(k), F.oneTime(200, function() {
                            F.scroll_to_bottom()
                        }), !0
                    },
                    "CTRL+TAB": function() {
                        if (terminals.length() > 1) return F.focus(!1), !1
                    },
                    PAGEDOWN: function() {
                        F.scroll(F.height())
                    },
                    PAGEUP: function() {
                        F.scroll(-F.height())
                    }
                };

                function Xe(k) {
                    var P, H;
                    if (ir) return !1;
                    if (F.enabled())
                        if (F.paused()) {
                            if (!ee.pauseEvents && (P = Ne(k), P !== undefined$1)) return P;
                            if (k.which === 68 && k.ctrlKey) {
                                if (ee.pauseEvents && (P = Ne(k), P !== undefined$1)) return P;
                                if (requests.length) {
                                    for (H = requests.length; H--;) {
                                        var V = requests[H];
                                        if (V.readyState !== 4) try {
                                            V.abort()
                                        } catch {
                                            is_function(ee.exceptionHandler) ? ee.exceptionHandler.call(F, k, "AJAX ABORT") : F.error(nt().ajaxAbortError)
                                        }
                                    }
                                    requests = []
                                }
                                F.resume()
                            }
                            return !1
                        } else {
                            if (P = Ne(k), P !== undefined$1) return P;
                            k.which !== 9 && (ot = 0)
                        }
                }

                function ut(k) {
                    var P = at.top();
                    if (xt && (!bt || !ee.pauseEvents)) {
                        if (is_function(P.keypress)) return P.keypress.call(F, k, F);
                        if (is_function(ee.keypress)) return ee.keypress.call(F, k, F)
                    }
                }

                function ct(k) {
                    return function(H, V) {
                        var X = $.terminal.apply_formatters(H, {
                            animation: !0
                        });
                        ir = !0;
                        var ce = F.get_prompt(),
                            ue = 0,
                            me = $.terminal.length(X);
                        if (H.length > 0) {
                            var Se = "";
                            V.prompt ? Se = V.prompt : F.set_prompt("");
                            var _e = F.is_bottom(),
                                Ie = $.terminal.partition(X, {
                                    wrap: !1
                                }),
                                Re = setInterval(function() {
                                    if (jt) {
                                        F.skip_stop();
                                        var be = $.terminal.substring(X, ue, me);
                                        Se += be, F.set_prompt(Se), ue = me
                                    } else {
                                        var Ke = Ie[ue];
                                        if (V.mask) {
                                            var Ye = We.mask();
                                            typeof Ye == "string" ? Ke = Ye : Ye && (Ke = ee.maskChar)
                                        }
                                        Se += Ke, F.set_prompt(Se), Ke === `
` && _e && F.scroll_to_bottom(), ue++
                                    }
                                    ue === me && (clearInterval(Re), setTimeout(function() {
                                        k(H, ce, V), ir = !1
                                    }, V.delay))
                                }, V.delay)
                        }
                    }
                }
                var $e = ct(function(k, P, H) {
                        F.set_prompt(k), H.finalize()
                    }),
                    Ve = function() {
                        var k = ct(function(P, H, V) {
                            F.set_prompt(H), F.insert(P), V.finalize()
                        });
                        return function(P, H, V) {
                            return k(H, $.extend({}, V, {
                                prompt: P + F.get_command()
                            }))
                        }
                    }(),
                    rr = ct(function(k, P, H) {
                        F.set_prompt(P), F.echo(k, $.extend({}, H, {
                            typing: !1
                        }))
                    }),
                    gr = function() {
                        var k = ct(function(P, H, V) {
                            F.set_prompt(H), with_prompt(H, function(X) {
                                var ce = G(P);
                                ce = $.terminal.apply_formatters(ce, {
                                    command: !0
                                });
                                var ue = X + ce;
                                V = $.extend({}, V, {
                                    typing: !1,
                                    formatters: !1,
                                    convertLinks: !1
                                }), F.echo(ue, V)
                            }, F)
                        });
                        return function(P, H, V) {
                            return k(H, $.extend({}, V, {
                                prompt: P,
                                mask: !0
                            }))
                        }
                    }();

                function vr(k, P, H) {
                    return function(X, ce) {
                        var ue = new $.Deferred;
                        return Ft(function() {
                            var Se = $.extend({
                                typing: !1,
                                delay: ee.execAnimationDelay
                            }, ce);
                            if (Se.typing) {
                                if (typeof X != "string") return ue.reject(k + ": Typing animation require string");
                                if (typeof Se.delay != "number" || isNaN(Se.delay)) return ue.reject(k + ": Invalid argument, delay need to be a number");
                                var _e = F.typing(k, Se.delay, X, Se);
                                _e.then(function() {
                                    ue.resolve()
                                })
                            } else P(X, Se);
                            is_function(H) && H(X, Se)
                        }), ce && ce.typing ? ue.promise() : F
                    }
                }

                function cr(k) {
                    return function(P) {
                        k.add(P)
                    }
                }

                function nt() {
                    return $.extend({}, $.terminal.defaults.strings, ee && ee.strings || {})
                }
                var F = this;
                if (this.length > 1) return this.each(function() {
                    $.fn.terminal.call($(this), w, $.extend({
                        name: F.selector
                    }, t))
                });
                var kt;
                if (F.is("body,html")) {
                    if (F.hasClass("full-screen-terminal")) {
                        var Et = F.find("> .terminal").data("terminal");
                        if (Et) return Et
                    }
                    kt = F, F = $("<div/>").appendTo("body"), $("body").addClass("full-screen-terminal")
                } else if (F.data("terminal")) return F.data("terminal");
                var Ht = $.omap({
                    id: function() {
                        return Ar
                    },
                    clear: function() {
                        return Ee("onClear") !== !1 && (Vt.clear(), _t.clear(function(k) {
                            return r(k)
                        }), Tt[0].innerHTML = "", F.prop({
                            scrollTop: 0
                        })), F
                    },
                    export_view: function() {
                        var k = Ee("onExport");
                        return k = k || {}, $.extend({}, {
                            focus: xt,
                            mask: We.mask(),
                            prompt: F.get_prompt(),
                            command: F.get_command(),
                            position: We.position(),
                            lines: clone(_t.data()),
                            interpreters: at.clone(),
                            history: We.history().data
                        }, k)
                    },
                    import_view: function(k) {
                        if (ft) throw new Error(sprintf(nt().notWhileLogin, "import_view"));
                        return Ee("onImport", [k]), Ft(function() {
                            F.set_prompt(k.prompt), F.set_command(k.command), We.position(k.position), We.mask(k.mask), k.focus && F.focus(), _t.import(clone(k.lines).filter(function(H) {
                                return H[0]
                            })), k.interpreters instanceof Stack && (at = k.interpreters), ee.importHistory && We.history().set(k.history), S()
                        }), F
                    },
                    save_state: function(k, P, H) {
                        if (typeof H < "u" ? save_state[H] = F.export_view() : save_state.push(F.export_view()), $.isArray(hash_commands) || (hash_commands = []), k !== undefined$1 && !P) {
                            var V = [Ar, save_state.length - 1, k];
                            hash_commands.push(V), ye()
                        }
                        return F
                    },
                    exec: function(k, P, H) {
                        function V(ue) {
                            var me = O(k, ue, !0);
                            unpromise(me, function() {
                                Dt = null, ce.resolve()
                            }, function() {
                                Dt = null, ce.reject()
                            })
                        }
                        P && typeof P == "object" && (H = P, P = null);
                        var X = $.extend({
                            deferred: null,
                            silent: !1,
                            typing: !1,
                            delay: ee.execAnimationDelay
                        }, H);
                        P === null && (P = X.silent), is_deferred(X.deferred) || (X.deferred = new $.Deferred);
                        var ce = X.deferred;
                        return Cr(function() {
                            if ($.isArray(k))(function _e() {
                                var Ie = k.shift();
                                Ie ? F.exec(Ie, P, H).done(_e) : ce.resolve()
                            })();
                            else if (bt) Ut.push([k, P, X]);
                            else if (X.typing && !P) {
                                var me = X.delay;
                                bt = !0;
                                var Se = F.typing("enter", me, k, {
                                    delay: me
                                });
                                Se.then(function() {
                                    bt = !1, V(!0)
                                }), ce.then(function() {
                                    bt = !1
                                })
                            } else V(P)
                        }), ce.promise()
                    },
                    autologin: function(k, P, H) {
                        return F.trigger("terminal.autologin", [k, P, H]), F
                    },
                    login: function(k, P, H, V) {
                        if (Nr.push([].slice.call(arguments)), ft) throw new Error(sprintf(nt().notWhileLogin, "login"));
                        if (!is_function(k)) throw new Error(nt().loginIsNotAFunction);
                        if (ft = !0, F.token() && F.level() === 1 && !qt) ft = !1, F.logout(!0);
                        else if (F.token(!0) && F.login_name(!0)) return ft = !1, is_function(H) && H(), F;
                        ee.history && We.history().disable();

                        function X() {
                            for (; F.level() > ce;) F.pop(undefined$1, !0);
                            ee.history && We.history().enable()
                        }
                        var ce = F.level();

                        function ue(me, Se, _e) {
                            var Ie;
                            if (Se) {
                                X();
                                var Re = F.prefix_name(!0) + "_";
                                Ot.set(Re + "token", Se), Ot.set(Re + "login", me), ft = !1, Ee("onAfterLogin", [me, Se]), Ie = H
                            } else P ? (_e || F.error(nt().wrongPasswordTryAgain), F.pop(undefined$1, !0).set_mask(!1)) : (ft = !1, _e || F.error(nt().wrongPassword), F.pop(undefined$1, !0).pop(undefined$1, !0)), Ie = V;
                            F.paused() && F.resume(), is_function(Ie) && Ie(), F.off("terminal.autologin")
                        }
                        return F.on("terminal.autologin", function(me, Se, _e, Ie) {
                            Ee("onBeforeLogin", [Se, _e]) !== !1 && ue(Se, _e, Ie)
                        }), F.push(function(me) {
                            F.set_mask(ee.maskChar).push(function(Se) {
                                try {
                                    if (Ee("onBeforeLogin", [me, Se]) === !1) {
                                        X();
                                        return
                                    }
                                    F.pause();
                                    var _e = k.call(F, me, Se, function(Ie, Re) {
                                        ue(me, Ie, Re)
                                    });
                                    unpromise(_e, function(Ie) {
                                        ue(me, Ie)
                                    }, function(Ie) {
                                        F.pop(undefined$1, !0).pop(undefined$1, !0), F.error(Ie.message), is_function(V) && V(), F.paused() && F.resume(), F.off("terminal.autologin")
                                    })
                                } catch (Ie) {
                                    i(Ie, "AUTH")
                                }
                            }, {
                                prompt: nt().password + ": ",
                                name: "password"
                            })
                        }, {
                            prompt: nt().login + ": ",
                            name: "login"
                        }), F
                    },
                    settings: function() {
                        return ee
                    },
                    before_cursor: function(k) {
                        var P = We.position(),
                            H = We.get().slice(0, P),
                            V = H.split(/\s/),
                            X;
                        if (k)
                            if (V.length === 1) X = V[0];
                            else {
                                var ce = H.match(/(\\?")/g),
                                    ue = ce ? ce.filter(function(_e) {
                                        return !_e.match(/^\\/)
                                    }).length : 0;
                                ce = H.match(/'/g);
                                var me = ce ? ce.length : 0;
                                if (me % 2 === 1) X = H.match(/('[^']*)$/)[0];
                                else if (ue % 2 === 1) X = H.match(/("(?:[^"]|\\")*)$/)[0];
                                else
                                    for (X = V[V.length - 1], Gt = V.length - 1; Gt > 0; Gt--) {
                                        var Se = V[Gt - 1];
                                        if (Se[Se.length - 1] === "\\") X = V[Gt - 1] + " " + X;
                                        else break
                                    }
                            }
                        else X = H;
                        return X
                    },
                    complete: function(k, P) {
                        P = $.extend({
                            word: !0,
                            echo: !1,
                            escape: !0,
                            echoCommand: !1,
                            caseSensitive: !0,
                            doubleTab: null
                        }, P || {});
                        var H = P.caseSensitive,
                            V = F.before_cursor(P.word).replace(/\\"/g, '"'),
                            X = !1;
                        if (P.word && (V.match(/^"/) ? X = '"' : V.match(/^'/) && (X = "'"), X && (V = V.replace(/^["']/, ""))), ot % 2 === 0) br = F.before_cursor(P.word);
                        else {
                            var ce = F.before_cursor(P.word);
                            if (ce !== br) return
                        }
                        var ue = $.terminal.escape_regex(V);
                        P.escape && (ue = ue.replace(/(\\+)(["'() ])/g, function(Be, Ge, Ue) {
                            return Ue.match(/[()]/) ? Ge + "\\?\\" + Ue : Ge + "?" + Ue
                        }));

                        function me(Be) {
                            return X === '"' && (Be = Be.replace(/"/g, '\\"')), !X && P.escape && (Be = Be.replace(/(["'() ])/g, "\\$1")), Be
                        }

                        function Se() {
                            for (var Be = [], Ge = k.length; Ge--;)
                                if (k[Ge].match(/\n/) && P.word && warn("If you use commands with newlines you should use word option for complete or wordAutocomplete terminal option"), Ie.test(k[Ge])) {
                                    var Ue = me(k[Ge]);
                                    !H && same_case(Ue) && (V.toLowerCase() === V ? Ue = Ue.toLowerCase() : V.toUpperCase() === V && (Ue = Ue.toUpperCase())), Be.push(Ue)
                                } return Be
                        }
                        var _e = H ? "" : "i",
                            Ie = new RegExp("^" + ue, _e),
                            Re = Se();

                        function Ke(Be, Ge) {
                            var Ue = F.get_command(),
                                dt = F.get_position(),
                                gt = new RegExp("^" + Be, "i"),
                                st = Ue.slice(0, dt),
                                Qt = Ue.slice(dt),
                                Yt = Ge.replace(gt, "") + (X || "");
                            F.set_command(st + Yt + Qt), F.set_position((st + Yt).length)
                        }
                        if (Re.length === 1) return P.escape ? Ke(ue, Re[0]) : F.insert(Re[0].replace(Ie, "") + (X || "")), br = F.before_cursor(P.word), !0;
                        if (Re.length > 1)
                            if (++ot >= 2) {
                                if (ot = 0, P.echo) {
                                    if (is_function(P.doubleTab)) {
                                        P.echoCommand && K();
                                        var Ye = P.doubleTab.call(F, V, Re, K);
                                        return typeof Ye > "u" ? !0 : Ye
                                    } else if (P.doubleTab !== !1) {
                                        K();
                                        var be = Re.slice().reverse().join("		");
                                        F.echo($.terminal.escape_brackets(be), {
                                            keepWords: !0,
                                            formatters: !1
                                        })
                                    }
                                    return !0
                                }
                            } else {
                                var Le = common_string(me(V), Re, H);
                                if (Le) return Ke(ue, Le), br = F.before_cursor(P.word), !0
                            }
                    },
                    commands: function() {
                        return at.top().interpreter
                    },
                    set_interpreter: function(k, P) {
                        var H = $.Deferred();

                        function V() {
                            F.pause(ee.softPause), a(k, P, function(X) {
                                F.resume();
                                var ce = at.top();
                                $.extend(ce, X), we(!0), H.resolve()
                            })
                        }
                        return is_function(P) ? F.login(P, !0, V) : get_type(k) === "string" && P ? F.login(o(k, P), !0, V) : V(), H.promise()
                    },
                    greetings: function() {
                        return z(), F
                    },
                    paused: function() {
                        return bt
                    },
                    pause: function(k) {
                        return Cr(function() {
                            $r(), bt = !0, We.disable(k || is_android), k || We.find(".cmd-prompt").hidden(), Ee("onPause")
                        }), F
                    },
                    resume: function(k) {
                        return Cr(function() {
                            bt = !1, xt && terminals.front() === F && We.enable(k), We.find(".cmd-prompt").visible();
                            var H = Ut;
                            Ut = [];
                            for (var V = 0; V < H.length; ++V) F.exec.apply(F, H[V]);
                            F.trigger("resume");
                            var X = ge.shift();
                            X && X(), Ee("onResume") !== !1 && F.scroll_to_bottom()
                        }), F
                    },
                    skip: function() {
                        jt = !0
                    },
                    skip_stop: function() {
                        jt = !1
                    },
                    animating: function() {
                        return ir
                    },
                    cols: function() {
                        return ee.numChars ? ee.numChars : ((!wt || wt === 1e3) && (wt = get_num_chars(F, Mt)), wt)
                    },
                    rows: function() {
                        return ee.numRows ? ee.numRows : (It || (It = get_num_rows(F, Mt)), It)
                    },
                    history: function() {
                        return We.history()
                    },
                    geometry: function() {
                        var k = window.getComputedStyle(F[0]);

                        function P(ue) {
                            return parseInt(k.getPropertyValue("padding-" + ue), 10) || 0
                        }
                        var H = P("left"),
                            V = P("right"),
                            X = P("top"),
                            ce = P("bottom");
                        return {
                            terminal: {
                                padding: {
                                    left: H,
                                    right: V,
                                    top: X,
                                    bottom: ce
                                },
                                width: kr + H + V,
                                height: hr + X + ce
                            },
                            density: Xt,
                            char: Mt,
                            cols: this.cols(),
                            rows: this.rows()
                        }
                    },
                    history_state: function(k) {
                        function P() {
                            ee.historyState = !0, save_state.length ? terminals.length() > 1 && F.save_state(null) : F.save_state()
                        }
                        return k ? typeof window.setImmediate > "u" ? setTimeout(P, 0) : setImmediate(P) : ee.historyState = !1, F
                    },
                    clear_history_state: function() {
                        return hash_commands = [], save_state = [], F
                    },
                    next: function() {
                        if (terminals.length() === 1) return F;
                        terminals.front().disable();
                        var k = terminals.rotate().enable(),
                            P = k.offset().top - 50;
                        $("html,body").animate({
                            scrollTop: P
                        }, 500);
                        try {
                            trigger_terminal_change(k)
                        } catch (H) {
                            i(H, "onTerminalChange")
                        }
                        return k
                    },
                    focus: function(k, P) {
                        return Cr(function() {
                            if (terminals.length() === 1) k === !1 ? F.disable(P) : F.enable(P);
                            else if (k === !1) F.next();
                            else {
                                var V = terminals.front();
                                if (V !== F && (terminals.forEach(function(X) {
                                        X !== F && X.enabled() && X.disable(P)
                                    }), !P)) try {
                                    trigger_terminal_change(F)
                                } catch (X) {
                                    i(X, "onTerminalChange")
                                }
                                terminals.set(F), F.enable(P)
                            }
                        }), F
                    },
                    freeze: function(k) {
                        return Ft(function() {
                            k ? (F.disable(), Jt = !0) : (Jt = !1, F.enable())
                        }), F
                    },
                    frozen: function() {
                        return Jt
                    },
                    enable: function(k) {
                        return !xt && !Jt && (wt === undefined$1 && F.resize(), Cr(function() {
                            var H;
                            !k && !xt && Ee("onFocus"), (!k && H === undefined$1 || k) && (xt = !0, F.paused() || We.enable(!0))
                        })), F
                    },
                    clear_cache: "Map" in root ? function() {
                        return Vt.clear_cache(), A.clear(), We.clear_cache(), F
                    } : function() {
                        return F
                    },
                    disable: function(k) {
                        return Cr(function() {
                            var H;
                            !k && xt && (H = Ee("onBlur")), (!k && H === undefined$1 || k) && (xt = !1, We.disable())
                        }), F
                    },
                    enabled: function() {
                        return xt
                    },
                    signature: function() {
                        for (var k = F.cols(), P = signatures.length; P--;) {
                            var H = signatures[P].map(function(V) {
                                return V.length
                            });
                            if (Math.max.apply(null, H) <= k) return signatures[P].join(`
`) + `
`
                        }
                        return ""
                    },
                    version: function() {
                        return $.terminal.version
                    },
                    cmd: function() {
                        return We
                    },
                    get_command: function() {
                        return We.get()
                    },
                    enter: vr("enter", K),
                    set_command: function(k, P) {
                        return Ft(function() {
                            typeof k != "string" && (k = JSON.stringify(k)), We.set(k, undefined$1, P)
                        }), F
                    },
                    set_position: function(k, P) {
                        return Ft(function() {
                            We.position(k, P)
                        }), F
                    },
                    get_position: function() {
                        return We.position()
                    },
                    insert: function(k, P) {
                        if (typeof k == "string") {
                            var H, V = {
                                stay: !1,
                                typing: !1,
                                delay: 100
                            };
                            is_object(P) || (P = {
                                stay: P
                            }), H = $.extend(V, P);
                            var X = new $.Deferred;
                            return Ft(function() {
                                function ue() {
                                    (ee.scrollOnEcho || me) && F.scroll_to_bottom()
                                }
                                var me = F.is_bottom();
                                if (H.typing) {
                                    var Se = H.delay,
                                        _e = F.typing("insert", Se, k, ee);
                                    _e.then(function() {
                                        ue(), X.resolve()
                                    })
                                } else We.insert(k, ee.stay), ue()
                            }), H.typing ? X.promise() : F
                        } else throw new Error(sprintf(nt().notAString, "insert"))
                    },
                    set_prompt: vr("prompt", function(k) {
                        is_function(k) ? We.prompt(function(P) {
                            return k.call(F, P, F)
                        }) : We.prompt(k)
                    }, function(k) {
                        at.top().prompt = k
                    }),
                    get_prompt: function() {
                        return at.top().prompt
                    },
                    set_mask: function(k) {
                        return Ft(function() {
                            We.mask(k === !0 ? ee.maskChar : k)
                        }), F
                    },
                    get_mask: function() {
                        return We.mask()
                    },
                    get_output: function(k) {
                        return k ? _t.data() : _t.get_snapshot()
                    },
                    resize: function(k, P) {
                        if (!F.is(":visible")) F.stopTime("resize"), F.oneTime(500, "resize", function() {
                            F.resize(k, P)
                        });
                        else {
                            if (k && P && (F.width(k), F.height(P)), k = F.width(), P = F.height(), typeof ee.numChars < "u" || typeof ee.numRows < "u") {
                                typeof ee.numChars < "u" && (We.resize(ee.numChars), F.refresh()), Ee("onResize");
                                return
                            }
                            var H = get_num_chars(F, Mt),
                                V = get_num_rows(F, Mt);
                            if (H !== wt || V !== It) {
                                F.clear_cache();
                                var X = H !== wt;
                                wt = H, It = V, X && (We.resize(wt), F.refresh()), Ee("onResize")
                            }
                        }
                        return F
                    },
                    refresh: function() {
                        return Mt.width !== 0 && css(F[0], {
                            "--char-width": Mt.width,
                            "--pixel-density": Xt
                        }), F.clear_cache(), br && We.resize(), S({
                            scroll: !1,
                            update: !0
                        }), F
                    },
                    flush: function(k) {
                        return k = $.extend({}, {
                            update: !1,
                            scroll: !0
                        }, k || {}), Ft(function() {
                            try {
                                if (Vt.is_empty()) return F;
                                var H = F.is_bottom(),
                                    V = ee.scrollOnEcho && k.scroll || H,
                                    X, ce = !0,
                                    ue = !1,
                                    me = $(),
                                    Se;
                                k.update || (me = F.find(".partial"), Se = _t.get_partial()), Vt.flush(function(Be) {
                                    if (!Be) me.length ? ce && (ce = !1, ue = !0, X = me) : (X = $("<div/>"), Se = []);
                                    else if (is_function(Be.finalize)) {
                                        if (k.update && Be.raw === !0 && Be.newline) return;
                                        if (V && X.find("img").on("load", function() {
                                                F.scroll_to_bottom()
                                            }), k.update) {
                                            _t.update_snapshot(Be.index, Se);
                                            var Ge = "> div[data-index=" + Be.index + "]",
                                                Ue = Tt.find(Ge);
                                            Ue.html() !== X.html() && Ue.replaceWith(X)
                                        } else X.appendTo(Tt), me.length || _t.make_snapshot(Se);
                                        X.attr("data-index", Be.index), ue = !Be.newline, X.toggleClass("partial", ue), ue && (me = X), Be.finalize(X)
                                    } else {
                                        var dt = Be.line,
                                            gt;
                                        typeof Be.raw == "string" && (ue ? Se[Se.length - 1] += Be.raw : Se.push(Be.raw)), ue ? (gt = X.children().last().append(dt), ue = !1) : (gt = $("<div/>").html(dt), Be.newline && gt.addClass("cmd-end-line"), X.append(gt)), gt.css("width", "100%")
                                    }
                                }), me = F.find(".partial");
                                var _e;
                                if (me.length === 0) css(We[0], {
                                    "--prompt-offset": "",
                                    top: ""
                                }), We.__set_prompt_margin(0), _e = F.find(".terminal-output div:last-child div:last-child"), _e.css("display") === "inline-block" && _e.css({
                                    width: "100%",
                                    display: ""
                                });
                                else if (Se.length && Se[Se.length - 1]) {
                                    var Ie = $.terminal.length(Se[Se.length - 1]);
                                    Ie %= F.cols(), _e = me.children().last();
                                    var Re = _e[0].getBoundingClientRect(),
                                        Ke = is_ch_unit_supported ? Ie + "ch" : Ie + "px";
                                    css(We[0], {
                                        top: -Re.height / Xt + "px",
                                        "--prompt-offset": Ke
                                    }), We.__set_prompt_margin(Ie)
                                }
                                L(), Ee("onFlush");
                                var Ye = F.find(".cmd-cursor"),
                                    be = F.find(".cmd").offset(),
                                    Le = F.offset();
                                F.stopTime("flush").oneTime(1, "flush", function() {
                                    css(F[0], {
                                        "--terminal-height": F.height(),
                                        "--terminal-x": be.left - Le.left,
                                        "--terminal-y": be.top - Le.top,
                                        "--terminal-scroll": F.prop("scrollTop")
                                    }), xt && (Ye.hide(), F.oneTime(1, "flush", function() {
                                        Ye.show()
                                    }))
                                }), V && F.scroll_to_bottom()
                            } catch (Be) {
                                if (is_function(ee.exceptionHandler)) try {
                                    ee.exceptionHandler.call(F, Be, "TERMINAL (Flush)")
                                } catch (Ge) {
                                    ee.exceptionHandler = $.noop, alert_exception("[exceptionHandler]", Ge)
                                } else alert_exception("[Flush]", Be)
                            } finally {
                                Vt.clear()
                            }
                        }), F
                    },
                    update: function(k, P, H) {
                        return Ft(function() {
                            if (k < 0 && (k = _t.length() + k), !_t.valid_index(k)) F.error("Invalid line number " + k);
                            else if (P === null) _t.update(k, null), Tt.find("[data-index=" + k + "]").remove();
                            else {
                                if (P = R(P, {
                                        update: !0,
                                        line: k
                                    }), P === !1) return F;
                                unpromise(P, function(X) {
                                    var ce = E(X, H);
                                    ce && (X = ce[0], H = ce[1]), H = _t.update(k, X, H);
                                    var ue = T({
                                        value: X,
                                        index: k,
                                        options: H
                                    });
                                    unpromise(ue, function() {
                                        F.flush({
                                            scroll: !1,
                                            update: !0
                                        })
                                    })
                                })
                            }
                        }), F
                    },
                    remove_line: function(k) {
                        return F.update(k, null)
                    },
                    last_index: function() {
                        return _t.length() - 1
                    },
                    echo: function(k, P, H) {
                        var V = arguments.length > 0,
                            X = H || new $.Deferred;

                        function ce() {
                            Zt = !1;
                            var Ie = Lt;
                            Lt = [];
                            for (var Re = 0; Re < Ie.length; ++Re) F.echo.apply(F, Ie[Re])
                        }

                        function ue(Ie) {
                            ce(), i(Ie, "ECHO", !0)
                        }

                        function me(Ie) {
                            try {
                                var Re = $.extend({
                                    flush: !0,
                                    exec: !0,
                                    raw: ee.raw,
                                    finalize: $.noop,
                                    unmount: $.noop,
                                    delay: ee.execAnimationDelay,
                                    ansi: !1,
                                    typing: !1,
                                    keepWords: !1,
                                    invokeMethods: ee.invokeMethods,
                                    onClear: null,
                                    formatters: !0,
                                    allowedAttributes: ee.allowedAttributes,
                                    newline: !0
                                }, P || {});
                                if (function(Le) {
                                        s(Ie) || (Re.finalize = function(Be) {
                                            Re.raw && Be.addClass("raw"), Re.ansi && Be.addClass("ansi");
                                            try {
                                                is_function(Le) && Le.call(F, Be);
                                                var Ge = Be.find("img"),
                                                    Ue = [],
                                                    dt = Ge.length,
                                                    gt = dt && ee.imagePause;
                                                gt && F.pause(), Ge.each(function() {
                                                    var st = $(this),
                                                        Qt = new Image,
                                                        Yt;
                                                    Qt.onerror = function() {
                                                        st.replaceWith(use_broken_image), Yt && Yt.resolve()
                                                    }, ee.imagePause && (Yt = new $.Deferred, Ue.push(Yt.promise()), st.on("load", function() {
                                                        Yt.resolve()
                                                    })), Qt.src = this.src
                                                }), gt && $.when.apply($, Ue).then(function() {
                                                    F.resume()
                                                })
                                            } catch (st) {
                                                i(st, "USER:echo(finalize)"), Le = null
                                            }
                                        })
                                    }(Re.finalize), Re.flush && (Vt.empty() || F.flush()), Ee("onBeforeEcho", [Ie]) === !1) return;
                                if (Re.typing) {
                                    if (typeof Ie != "string") return X.reject("echo: Typing animation require string or promise that resolve to string");
                                    if (typeof Re.delay != "number" || isNaN(Re.delay)) return X.reject("echo: Invalid argument, delay need to be a number");
                                    var Ke = F.typing("echo", Re.delay, Ie, Re);
                                    Ke.then(function() {
                                        X.resolve()
                                    });
                                    return
                                }
                                var Ye;
                                if (typeof Ie == "function") Ye = Ie.bind(F);
                                else if (typeof Ie > "u") V ? Ye = String(Ie) : Ye = "";
                                else {
                                    var be = R(Ie, {});
                                    if (be === !1) return F;
                                    Ye = be
                                }
                                is_promise(Ye) && (Zt = !0), unpromise(Ye, function(Le) {
                                    if (C(Le, Re)) return F;
                                    var Be = _t.length(),
                                        Ge = _t.has_newline();
                                    Ge || Be--, !Re.newline && Le[Le.length - 1] === `
` && (Le = Le.slice(0, -1), Re.newline = !0);
                                    var Ue = T({
                                        value: Le,
                                        options: Re,
                                        index: Be
                                    });
                                    is_promise(Ue) && (Zt = !0), _t.push([Le, Re]), unpromise(Ue, function() {
                                        Re.flush && (F.flush(), Ee("onAfterEcho", [Ie])), ce()
                                    }, ue)
                                }, ue)
                            } catch (Le) {
                                is_function(ee.exceptionHandler) ? ee.exceptionHandler.call(F, Le, "TERMINAL (echo)") : alert_exception("[Terminal.echo]", Le)
                            }
                        }
                        var Se = P && P.typing;
                        if (Zt) {
                            var _e = [k, P];
                            Se && _e.push(X), Lt.push(_e)
                        } else me(k);
                        return Se ? X.promise() : F
                    },
                    typing: function(k, P, H, V) {
                        var X = new $.Deferred,
                            ce, ue;
                        typeof V == "object" ? (ue = V.finalize || $.noop, ce = $.extend({}, V, {
                            delay: P,
                            finalize: me
                        })) : (ue = V || $.noop, ce = {
                            delay: P,
                            finalize: me
                        });

                        function me() {
                            X.resolve(), is_function(ue) && ue.apply(F, arguments)
                        }
                        var Se = ["prompt", "echo", "enter", "insert"];

                        function _e() {
                            return Se.indexOf(k) >= 0
                        }
                        return Ft(function() {
                            _e() ? k === "prompt" ? $e(H, ce) : k === "echo" ? rr(H, ce) : k === "enter" ? with_prompt(F.get_prompt(), function(Re) {
                                gr(Re, H, ce)
                            }, F) : k === "insert" && with_prompt(F.get_prompt(), function(Re) {
                                Ve(Re, H, ce)
                            }, F) : X.reject("Invalid type only `echo` and `prompt` are supported")
                        }), X.promise()
                    },
                    error: function(k, P) {
                        P = $.extend({}, P, {
                            raw: !1,
                            formatters: !1
                        });

                        function H(V) {
                            typeof V != "string" && (V = String(V));
                            var X = $.terminal.escape_brackets(V).replace(/\\$/, "&#92;").replace(url_re, "]$1[[;;;terminal-error]");
                            return "[[;;;terminal-error]" + X + "]"
                        }
                        return typeof k == "function" ? F.echo(function() {
                            return H(k.call(F))
                        }, P) : k && k.then ? (k.then(function(V) {
                            F.echo(H(V))
                        }).catch(fe("Echo Error")), F) : F.echo(H(k), P)
                    },
                    exception: function(k, P) {
                        var H = exception_message(k);
                        if (P && (H = "&#91;" + P + "&#93;: " + H), H && F.error(H, {
                                finalize: function(ce) {
                                    ce.addClass("terminal-exception terminal-message")
                                },
                                keepWords: !0
                            }), typeof k.fileName == "string" && (F.pause(ee.softPause), $.get(k.fileName, function(ce) {
                                var ue = k.lineNumber - 1,
                                    me = ce.split(`
`)[ue];
                                me && F.error("[" + k.lineNumber + "]: " + me), F.resume()
                            }, "text")), k.stack) {
                            var V = $.terminal.escape_brackets(k.stack),
                                X = V.split(/\n/g).map(function(ce) {
                                    return "[[;;;terminal-error]" + ce.replace(url_re, function(ue) {
                                        return "]" + ue + "[[;;;terminal-error]"
                                    }) + "]"
                                }).join(`
`);
                            F.echo(X, {
                                finalize: function(ce) {
                                    ce.addClass("terminal-exception terminal-stack-trace")
                                },
                                formatters: !1
                            })
                        }
                        return F
                    },
                    scroll: function(k) {
                        var P;
                        return k = Math.round(k), F.prop, k > pt.prop("scrollTop") && k > 0 && pt.prop("scrollTop", 0), P = pt.prop("scrollTop"), pt.scrollTop(P + k), F
                    },
                    logout: function(k) {
                        if (ft) throw new Error(sprintf(nt().notWhileLogin, "logout"));
                        return Ft(function() {
                            if (k) {
                                var H = Nr.pop();
                                F.set_token(undefined$1, !0), F.login.apply(F, H)
                            } else if (at.size() === 1 && F.token()) F.logout(!0);
                            else
                                for (; at.size() > 1;) F.token() ? F.logout(!0).pop().pop() : F.pop()
                        }), F
                    },
                    token: function(k) {
                        return Ot.get(F.prefix_name(k) + "_token")
                    },
                    set_token: function(k, P) {
                        var H = F.prefix_name(P) + "_token";
                        return typeof k > "u" ? Ot.remove(H) : Ot.set(H, k), F
                    },
                    get_token: function(k) {
                        return F.token(k)
                    },
                    login_name: function(k) {
                        return Ot.get(F.prefix_name(k) + "_login")
                    },
                    name: function() {
                        return at.top().name
                    },
                    prefix_name: function(k) {
                        var P = (ee.name ? ee.name + "_" : "") + Ar;
                        if (k && at.size() > 1) {
                            var H = at.map(function(V) {
                                return V.name || ""
                            }).slice(1).join("_");
                            H && (P += "_" + H)
                        }
                        return P
                    },
                    read: function(k, P, H) {
                        var V;
                        if (typeof arguments[1] == "object" ? V = $.extend({
                                typing: !1,
                                delay: ee.execAnimationDelay,
                                success: $.noop,
                                cancel: $.noop
                            }, arguments[1]) : V = {
                                typing: !1,
                                success: P || $.noop,
                                cancel: H || $.noop
                            }, V.typing) {
                            var X = F.get_prompt();
                            return V.typing = !1, F.typing("prompt", V.delay, k).then(function() {
                                return F.set_prompt(X).read(k, V)
                            })
                        }
                        Fr = !0;
                        var ce = jQuery.Deferred(),
                            ue = !1;
                        return F.push(function(me) {
                            ue = !0, ce.resolve(me), is_function(V.success) && V.success(me), F.pop(), ee.history && We.history().enable()
                        }, {
                            name: "read",
                            history: !1,
                            prompt: k || "",
                            onExit: function() {
                                ue || (ce.reject(), is_function(V.cancel) && V.cancel())
                            }
                        }), ee.history && We.history().disable(), is_function(V.onReady) && V.onReady.call(F), ce.promise()
                    },
                    push: function(k, P) {
                        return Cr(function() {
                            P = P || {};
                            var V = {
                                    infiniteLogin: !1
                                },
                                X = $.extend({}, V, P);
                            !X.name && Dt && (X.name = Dt.name), X.prompt === undefined$1 && (X.prompt = (X.name || ">") + " ");
                            var ce = at.top();
                            ce && (ce.mask = We.mask());
                            var ue = bt;

                            function me() {
                                Ee("onPush", [ce, at.top()]), we()
                            }
                            a(k, P.login, function(Se) {
                                if (at.push($.extend({}, Se, X)), X.completion === !0 && ($.isArray(Se.completion) ? at.top().completion = Se.completion : Se.completion || (at.top().completion = !1)), X.login) {
                                    var _e, Ie = get_type(X.login);
                                    Ie === "function" ? (_e = X.infiniteLogin ? $.noop : F.pop, F.login(X.login, X.infiniteLogin, me, _e)) : (get_type(k) === "string" && Ie === "string" || Ie === "boolean") && (_e = X.infiniteLogin ? $.noop : F.pop, F.login(o(k, X.login), X.infiniteLogin, me, _e))
                                } else me();
                                !ue && F.enabled() && F.resume()
                            })
                        }), F
                    },
                    pop: function(k, P) {
                        k !== undefined$1 && K(k);
                        var H = F.token(!0),
                            V;
                        if (at.size() === 1) V = at.top(), ee.login ? (P || Ee("onPop", [V, null]), Z(), Ee("onExit")) : F.error(nt().canExitError);
                        else {
                            H && q();
                            var X = at.pop();
                            if (V = at.top(), we(), F.set_mask(V.mask), P || Ee("onPop", [X, V]), ft && F.get_prompt() !== nt().login + ": " && (ft = !1), is_function(X.onExit)) try {
                                X.onExit.call(F, F)
                            } catch (ce) {
                                X.onExit = $.noop, i(ce, "onExit")
                            }
                        }
                        return F
                    },
                    option: function(k, P) {
                        if (typeof P > "u") {
                            if (typeof k == "string") return ee[k];
                            typeof k == "object" && $.each(k, function(H, V) {
                                ee[H] = V
                            })
                        } else ee[k] = P, k.match(/^num(Chars|Rows)$/) && S();
                        return F
                    },
                    invoke_key: function(k) {
                        return We.invoke_key(k), F
                    },
                    keymap: function(k, P) {
                        if (arguments.length === 0) return We.keymap();
                        if (typeof P > "u") {
                            if (typeof k == "string") return We.keymap(k);
                            $.isPlainObject(k) && (k = $.extend({}, Oe, $.omap(k || {}, function(V, X) {
                                return Oe[V] ? function(ce, ue) {
                                    return X.call(F, ce, function() {
                                        return Oe[V](ce, ue)
                                    })
                                } : X.bind(F)
                            })), We.keymap(null).keymap(k))
                        } else if (typeof P == "function") {
                            var H = k;
                            Oe[H] ? We.keymap(H, function(V, X) {
                                return P.call(F, V, function() {
                                    return Oe[H](V, X)
                                })
                            }) : We.keymap(H, P.bind(F))
                        }
                    },
                    level: function() {
                        return at.size()
                    },
                    reset: function() {
                        return Ft(function() {
                            for (F.clear(); at.size() > 1;) at.pop();
                            Ce()
                        }), F
                    },
                    purge: function() {
                        return Ft(function() {
                            var P = F.prefix_name() + "_",
                                H = Ot.get(P + "interpreters");
                            H && $.each(JSON.parse(H), function(V, X) {
                                Ot.remove(X + "_commands"), Ot.remove(X + "_token"), Ot.remove(X + "_login")
                            }), We.purge(), Ot.remove(P + "interpreters")
                        }), F
                    },
                    destroy: function() {
                        return Ft(function() {
                            We.destroy().remove(), F.resizer("unbind"), F.touch_scroll("unbind"), Wr.resizer("unbind").remove(), jr.resizer("unbind").remove(), $(document).unbind(".terminal_" + F.id()), $(window).unbind(".terminal_" + F.id()), F.unbind("click mousedown mouseup"), F.removeData("terminal").removeClass("terminal").unbind(".terminal"), ee.width && F.css("width", ""), ee.height && F.css("height", ""), $(window).off("blur", j).off("focus", _r), F.find(".terminal-fill, .terminal-font").remove(), F.stopTime(), terminals.remove(Ar), At && (At.unobserve ? At.unobserve(F[0]) : clearInterval(At));
                            var P = F.find(".terminal-scroll-marker");
                            if (Dr && Dr.unobserve(P[0]), P.remove(), nr && nr.disconnect(), terminals.length() || $(window).off("hashchange"), is_mobile && F.off(["touchstart.terminal", "touchmove.terminal", "touchend.terminal"].join(" ")), Tt.remove(), pt.remove(), kt) {
                                var H = $(kt);
                                H.attr("class") === "full-screen-terminal" ? H.removeAttr("class") : H.removeClass("full-screen-terminal"), F.remove()
                            }
                            Rr = !0
                        }), F
                    },
                    scroll_to: function(k) {
                        var P = pt.scrollTop() - F.offset().top + $(k).offset().top;
                        return pt.scrollTop(P), F
                    },
                    scroll_to_bottom: function() {
                        var k;
                        return F.prop ? k = pt.prop("scrollHeight") : k = pt.attr("scrollHeight"), pt.scrollTop(k), F
                    },
                    is_bottom: function() {
                        if (ee.scrollBottomOffset === -1) return !1;
                        if (typeof ur == "boolean") return ur;
                        var k, P, H;
                        k = pt[0].scrollHeight, P = pt[0].scrollTop, H = pt[0].offsetHeight;
                        var V = k - ee.scrollBottomOffset;
                        return P + H > V
                    },
                    duplicate: function() {
                        var k = $(F);
                        return $.extend(k, Ht)
                    },
                    get_output_buffer: function(k) {
                        var P = $.extend({
                                html: !1
                            }, k),
                            H = [],
                            V = !1;
                        return Vt.forEach(function(X) {
                            if (X)
                                if (is_function(X.finalize)) V = !X.newline;
                                else {
                                    var ce;
                                    if (P.html ? ce = X.line : ce = X.raw, V) {
                                        var ue = H.length - 1;
                                        H[ue] += ce
                                    } else H.push(ce)
                                }
                        }), P.html ? H.map(function(X) {
                            return "<div>" + X + "</div>"
                        }).join(`
`) : H.join(`
`)
                    },
                    clear_buffer: function() {
                        return Vt.clear(), F
                    }
                }, function(k, P) {
                    return function() {
                        if (Rr && !ee.exceptionHandler) throw new $.terminal.Exception(nt().defunctTerminal);
                        try {
                            return P.apply(F, [].slice.apply(arguments))
                        } catch (H) {
                            if (k !== "exec" && k !== "resume" && i(H, H.type || "TERMINAL", !0), !ee.exceptionHandler) throw H
                        }
                    }
                });
                if ($.extend(F, Ht), F.length === 0) {
                    var mr = sprintf(nt().invalidSelector);
                    throw new $.terminal.Exception(mr)
                }
                F.data("terminal", F);
                var Lt = [],
                    Zt = !1,
                    Dt, Pt, ot = 0,
                    Tt, Ar = terminals.length(),
                    Fr = !1,
                    wt, It, br, Nr = new Stack,
                    Hr = new DelayQueue,
                    ir = !1,
                    jt = !1,
                    yr = new DelayQueue,
                    Ft = cr(yr),
                    Cr = cr(Hr),
                    ur, Dr, ft = !1,
                    $r = $.noop,
                    kr, hr, Ut = [],
                    ee = $.extend({}, $.terminal.defaults, {
                        name: F.selector,
                        exit: !!(t && t.login || !t)
                    }, t || {});
                typeof ee.width == "number" && F.width(ee.width), typeof ee.height == "number" && F.height(ee.height), delete ee.formatters;
                var Rr = !1,
                    Vt = new FormatBuffer(function(k) {
                        return {
                            linksNoReferrer: ee.linksNoReferrer,
                            linksNoFollow: ee.linksNoFollow,
                            anyLinks: ee.anyLinks,
                            charWidth: Mt.width,
                            useCache: ee.useCache,
                            escape: !1,
                            allowedAttributes: k.allowedAttributes || []
                        }
                    }),
                    _t = new OutputLines(function() {
                        return ee
                    }),
                    Ot = new p(ee.memory),
                    xt = ee.enabled,
                    Jt = !1,
                    bt = !1,
                    qt = !0,
                    at, We, Tr, At, nr;
                ee.ignoreSystemDescribe === !0 && (ee.describe = !1), $(document).bind("ajaxSend.terminal_" + F.id(), function(k, P) {
                    requests.push(P)
                });
                var pt = $('<div class="terminal-scroller"/>').appendTo(F),
                    fr = $('<div class="terminal-wrapper"/>').appendTo(pt);
                $(broken_image).hide().appendTo(fr);
                var Wr = $('<div class="terminal-font">&nbsp;</div>').appendTo(F),
                    jr = $('<div class="terminal-pixel"/>').appendTo(F),
                    dr = $('<div class="terminal-fill"/>').appendTo(pt);
                Tt = $("<div>").addClass("terminal-output").attr("role", "log").appendTo(fr), F.addClass("terminal");
                var Xt = Sr(),
                    Mt = get_char_size(F),
                    wr = !terminal_ready(F);
                ee.login && Ee("onBeforeLogin") === !1 && (qt = !1);
                var zt;
                if (typeof w == "string") zt = w;
                else if (is_array(w)) {
                    for (var Gt = 0, Lr = w.length; Gt < Lr; ++Gt)
                        if (typeof w[Gt] == "string") {
                            zt = w[Gt];
                            break
                        }
                }
                var St;
                is_function(ee.login) ? St = ee.login : zt && (typeof ee.login == "string" || ee.login === !0) && (St = o(zt, ee.login)), terminals.append(F);

                function _r() {
                    Tr && (F.focus(), F.scroll_to_bottom())
                }

                function Sr() {
                    var k = jr[0].getBoundingClientRect();
                    return k.width || 1
                }

                function j() {
                    Tr = xt, F.disable().find(".cmd textarea").trigger("blur", [!0])
                }

                function ne(k) {
                    if (is_function(k) && (k = k()), k && is_function(k.then)) return k.then(ne);
                    if (get_type(k) !== "string")
                        if (is_function(ee.parseObject)) {
                            var P = ee.parseObject(k);
                            get_type(P) === "string" && (k = P)
                        } else is_array(k) ? k = $.terminal.columns(k, F.cols(), ee.tabs) : k = String(k);
                    return k
                }

                function se(k) {
                    if (k.proxy) return k;
                    var P = function(H) {
                        return k.call(F, H, F)
                    };
                    return P.proxy = !0, P
                }

                function xe(k) {
                    k = k.originalEvent;

                    function P(_e, Ie) {
                        return _e.type.indexOf(Ie) !== -1
                    }

                    function H(_e) {
                        F.echo('<img src="' + _e + '"/>', {
                            raw: !0
                        })
                    }

                    function V(_e) {
                        var Ie = window.URL || window.webkitURL;
                        return Ie.createObjectURL(_e)
                    }

                    function X(_e, Ie) {
                        if (Ie) _e instanceof Blob ? H(V(_e)) : typeof _e == "string" && (_e.match(/^(data:|blob:)/) ? H(_e) : F.insert(_e));
                        else {
                            var Re = {
                                target: F
                            };
                            typeof _e == "string" ? Re.text = _e : _e instanceof Blob && (Re.image = V(_e));
                            var Ke = Ee("onPaste", [Re]);
                            if (Ke) {
                                if (is_function(Ke.then || Ke.done)) return (Ke.then || Ke.done).call(Ke, function(Ye) {
                                    X(Ye, !0)
                                });
                                X(Ke, !0)
                            } else Ke !== !1 && X(Re.image || Re.text, !0)
                        }
                    }
                    if (k.clipboardData && F.enabled()) {
                        var ce = k.clipboardData.items;
                        if (ce)
                            for (var ue = 0; ue < ce.length; ue++)
                                if (P(ce[ue], "image") && ee.pasteImage) {
                                    var me = ce[ue].getAsFile();
                                    X(me)
                                } else P(ce[ue], "text/plain") && ce[ue].getAsString(function(_e) {
                                    X(_e.replace(/\r/g, ""))
                                });
                        else if (k.clipboardData.getData) {
                            var Se = k.clipboardData.getData("text/plain");
                            X(Se.replace(/\r/g, ""))
                        }
                        return !1
                    }
                }
                $(document).on("paste.terminal_" + F.id(), xe);
                var Oe = $.extend({}, Pe, $.omap(ee.keymap || {}, function(k, P) {
                    return Pe[k] ? function(H, V) {
                        return P.call(F, H, function() {
                            return Pe[k](H, V)
                        })
                    } : P.bind(F)
                }));
                return a(w, ee.login, function(k) {
                    (ee.completion && typeof ee.completion != "boolean" || !ee.completion) && (k.completion = "settings");
                    var P = ee.prompt;
                    is_function(P) && (P = se(P)), at = new Stack($.extend({}, ee.extra, {
                        name: ee.name,
                        prompt: P,
                        keypress: ee.keypress,
                        keydown: ee.keydown,
                        resize: ee.onResize,
                        greetings: ee.greetings,
                        mousewheel: ee.mousewheel,
                        history: ee.history,
                        keymap: Oe
                    }, k)), We = $("<div/>").appendTo(fr).cmd({
                        tabindex: ee.tabindex,
                        mobileDelete: ee.mobileDelete,
                        mobileIngoreAutoSpace: ee.mobileIngoreAutoSpace,
                        prompt: St ? !1 : P,
                        history: ee.memory ? "memory" : ee.history,
                        historyFilter: ee.historyFilter,
                        historySize: ee.historySize,
                        caseSensitiveSearch: ee.caseSensitiveSearch,
                        onPaste: ee.onPaste,
                        width: "100%",
                        enabled: !1,
                        charWidth: Mt.width,
                        keydown: Xe,
                        keymap: Oe,
                        clickTimeout: ee.clickTimeout,
                        holdTimeout: ee.holdTimeout,
                        holdRepeatTimeout: ee.holdRepeatTimeout,
                        repeatTimeoutKeys: ee.repeatTimeoutKeys,
                        allowedAttributes: ee.allowedAttributes,
                        keypress: ut,
                        tabs: ee.tabs,
                        onPositionChange: function() {
                            var be = [].slice.call(arguments);
                            ze(), Ee("onPositionChange", be)
                        },
                        onCommandChange: function(be) {
                            kr !== dr.width() && F.resizer(), Ee("onCommandChange", [be]), ze()
                        },
                        commands: O
                    });

                    function H(be) {
                        if (!is_mobile && (be = be.originalEvent, be)) {
                            var Le = document.elementFromPoint(be.clientX, be.clientY);
                            !$(Le).closest(".terminal").length && F.enabled() && F.disable()
                        }
                    }
                    F.oneTime(100, function() {
                        $(document).bind("click.terminal_" + F.id(), H).bind("contextmenu.terminal_" + F.id(), H)
                    });
                    var V = $(window);
                    if (document.addEventListener("resume", function() {
                            F.disable()
                        }), is_mobile)(function() {
                        F.addClass("terminal-mobile");
                        var be, Le, Be, Ge = 3,
                            Ue = We.clip(),
                            dt = 200,
                            gt;
                        Ue.$node.off("touchstart.cmd"), F.on("touchstart.terminal", function(st) {
                            if (st = st.originalEvent, window.touch_event = st, st.target.tagName.toLowerCase() !== "a" && !Jt && st.touches.length === 1) {
                                Be = F.enabled();
                                var Qt = st.touches[0];
                                be = {
                                    x: Qt.clientX,
                                    y: Qt.clientY
                                }, gt = setTimeout(function() {
                                    be = null
                                }, dt)
                            }
                        }).on("touchmove.terminal", function(st) {
                            if (st.touches.length === 1 && be) {
                                var Qt = st.touches[0],
                                    Yt = Math.abs(Qt.clientX - be.x),
                                    qr = Math.abs(Qt.clientY - be.y);
                                (Yt > Ge || qr > Ge) && (Le = !0)
                            }
                        }).on("touchend.terminal", function() {
                            be && (clearTimeout(gt), Le || (Be ? (Ue.blur(), F.disable()) : (Ue.focus(), F.focus()))), Le = !1, be = null
                        })
                    })();
                    else {
                        V.on("focus.terminal_" + F.id(), _r).on("blur.terminal_" + F.id(), j);
                        var X;
                        (function() {
                            var be = 0,
                                Le, Be = "click_" + F.id(),
                                Ge = F.find(".cmd textarea");

                            function Ue() {
                                if (Le.is(".terminal") || Le.is(".terminal-wrapper")) {
                                    var st = F.get_command().length;
                                    F.set_position(st)
                                } else Le.closest(".cmd-prompt").length && F.set_position(0);
                                Ge.is(":focus") || Ge.focus(), dt()
                            }

                            function dt() {
                                be = 0, Le = null
                            }
                            var gt = ".terminal-output textarea,.terminal-output input";
                            F.mousedown(function(st) {
                                scrollbar_event(st, dr, Xt) || (Le = $(st.target))
                            }).mouseup(function() {
                                if (X) {
                                    X = !1;
                                    return
                                }
                                if (Le && Le.closest(gt).length) xt && F.disable();
                                else if (get_selected_html() === "" && Le)
                                    if (++be === 1) {
                                        if (!Jt)
                                            if (!xt) F.focus(), F.scroll_to_bottom();
                                            else {
                                                var st = ee.clickTimeout;
                                                F.oneTime(st, Be, Ue);
                                                return
                                            }
                                    } else F.stopTime(Be);
                                dt()
                            }).dblclick(function() {
                                dt(), F.stopTime(Be)
                            })
                        })(),
                        function() {
                            var be = We.clip().$node;

                            function Le(Ge) {
                                return Ge.type === "mousedown" && Ge.buttons === 2 || Ge.type === "contextmenu"
                            }
                            var Be;
                            "oncontextmenu" in window ? Be = "contextmenu.terminal" : Be = "mousedown.terminal", F.on(Be, function(Ge) {
                                if (X = get_selected_html() === "" && Le(Ge) && !Ge.ctrlKey, X) {
                                    var Ue = $(Ge.target);
                                    if (Ue.is("img,value,audio,object,canvas,a")) return;
                                    F.enabled() || F.enable();
                                    var dt = We.offset(),
                                        gt = We[0].getBoundingClientRect(),
                                        st = F.offset(),
                                        Qt = st.top - dt.top,
                                        Yt = Math.max(Ge.pageY - dt.top - 20, Qt),
                                        qr = Ge.pageX - dt.left - 20,
                                        Xr = 4 * 14,
                                        Yr = 5 * 14,
                                        Jr = F[0].getBoundingClientRect(),
                                        _i = dr.outerWidth() * Xt,
                                        Ur = Yt + gt.top + Xr;
                                    Ur = Ur - Jr.height - Jr.top;
                                    var Or = qr + gt.left + Yr;
                                    Or = Or - _i - Jr.left, Ur > 0 && (Xr -= Math.ceil(Ur)), Or > 0 && (Yr -= Math.ceil(Or)), be.attr("style", [style_prop("left", qr, !0), style_prop("top", Yt, !0), style_prop("width", Yr, !0), style_prop("height", Xr, !0)].join(";")), be.is(":focus") || be.focus(), F.stopTime("textarea"), F.oneTime(100, "textarea", function() {
                                        var Qr = {
                                            left: "",
                                            top: "",
                                            width: "",
                                            height: ""
                                        };
                                        if (!is_css_variables_supported) {
                                            var ei = F.find(".cmd .cmd-cursor-line").prevUntil(".cmd-prompt").length;
                                            Qr.top = ei * 14 + "px"
                                        }
                                        be.css(Qr)
                                    }), F.stopTime("selection"), F.everyTime(20, "selection", function() {
                                        be[0].selection !== be[0].value && get_textarea_selection(be[0]) && (clear_textarea_selection(be[0]), select(F.find(".terminal-output")[0], F.find(".cmd div:last-of-type")[0]), F.stopTime("selection"))
                                    })
                                }
                            })
                        }(), F.on("scroll", function() {
                            var be = F.find("textarea"),
                                Le = F[0].getBoundingClientRect(),
                                Be = F[0].scrollHeight,
                                Ge = pt.scrollTop(),
                                Ue = Be - (Ge + Le.height);
                            Ue === 0 ? be.css("top", "") : be.css("top", -Ue)
                        })
                    }
                    F.on("click", "a", function(be) {
                        var Le = $(this);
                        if (Le.closest(".terminal-exception").length) {
                            var Be = Le.attr("href");
                            Be.match(/:[0-9]+$/) && (be.preventDefault(), g(Be, F.cols()))
                        }
                        xt && F.find(".cmd textarea").focus()
                    });

                    function ce() {
                        var be = Mt.width;
                        Mt = get_char_size(F), be !== Mt.width && We.option("charWidth", Mt.width).refresh()
                    }
                    ue();

                    function ue() {
                        if (F.is(":visible")) {
                            var be = dr.width(),
                                Le = dr.height(),
                                Be = Sr();
                            css(F[0], {
                                "--pixel-density": Be
                            }), wr && (wr = !terminal_ready(F), wr || (Mt = get_char_size(F), ce())), (hr !== Le || kr !== be || Xt !== Be) && F.resize(), hr = Le, kr = be, Xt = Be
                        }
                    }

                    function me() {
                        var be = {
                            prefix: "terminal-"
                        };
                        F.resizer("unbind").resizer(ue, be), Wr.resizer("unbind").resizer(function() {
                            ce(), F.resize()
                        }, be), jr.resizer("unbind").resizer(function() {
                            Xt = Sr(), F.resize()
                        }, be)
                    }

                    function Se(be) {
                        ur = be[0].intersectionRatio === 1
                    }

                    function _e() {
                        if (window.IntersectionObserver) {
                            var be = $('<div class="terminal-scroll-marker"/>').appendTo(pt),
                                Le = be;
                            if (ee.scrollBottomOffset !== -1) {
                                var Be = style_prop("height", ee.scrollBottomOffset);
                                Le = $('<div style="' + Be + '"/>').appendTo(be)
                            }
                            Dr = new IntersectionObserver(Se, {
                                root: F[0]
                            }), Dr.observe(Le[0])
                        }
                    }
                    _e(), F.is(":visible") && me();

                    function Ie() {
                        At && (At.unobserve ? At.unobserve(F[0]) : clearInterval(At));
                        var be = F.enabled(),
                            Le = F.is(":visible");
                        be && !Le && F.disable(), Le ? me() : fr.css("visibility", "hidden");

                        function Be() {
                            F.is(":visible") && !Le ? (Le = !0, me(), ce(), ue(), be && F.enable(), fr.css("visibility", "")) : Le && !F.is(":visible") && (Le = !1, be = $.terminal.active() === F && F.enabled(), F.disable(), fr.css("visibility", "hidden"))
                        }
                        window.IntersectionObserver && F.css("position") !== "fixed" ? (At = new IntersectionObserver(Be, {
                            root: null
                        }), At.observe(F[0])) : At = setInterval(Be, 100)
                    }
                    var Re = !!F.closest("body").length,
                        Ke = window.MutationObserver || window.WebKitMutationObserver;
                    Ke && (nr = new Ke(function() {
                        F.closest("body").length ? (Re || (F.scroll_to_bottom(), Ie(), ue()), Re = !0) : Re && (Re = !1)
                    }), nr.observe(document.body, {
                        childList: !0
                    })), Re && Ie(), Hr.resolve(), xt && F.is(":visible") && !is_mobile ? F.focus(undefined$1, !0) : F.disable(), is_function(St) ? F.login(St, !0, Ce) : Ce();

                    function Ye(be, Le) {
                        var Be = terminals.get()[be[0]],
                            Ge = $.Deferred();
                        if (Be && Ar === Be.id()) return be[2] ? bt ? (ge.push(function() {
                            return Be.exec(be[2], Le).done(function() {
                                Be.save_state(be[2], !0, be[1]), Ge.resolve()
                            })
                        }), Ge.promise()) : Be.exec(be[2], Le).done(function() {
                            Be.save_state(be[2], !0, be[1])
                        }) : (Ge.resolve(), Ge.promise())
                    }
                    ee.execHash && location.hash ? setTimeout(function() {
                            try {
                                var be = location.hash.replace(/^#/, "");
                                hash_commands = JSON.parse(decodeURIComponent(be)), be.match(/\[/) || oe(hash_commands);
                                var Le = 0,
                                    Be = {
                                        typing: ee.execAnimation,
                                        delay: ee.execAnimationDelay
                                    };
                                (function Ge() {
                                    var Ue = hash_commands[Le++];
                                    Ue ? Ye(Ue, Be).done(Ge) : change_hash = !0
                                })()
                            } catch {}
                        }) : change_hash = !0,
                        function() {
                            var be = !1;
                            $(document).bind("keydown.terminal_" + F.id(), function(Ue) {
                                Ue.shiftKey && (be = !0)
                            }).bind("keyup.terminal_" + F.id(), function(Ue) {
                                (Ue.shiftKey || Ue.which === 16) && (be = !1)
                            });

                            function Le(Ue, dt) {
                                if (!be) {
                                    var gt = at.top(),
                                        st;
                                    if (is_function(gt.mousewheel) ? st = gt.mousewheel(Ue, dt, F) : is_function(ee.mousewheel) && (st = ee.mousewheel(Ue, dt, F)), st === !0) return;
                                    if ((U() || st === !1) && !Ue.ctrlKey && (Ue.stopPropagation(), Ue.preventDefault()), st === !1) return !1;
                                    dt > 0 ? F.scroll(-40) : F.scroll(40)
                                }
                            }
                            if ($.event.special.mousewheel) pt.on("mousewheel", Le);
                            else {
                                var Be, Ge = document.createElement("div");
                                "onwheel" in Ge ? Be = "wheel" : document.onmousewheel !== undefined$1 ? Be = "mousewheel" : Be = "DOMMouseScroll", Ge = null, F.on(Be, function(Ue) {
                                    var dt;
                                    Be === "mousewheel" ? dt = -1 / 40 * Ue.originalEvent.wheelDelta : dt = Ue.originalEvent.deltaY || Ue.originalEvent.detail, Le(Ue, -dt)
                                })
                            }
                            pt.touch_scroll(function(Ue) {
                                var dt = Ue.current.clientY - Ue.previous.clientY,
                                    gt, st = at.top();
                                if (is_function(st.touchscroll) ? gt = st.touchscroll(Ue, dt, F) : is_function(ee.touchscroll) && (gt = ee.touchscroll(Ue, dt, F)), css(F[0], {
                                        "--terminal-scroll": F.prop("scrollTop")
                                    }), gt !== !0) return !1
                            })
                        }()
                }), F
            }
        })
    }(jquery_terminal)), jquery_terminal.exports
}
var jquery_terminalExports = requireJquery_terminal();
const initTerminalPlugin = getDefaultExportFromCjs(jquery_terminalExports);
var unix_formatting = {
    exports: {}
};
/**@license
 *       __ _____                     ________                              __
 *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /
 *  __ / // // // // // _  // _// // / / // _  // _//     // //  \/ // _ \/ /
 * /  / // // // // // ___// / / // / / // ___// / / / / // // /\  // // / /__
 * \___//____ \\___//____//_/ _\_  / /_//____//_/ /_/ /_//_//_/ /_/ \__\_\___/
 *           \/              /____/
 * http://terminal.jcubic.pl
 *
 * This is example of how to create custom formatter for jQuery Terminal
 *
 * Copyright (c) 2014-2021 Jakub Jankiewicz <https://jcubic.pl/me>
 * Released under the MIT license
 *
 * Includes: node-ansiparser, MIT license, Copyright (c) 2014 Joerg Breitbart
 *
 * Last Update in jQuery Terminal 2.23.0
 *
 */
(function(w) {
    (function(t) {
        var p;
        if (typeof window < "u") p = window;
        else if (typeof self < "u") p = self;
        else if (typeof commonjsGlobal < "u") p = commonjsGlobal;
        else throw new Error("Unknow context");
        w.exports ? w.exports = function(f, R) {
            return R === void 0 && (typeof window < "u" ? R = jqueryExports : R = jqueryExports(f)), R.fn.terminal || (typeof window < "u" ? requireJquery_terminal() : requireJquery_terminal()(R)), t(R), R
        } : t(p.jQuery)
    })(function(t) {
        var p = function() {
            function u(i, l) {
                for (var b = l - i, A = new Array(b); b--;) A[b] = --l;
                return A
            }

            function _(i, l, b, A, n) {
                i[b << 8 | l] = (A | 0) << 4 | (n === void 0 ? b : n)
            }

            function v(i, l, b, A, n) {
                for (var T = 0; T < l.length; T++) _(i, l[T], b, A, n)
            }
            var D = u(32, 127),
                d = u(0, 24);
            d.push(25), d.push(30), d.concat(u(28, 32));
            var a = function() {
                for (var i = new Uint8Array(4095), l = 0; l < 14; ++l)
                    for (var b = 0; b < 160; ++b) i[l << 8 | b] = 16;
                for (v(i, D, 0, 2), l = 0; l < 14; ++l) v(i, [24, 26, 153, 154], l, 3, 0), v(i, u(128, 144), l, 3, 0), v(i, u(144, 152), l, 3, 0), _(i, 156, l, 0, 0), _(i, 27, l, 11, 1), _(i, 157, l, 4, 8), v(i, [152, 158, 159], l, 0, 7), _(i, 155, l, 11, 3), _(i, 144, l, 11, 9);
                return v(i, d, 0, 3), v(i, d, 1, 3), _(i, 127, 1), v(i, d, 8), v(i, d, 3, 3), _(i, 127, 3), v(i, d, 4, 3), _(i, 127, 4), v(i, d, 6, 3), v(i, d, 5, 3), _(i, 127, 5), v(i, d, 2, 3), _(i, 127, 2), _(i, 93, 1, 4, 8), v(i, D, 8, 5), _(i, 127, 8, 5), v(i, [156, 27, 24, 26, 7], 8, 6, 0), v(i, u(28, 32), 8, 0), v(i, [88, 94, 95], 1, 0, 7), v(i, D, 7), v(i, d, 7), _(i, 156, 7, 0, 0), _(i, 91, 1, 11, 3), v(i, u(64, 127), 3, 7, 0), v(i, u(48, 58), 3, 8, 4), _(i, 59, 3, 8, 4), v(i, [60, 61, 62, 63], 3, 9, 4), v(i, u(48, 58), 4, 8), _(i, 59, 4, 8), v(i, u(64, 127), 4, 7, 0), v(i, [58, 60, 61, 62, 63], 4, 0, 6), v(i, u(32, 64), 6), _(i, 127, 6), v(i, u(64, 127), 6, 0, 0), _(i, 58, 3, 0, 6), v(i, u(32, 48), 3, 9, 5), v(i, u(32, 48), 5, 9), v(i, u(48, 64), 5, 0, 6), v(i, u(64, 127), 5, 7, 0), v(i, u(32, 48), 4, 9, 5), v(i, u(32, 48), 1, 9, 2), v(i, u(32, 48), 2, 9), v(i, u(48, 127), 2, 10, 0), v(i, u(48, 80), 1, 10, 0), v(i, [81, 82, 83, 84, 85, 86, 87, 89, 90, 92], 1, 10, 0), v(i, u(96, 127), 1, 10, 0), _(i, 80, 1, 11, 9), v(i, d, 9), _(i, 127, 9), v(i, u(28, 32), 9), v(i, u(32, 48), 9, 9, 12), _(i, 58, 9, 0, 11), v(i, u(48, 58), 9, 8, 10), _(i, 59, 9, 8, 10), v(i, [60, 61, 62, 63], 9, 9, 10), v(i, d, 11), v(i, u(32, 128), 11), v(i, u(28, 32), 11), v(i, d, 10), _(i, 127, 10), v(i, u(28, 32), 10), v(i, u(48, 58), 10, 8), _(i, 59, 10, 8), v(i, [58, 60, 61, 62, 63], 10, 0, 11), v(i, u(32, 48), 10, 9, 12), v(i, d, 12), _(i, 127, 12), v(i, u(28, 32), 12), v(i, u(32, 48), 12, 9), v(i, u(48, 64), 12, 0, 11), v(i, u(64, 127), 12, 12, 13), v(i, u(64, 127), 10, 12, 13), v(i, u(64, 127), 9, 12, 13), v(i, d, 13, 13), v(i, D, 13, 13), _(i, 127, 13), v(i, [27, 156], 13, 14, 0), i
            }();

            function o(i) {
                this.initial_state = 0, this.current_state = this.initial_state | 0, this.transitions = new Uint8Array(4095), this.transitions.set(a), this.osc = "", this.params = [0], this.collected = "", this.term = i || {};
                for (var l = ["inst_p", "inst_o", "inst_x", "inst_c", "inst_e", "inst_H", "inst_P", "inst_U", "inst_E"], b = 0; b < l.length; ++b) l[b] in this.term || (this.term[l[b]] = function() {})
            }
            return o.prototype.reset = function() {
                this.current_state = this.initial_state | 0, this.osc = "", this.params = [0], this.collected = ""
            }, o.prototype.parse = function(i) {
                for (var l = 0, b = 0, A = !1, n = this.current_state | 0, T = -1, S = -1, L = this.osc, z = this.collected, G = this.params, K = 0, U = i.length | 0; K < U; ++K) {
                    if (l = i.charCodeAt(K) | 0, n === 0 && l > 31 && l < 128) {
                        T = T + 1 ? T | 0 : K | 0;
                        continue
                    }
                    switch (b = (l < 160 ? this.transitions[n << 8 | l | 0] | 0 : 16) | 0, b >> 4 | 0) {
                        case 2:
                            T = T + 1 ? T | 0 : K | 0;
                            break;
                        case 3:
                            T + 1 && (this.term.inst_p(i.substring(T, K)), T = -1), this.term.inst_x(String.fromCharCode(l));
                            break;
                        case 0:
                            T + 1 ? (this.term.inst_p(i.substring(T, K)), T = -1) : S + 1 && (this.term.inst_P(i.substring(S, K)), S = -1);
                            break;
                        case 1:
                            if (l > 159) switch (n) {
                                case 0:
                                    T = T + 1 ? T | 0 : K | 0;
                                    break;
                                case 8:
                                    L += String.fromCharCode(l), b = b | 8 | 0;
                                    break;
                                case 6:
                                    b = b | 6 | 0;
                                    break;
                                case 11:
                                    b = b | 11 | 0;
                                    break;
                                case 13:
                                    S + 1 || (S = K | 0), b = b | 13 | 0;
                                    break;
                                default:
                                    A = !0
                            } else A = !0;
                            if (A) {
                                if (this.term.inst_E({
                                        pos: K,
                                        character: String.fromCharCode(l),
                                        state: n,
                                        print: T,
                                        dcs: S,
                                        osc: L,
                                        collect: z,
                                        params: G
                                    })) return;
                                A = !1
                            }
                            break;
                        case 7:
                            this.term.inst_c(z, G, String.fromCharCode(l));
                            break;
                        case 8:
                            l === 59 ? G.push(0) : G[G.length - 1] = G[G.length - 1] * 10 + l - 48 | 0;
                            break;
                        case 9:
                            z += String.fromCharCode(l);
                            break;
                        case 10:
                            this.term.inst_e(z, String.fromCharCode(l));
                            break;
                        case 11:
                            T + 1 && (this.term.inst_p(i.substring(T, K)), T = -1), L = "", G = [0], z = "", S = -1;
                            break;
                        case 12:
                            this.term.inst_H(z, G, String.fromCharCode(l));
                            break;
                        case 13:
                            S + 1 || (S = K | 0);
                            break;
                        case 14:
                            S + 1 && this.term.inst_P(i.substring(S, K)), this.term.inst_U(), l === 27 && (b = b | 1 | 0), L = "", G = [0], z = "", S = -1;
                            break;
                        case 4:
                            ~T && (this.term.inst_p(i.substring(T, K)), T = -1), L = "";
                            break;
                        case 5:
                            L += i.charAt(K);
                            break;
                        case 6:
                            L && l !== 24 && l !== 26 && this.term.inst_o(L), l === 27 && (b = b | 1 | 0), L = "", G = [0], z = "", S = -1;
                            break
                    }
                    n = b & 15 | 0
                }!n && T + 1 ? this.term.inst_p(i.substring(T)) : n === 13 && S + 1 && this.term.inst_P(i.substring(S)), this.osc = L, this.collected = z, this.params = G, this.current_state = n | 0
            }, o
        }();
        t.terminal.AnsiParser = p;
        var f = "[^\\x08]|[\\r\\n]{2}|&[^;]+;",
            R = new RegExp("^(" + f + ")?\\x08"),
            E = new RegExp("^(?:(" + f + ")?\\x08(_|\\1)|(_)\\x08(" + f + "))"),
            C = /^(\r\n|\n\r|\r|\n)/,
            r = /[^\r\n]+\r\x1B\[K/g;

        function s(u) {
            return t.terminal.length(u)
        }

        function c(u) {
            var _ = {
                escapeBrackets: !1,
                ansiParser: {},
                position: 0,
                ansiArt: !1
            };
            return u && (u.unixFormatting && (_ = t.extend({
                escapeBrackets: !1,
                ansiParser: {},
                ansiArt: !1
            }, _, u.unixFormatting)), "position" in u && (_.position = u.position), "unixFormattingEscapeBrackets" in u && (_.escapeBrackets = u.unixFormattingEscapeBrackets), "ansiParser" in u && (_.ansiParser = t.extend(_.ansiParser, u.ansiParser))), _
        }
        t.terminal.overtyping = function(_, v) {
            _ = t.terminal.unescape_brackets(_);
            var D = c(v),
                d = [],
                a, o = 0,
                i = [];

            function l(T, S) {
                var L = "",
                    z = 0,
                    G;
                o = 0;

                function K(q, re, we) {
                    if (q < S) {
                        var Ee = q + s(re);
                        Ee < S ? a = Math.max(0, a + s(we) - s(re)) : a += s(we) - (S - q)
                    }
                }
                for (var U = 0; U < T.length; ++U) {
                    var te = T.substring(U),
                        fe = te.match(R),
                        ye = d[0];
                    if (fe) return fe[1] && (G = U - fe[1].length + z, d.push({
                        index: G,
                        string: fe[1],
                        overtyping: te.match(E)
                    }), K(G, fe[0], "")), o < 0 && (o = 0), i = i.map(function(q) {
                        return q - 1
                    }), i.push(G), L + te.replace(R, "");
                    if (te.match(C)) {
                        if (d.length) {
                            var Fe = d;
                            d = [], Fe.reverse().forEach(function(q) {
                                U > q.index ? --o <= 0 && (K(q.index, "", q.string), L += q.string) : d.unshift(q)
                            })
                        }
                        var ge = te.match(C);
                        L += ge[1], U += ge[1].length - 1
                    } else {
                        if (i.length) {
                            var O = i[0];
                            U === O && i.shift(), U >= O && o++
                        }
                        if (d.length && U > ye.index && ye.overtyping) {
                            if (d.shift(), K(ye.index, "", ye.string), z++, ye.string === T[U]) {
                                L += T[U] + "￱";
                                continue
                            } else if (ye.string === "_" || T[U] === "_") {
                                var Z;
                                ye.string === "_" ? Z = T[U] : Z = ye.string, L += Z + "￲";
                                continue
                            }
                        }
                        L += T[U]
                    }
                }
                return L
            }
            var b = !1;
            a = D.position;
            var A = t.terminal.tracking_replace(_, r, "", a);
            for (_ = A[0], a = A[1];
                (_.match(/\x08/) || d.length) && (_ = l(_, a), !b);) _.match(/\x08/) || (b = !0);

            function n(T, S, L) {
                var z = new RegExp("((:?." + S + ")+)", "g");
                return T.replace(z, function(G, K) {
                    var U = new RegExp(S, "g");
                    return "[[" + L + "]" + K.replace(U, "") + "]"
                })
            }
            return _ = n(_, "￱", "b;#fff;"), _ = n(_, "￲", "u;;"), D.escapeBrackets && (_ = t.terminal.escape_brackets(_)), v && typeof v.position == "number" ? [_, a] : _
        };
        var g = {};
        g[0] = {
            "`": "◆",
            a: "▒",
            b: "␉",
            c: "␌",
            d: "␍",
            e: "␊",
            f: "°",
            g: "±",
            h: "␤",
            i: "␋",
            j: "┘",
            k: "┐",
            l: "┌",
            m: "└",
            n: "┼",
            o: "⎺",
            p: "⎻",
            q: "─",
            r: "⎼",
            s: "⎽",
            t: "├",
            u: "┤",
            v: "┴",
            w: "┬",
            x: "│",
            y: "≤",
            z: "≥",
            "{": "π",
            "|": "≠",
            "}": "£",
            "~": "·"
        }, g.A = {
            "#": "£"
        }, g.B = null, g[4] = {
            "#": "£",
            "@": "¾",
            "[": "ij",
            "\\": "½",
            "]": "|",
            "{": "¨",
            "|": "f",
            "}": "¼",
            "~": "´"
        }, g.C = g[5] = {
            "[": "Ä",
            "\\": "Ö",
            "]": "Å",
            "^": "Ü",
            "`": "é",
            "{": "ä",
            "|": "ö",
            "}": "å",
            "~": "ü"
        }, g.R = {
            "#": "£",
            "@": "à",
            "[": "°",
            "\\": "ç",
            "]": "§",
            "{": "é",
            "|": "ù",
            "}": "è",
            "~": "¨"
        }, g.Q = {
            "@": "à",
            "[": "â",
            "\\": "ç",
            "]": "ê",
            "^": "î",
            "`": "ô",
            "{": "é",
            "|": "ù",
            "}": "è",
            "~": "û"
        }, g.K = {
            "@": "§",
            "[": "Ä",
            "\\": "Ö",
            "]": "Ü",
            "{": "ä",
            "|": "ö",
            "}": "ü",
            "~": "ß"
        }, g.Y = {
            "#": "£",
            "@": "§",
            "[": "°",
            "\\": "ç",
            "]": "é",
            "`": "ù",
            "{": "à",
            "|": "ò",
            "}": "è",
            "~": "ì"
        }, g.E = g[6] = {
            "@": "Ä",
            "[": "Æ",
            "\\": "Ø",
            "]": "Å",
            "^": "Ü",
            "`": "ä",
            "{": "æ",
            "|": "ø",
            "}": "å",
            "~": "ü"
        }, g.Z = {
            "#": "£",
            "@": "§",
            "[": "¡",
            "\\": "Ñ",
            "]": "¿",
            "{": "°",
            "|": "ñ",
            "}": "ç"
        }, g.H = g[7] = {
            "@": "É",
            "[": "Ä",
            "\\": "Ö",
            "]": "Å",
            "^": "Ü",
            "`": "é",
            "{": "ä",
            "|": "ö",
            "}": "å",
            "~": "ü"
        }, g["="] = {
            "#": "ù",
            "@": "à",
            "[": "é",
            "\\": "ç",
            "]": "ê",
            "^": "î",
            _: "è",
            "`": "ô",
            "{": "ä",
            "|": "ö",
            "}": "ü",
            "~": "û"
        }, t.terminal.ansi_colors = {
            normal: {
                black: "#000",
                red: "#A00",
                green: "#008400",
                yellow: "#A50",
                blue: "#00A",
                magenta: "#A0A",
                cyan: "#0AA",
                white: "#AAA"
            },
            faited: {
                black: "#000",
                red: "#640000",
                green: "#006100",
                yellow: "#737300",
                blue: "#000087",
                magenta: "#650065",
                cyan: "#008787",
                white: "#818181"
            },
            bold: {
                black: "#555",
                red: "#F55",
                green: "#44D544",
                yellow: "#FF5",
                blue: "#55F",
                magenta: "#F5F",
                cyan: "#5FF",
                white: "#FFF"
            },
            palette: ["#000000", "#AA0000", "#00AA00", "#AA5500", "#0000AA", "#AA00AA", "#00AAAA", "#AAAAAA", "#555555", "#FF5555", "#55FF55", "#FFFF55", "#5555FF", "#FF55FF", "#55FFFF", "#FFFFFF", "#000000", "#00005F", "#000087", "#0000AF", "#0000D7", "#0000FF", "#005F00", "#005F5F", "#005F87", "#005FAF", "#005FD7", "#005FFF", "#008700", "#00875F", "#008787", "#0087AF", "#0087D7", "#0087FF", "#00AF00", "#00AF5F", "#00AF87", "#00AFAF", "#00AFD7", "#00AFFF", "#00D700", "#00D75F", "#00D787", "#00D7AF", "#00D7D7", "#00D7FF", "#00FF00", "#00FF5F", "#00FF87", "#00FFAF", "#00FFD7", "#00FFFF", "#5F0000", "#5F005F", "#5F0087", "#5F00AF", "#5F00D7", "#5F00FF", "#5F5F00", "#5F5F5F", "#5F5F87", "#5F5FAF", "#5F5FD7", "#5F5FFF", "#5F8700", "#5F875F", "#5F8787", "#5F87AF", "#5F87D7", "#5F87FF", "#5FAF00", "#5FAF5F", "#5FAF87", "#5FAFAF", "#5FAFD7", "#5FAFFF", "#5FD700", "#5FD75F", "#5FD787", "#5FD7AF", "#5FD7D7", "#5FD7FF", "#5FFF00", "#5FFF5F", "#5FFF87", "#5FFFAF", "#5FFFD7", "#5FFFFF", "#870000", "#87005F", "#870087", "#8700AF", "#8700D7", "#8700FF", "#875F00", "#875F5F", "#875F87", "#875FAF", "#875FD7", "#875FFF", "#878700", "#87875F", "#878787", "#8787AF", "#8787D7", "#8787FF", "#87AF00", "#87AF5F", "#87AF87", "#87AFAF", "#87AFD7", "#87AFFF", "#87D700", "#87D75F", "#87D787", "#87D7AF", "#87D7D7", "#87D7FF", "#87FF00", "#87FF5F", "#87FF87", "#87FFAF", "#87FFD7", "#87FFFF", "#AF0000", "#AF005F", "#AF0087", "#AF00AF", "#AF00D7", "#AF00FF", "#AF5F00", "#AF5F5F", "#AF5F87", "#AF5FAF", "#AF5FD7", "#AF5FFF", "#AF8700", "#AF875F", "#AF8787", "#AF87AF", "#AF87D7", "#AF87FF", "#AFAF00", "#AFAF5F", "#AFAF87", "#AFAFAF", "#AFAFD7", "#AFAFFF", "#AFD700", "#AFD75F", "#AFD787", "#AFD7AF", "#AFD7D7", "#AFD7FF", "#AFFF00", "#AFFF5F", "#AFFF87", "#AFFFAF", "#AFFFD7", "#AFFFFF", "#D70000", "#D7005F", "#D70087", "#D700AF", "#D700D7", "#D700FF", "#D75F00", "#D75F5F", "#D75F87", "#D75FAF", "#D75FD7", "#D75FFF", "#D78700", "#D7875F", "#D78787", "#D787AF", "#D787D7", "#D787FF", "#D7AF00", "#D7AF5F", "#D7AF87", "#D7AFAF", "#D7AFD7", "#D7AFFF", "#D7D700", "#D7D75F", "#D7D787", "#D7D7AF", "#D7D7D7", "#D7D7FF", "#D7FF00", "#D7FF5F", "#D7FF87", "#D7FFAF", "#D7FFD7", "#D7FFFF", "#FF0000", "#FF005F", "#FF0087", "#FF00AF", "#FF00D7", "#FF00FF", "#FF5F00", "#FF5F5F", "#FF5F87", "#FF5FAF", "#FF5FD7", "#FF5FFF", "#FF8700", "#FF875F", "#FF8787", "#FF87AF", "#FF87D7", "#FF87FF", "#FFAF00", "#FFAF5F", "#FFAF87", "#FFAFAF", "#FFAFD7", "#FFAFFF", "#FFD700", "#FFD75F", "#FFD787", "#FFD7AF", "#FFD7D7", "#FFD7FF", "#FFFF00", "#FFFF5F", "#FFFF87", "#FFFFAF", "#FFFFD7", "#FFFFFF", "#080808", "#121212", "#1C1C1C", "#262626", "#303030", "#3A3A3A", "#444444", "#4E4E4E", "#585858", "#626262", "#6C6C6C", "#767676", "#808080", "#8A8A8A", "#949494", "#9E9E9E", "#A8A8A8", "#B2B2B2", "#BCBCBC", "#C6C6C6", "#D0D0D0", "#DADADA", "#E4E4E4", "#EEEEEE"]
        }, t.terminal.from_ansi = function() {
            var u = {
                    30: "black",
                    31: "red",
                    32: "green",
                    33: "yellow",
                    34: "blue",
                    35: "magenta",
                    36: "cyan",
                    37: "white",
                    39: "inherit"
                },
                _ = {
                    40: "black",
                    41: "red",
                    42: "green",
                    43: "yellow",
                    44: "blue",
                    45: "magenta",
                    46: "cyan",
                    47: "white",
                    49: "transparent"
                };

            function v(D, d, a) {
                var o, i = [],
                    l, b, A = -1,
                    n = !1,
                    T = !1,
                    S = !1,
                    L = t.terminal.ansi_colors.palette;

                function z(Z) {
                    switch (Z) {
                        case 0:
                            Object.keys(d).forEach(function(q) {
                                delete d[q]
                            }), d.blink = !1, d.bold = !1, d.faited = !1;
                            break;
                        case 1:
                            i.push("b"), d.bold = !0, d.faited = !1;
                            break;
                        case 4:
                            i.push("u");
                            break;
                        case 3:
                            i.push("i");
                            break;
                        case 5:
                            n || T ? S = !0 : d.blink = !0;
                            break;
                        case 38:
                            n = !0;
                            break;
                        case 48:
                            T = !0;
                            break;
                        case 2:
                            n || T ? A = 0 : (d.faited = !0, d.bold = !1);
                            break;
                        case 7:
                            d.reverse = !0;
                            break;
                        default:
                            u[Z] && (l = u[Z]), _[Z] && (b = _[Z])
                    }
                }

                function G() {
                    n && (l || (l = "#"), l.length < 7 && (l += ("0" + o.toString(16)).slice(-2))), T && (b || (b = "#"), b.length < 7 && (b += ("0" + o.toString(16)).slice(-2))), A === 2 ? A = -1 : A++
                }

                function K() {
                    return S && (T && !b || n && !l)
                }

                function U() {
                    n && L[o] && !l && (l = L[o]), T && L[o] && !b && (b = L[o]), S = !1
                }
                for (var te in D) D.hasOwnProperty(te) && (o = parseInt(D[te], 10), A > -1 ? G() : K() ? U() : z(o));
                if (d.reverse)
                    if (l || b) {
                        var fe = b;
                        b = l, l = fe
                    } else l = "black", b = "white";
                l = l || d.color, b = b || d.background;
                var ye, Fe, ge;
                d.bold ? ye = t.terminal.ansi_colors.bold : d.faited ? ye = t.terminal.ansi_colors.faited : ye = t.terminal.ansi_colors.normal, typeof l < "u" ? (l.match(/^#/) || l === "inherit" ? Fe = l : Fe = ye[l], d.color = l) : Fe = ye.white, typeof b < "u" ? (b.match(/^#/) || b === "transparent" ? ge = b : d.blink && a ? ge = t.terminal.ansi_colors.bold[b] : ge = t.terminal.ansi_colors.normal[b], d.background = b) : d.blink && a && (ge = t.terminal.ansi_colors.bold.black);
                var O = [i.join(""), Fe, ge];
                return d.blink && !a && O.push("terminal-blink"), O
            }
            return function(d, a) {
                a = a || {};
                var o = c(a),
                    i = o.ansiArt;
                d = d.replace(/\x1A.*/, ""), d = d.replace(/\r?\n?\x1b\[A\x1b\[[0-9]+C/g, ""), d = t.terminal.unescape_brackets(d);
                var l, b, A, n, T, S = function(O) {
                        var Z = O.length;
                        o.escapeBrackets && (O = t.terminal.escape_formatting(O)), n && (O = O.split("").map(function(W) {
                            return n[W] || W
                        }).join("")), A && (O.match(/\\$|[[\]]/) && !o.escapeBrackets && !t.terminal.have_formatting(O) && (O = t.terminal.escape_formatting(O)), O = A + O + "]");
                        var q = this.result[this.cursor.y],
                            re, we, Ee, je;
                        if (q) {
                            var oe = t.terminal.strip(q);
                            je = t.terminal.unescape_brackets(oe).length, this.cursor.x === 0 ? (we = t.terminal.substring(q, Z), this.result[this.cursor.y] = O + we) : je < this.cursor.x ? (re = this.cursor.x - (je - 1), this.result[this.cursor.y] += new Array(re).join(" ") + O) : je === this.cursor.x ? this.result[this.cursor.y] += O : (Ee = t.terminal.substring(q, 0, this.cursor.x), we = t.terminal.substring(q, this.cursor.x + Z), this.result[this.cursor.y] = Ee + O + we)
                        } else if (this.cursor.x > 0) {
                            var ze = new Array(this.cursor.x + 1).join(" ");
                            this.result[this.cursor.y] = ze + O
                        } else this.result[this.cursor.y] = O;
                        this.cursor.x += Z
                    },
                    L = !!d.match(/\x0D/),
                    z = t.terminal.active(),
                    G = z && z.rows() || 1e3,
                    K = z && z.cols() || 80,
                    U = {
                        0: " ",
                        1: "☺",
                        2: "☻",
                        3: "♥",
                        7: "•",
                        8: "█",
                        15: "*",
                        16: "█",
                        17: "◄",
                        18: "↕",
                        20: "¶",
                        21: "§",
                        22: "▬",
                        23: "↨",
                        24: "↑",
                        25: "↓",
                        30: "▲"
                    },
                    te = "qwertyuiopasdfghjklzxcvbnm",
                    fe = {
                        cursor: {
                            x: 0,
                            y: 0
                        },
                        result: [],
                        state: {},
                        inst_p: S,
                        inst_x: function(ge) {
                            var O = ge.charCodeAt(0);
                            if (O === 13) this.cursor.x = 0;
                            else if (O === 10) this.cursor.y++, L || (this.cursor.x = 0);
                            else if (O === 9) S.call(this, "	");
                            else if (i && O in U) console.log({
                                code: "0x" + O.toString(16)
                            }), S.call(this, U[O]);
                            else {
                                var Z = O % te.length,
                                    q = te[Z];
                                console.log({
                                    code: O,
                                    char: q
                                }), S.call(this, q)
                            }
                            this.result[this.cursor.y] || (this.result[this.cursor.y] = "")
                        },
                        inst_e: function(ge, O) {
                            ge === "(" && O in g && (n = g[O])
                        },
                        inst_E: function(ge) {
                            console.log(ge)
                        },
                        inst_c: function(ge, O, Z) {
                            var q = O[0] === 0 ? 1 : O[0];
                            switch (Z) {
                                case "s":
                                    T = Object.assign({}, this.cursor);
                                    break;
                                case "u":
                                    this.cursor = T;
                                    break;
                                case "A":
                                    this.cursor.y -= q;
                                    break;
                                case "B":
                                    this.cursor.y += q;
                                    break;
                                case "C":
                                    this.cursor.x += q;
                                    break;
                                case "D":
                                    this.cursor.x -= q;
                                    break;
                                case "E":
                                    this.cursor.x = 0, this.cursor.y += q;
                                    break;
                                case "F":
                                    this.cursor.x = 0, this.cursor.y -= q;
                                    break;
                                case "H":
                                    this.cursor.y = Math.min(O[0] || 1, G) - 1, this.cursor.x = Math.min(O[1] || 1, K) - 1;
                                    break;
                                case "m":
                                    l = v(O, this.state, i);
                                    var re = O.length === 1 && O[0] === 0;
                                    b ? re ? (b = !1, A = null) : A = "[[" + l.join(";") + "]" : re ? A = null : (A = "[[" + l.join(";") + "]", b = !0);
                                    break
                            }
                            this.cursor.x < 0 && (this.cursor.x = 0), this.cursor.y < 0 && (this.cursor.y = 0)
                        }
                    };
                Object.keys(o.ansiParser).forEach(function(ge) {
                    var O = fe[ge],
                        Z = o.ansiParser[ge];
                    fe[ge] = O ? function() {
                        if (Z.apply(fe, arguments) !== !1) return O.apply(fe, arguments)
                    } : function() {
                        return Z.apply(fe, arguments)
                    }, o.ansiParser[ge] = fe[ge]
                });
                var ye = new p(fe);
                ye.parse(d);
                var Fe = fe.result.join(`
`);
                return d !== Fe ? Fe : typeof a < "u" && typeof a.position == "number" ? [d, a.position] : d
            }
        }(), t.terminal.from_ansi.__no_warn__ = !0, t.terminal.defaults.formatters.unshift(t.terminal.from_ansi), t.terminal.defaults.formatters.unshift(t.terminal.overtyping)
    })
})(unix_formatting);
var unix_formattingExports = unix_formatting.exports;
const initUnixFormatting = getDefaultExportFromCjs(unix_formattingExports),
    stdlib_compat = "data:application/octet-stream;base64,IyBIQUNLOiB0cmljayBidW5kbGVyIHRvIHRoaW5rIHRoYXQgd2UgYXJlIHN1cHBvcnRpbmcgaHR0cHMKbW9kdWxlIE9wZW5TU0wKICBtb2R1bGUgU1NMCiAgICBWRVJJRllfUEVFUiA9IDAKICAgIGNsYXNzIFNTTEVycm9yIDwgU3RhbmRhcmRFcnJvcjsgZW5kCiAgZW5kCmVuZAoKY2xhc3MgU29ja2V0CiAgY2xhc3MgPDwgc2VsZgogICAgZGVmIG1ldGhvZF9taXNzaW5nKHN5bSwgKikgPSBuaWwKICBlbmQKZW5kCgpjbGFzcyBTb2NrZXRFcnJvcjsgZW5kCgpkZWYgRGlyLmhvbWUgPSAiL2hvbWUvbWUiCgptb2R1bGUgV2luc2l6ZQogIGRlZiB3aW5zaXplCiAgICBbSlMuZ2xvYmFsWzp0ZXJtXVs6cm93c10udG9faSwgSlMuZ2xvYmFsWzp0ZXJtXVs6Y29sc10udG9faV0KICBlbmQKZW5kCgpjbGFzcyBJTwogICMgTk9URTogJHN0ZG91dCBhbHNvIGNhbGxzIHdpbnNpemUgaW4gUmVsaW5lCiAgaW5jbHVkZSBXaW5zaXplCmVuZAoKY2xhc3MgTm9uQmxvY2tpbmdJTwogIGluY2x1ZGUgV2luc2l6ZQoKICBkZWYgcmF3KGludHI6IG5pbCwgbWluOiBuaWwsIHRpbWU6IG5pbCwgdGltOiBuaWwsICZibG9jaykKICAgIGJsb2NrJi5jYWxsKHNlbGYpCiAgZW5kCgogIGRlZiByZWFkX25vbmJsb2NrKG1heGxlbiwgb3V0YnVmID0gbmlsLCBleGNlcHRpb246IHRydWUpCiAgICBvdXRidWYgPSAiIiB1bmxlc3Mgb3V0YnVmCiAgICB3aGlsZSB0cnVlCiAgICAgIGNoID0gSlMuZ2xvYmFsWzppcmJXb3JrZXJdWzp0ZXJtXVs6a2V5QnVmZmVyXS5nZXRjaC50b19zCiAgICAgIGlmIGNoID09ICJudWxsIiB8fCBtYXhsZW4gPD0gb3V0YnVmLmxlbmd0aAogICAgICAgIGJyZWFrCiAgICAgIGVsc2UKICAgICAgICBvdXRidWYgPDwgY2gKICAgICAgZW5kCiAgICBlbmQKICAgIGlmIDAgPCBvdXRidWYubGVuZ3RoCiAgICAgIG91dGJ1ZgogICAgZWxzZQogICAgICAiIgogICAgZW5kCiAgZW5kCgogIGRlZiBnZXRieXRlCiAgICBnZXRjaCYub3JkCiAgZW5kCgogIGRlZiBnZXRjaAogICAgY2ggPSBKUy5nbG9iYWxbOmlyYldvcmtlcl1bOnRlcm1dWzprZXlCdWZmZXJdLmdldGNoLnRvX3MKICAgIGlmIGNoLm9yZCA9PSAzICMgQ3RybC1DIC0+IFNJR0lOVAogICAgICBQcm9jZXNzLmtpbGwgOklOVCwgUHJvY2Vzcy5waWQKICAgICAgbmlsCiAgICBlbHNlCiAgICAgIGNoID09ICJudWxsIiA/IG5pbCA6IGNoCiAgICBlbmQKICBlbmQKCiAgZGVmIGdldGMKICAgIEpTLmdsb2JhbFs6aXJiV29ya2VyXVs6dGVybV1bOmtleUJ1ZmZlcl0uZ2V0Yy5hd2FpdC50b19zCiAgZW5kCgogIGRlZiBleHRlcm5hbF9lbmNvZGluZwogICAgIlVURi04IgogIGVuZAoKICBkZWYgd2FpdF9yZWFkYWJsZSh0aW1lb3V0ID0gbmlsKQogICAgcmV0dXJuIHRydWUgaWYgSlMuZ2xvYmFsWzppcmJXb3JrZXJdWzp0ZXJtXVs6a2V5QnVmZmVyXS5yZWFkYWJsZS50b19zID09ICJ0cnVlIgogICAgaWYgSlMuZ2xvYmFsWzppcmJXb3JrZXJdWzp0ZXJtXVs6a2V5QnVmZmVyXS53YWl0X3JlYWRhYmxlKAogICAgICAjIGAxYCBpcyB1bnVzZWQgZmFsbGJhY2sgYmVjYXVzZSBSZWxpbmUgYWx3YXlzIHNwZWNpZmllcyB0aW1lb3V0IGFyZ3VtZW50CiAgICAgIEpTLmV2YWwoInJldHVybiAje3RpbWVvdXQgfHwgMX0iKQogICAgKS5hd2FpdC50b19zID09ICJ0cnVlIgogICAgICByZXR1cm4gc2VsZgogICAgZWxzZQogICAgICByZXR1cm4gbmlsCiAgICBlbmQKICByZXNjdWUKICAgIHJldHVybiBuaWwKICBlbmQKCiAgZGVmIHVuZ2V0YyhjKQogICAgSlMuZ2xvYmFsWzppcmJXb3JrZXJdWzp0ZXJtXVs6a2V5QnVmZmVyXS51bmdldGMoYykKICBlbmQKCiAgZGVmIHR0eT8KICAgIHRydWUKICBlbmQKZW5kCgpjbGFzcyBJTwogIGNsYXNzIDw8IHNlbGYKICAgIGFsaWFzX21ldGhvZCA6b3JpZ2luYWxfb3BlbiwgOm9wZW4KICAgIGRlZiBmYWtlX29wZW4oZmQsIC4uLikKICAgICAgaWYgZmQgPT0gMAogICAgICAgIHJldHVybiBOb25CbG9ja2luZ0lPLm5ldwogICAgICBlbmQKICAgICAgb3JpZ2luYWxfb3BlbihmZCwgLi4uKQogICAgZW5kCiAgICBhbGlhc19tZXRob2QgOm9wZW4sIDpmYWtlX29wZW4KICBlbmQKCiAgIyBUT0RPKGthdGVpKTogUmV0dXJuIFdBU0lfUklHSFRTX0ZEX1NFRUsgfCBXQVNJX1JJR0hUU19GRF9URUxMIGFzIHJpZ2h0c19iYXNlCiAgIyBodHRwczovL2dpdGh1Yi5jb20vV2ViQXNzZW1ibHkvd2FzaS1saWJjL2Jsb2IvYWQ1MTMzNDEwZjY2YjkzYTIzODFkYjViNTQyYWFkNWUwOTY0ZGI5Ni9saWJjLWJvdHRvbS1oYWxmL3NvdXJjZXMvaXNhdHR5LmMKICBkZWYgdHR5PwogICAgY2FzZSB0b19pCiAgICB3aGVuIDAsIDEsIDI7IHRydWUKICAgIGVsc2UgZmFsc2UKICAgIGVuZAogIGVuZAplbmQKCmNsYXNzIFRocmVhZAogIGRlZiBzZWxmLm5ldygmYmxvY2spCiAgICBmID0gRmliZXIubmV3KCZibG9jaykKICAgIGRlZiBmLnZhbHVlID0gcmVzdW1lCiAgICBmCiAgZW5kCmVuZAoKZGVmIEZpbGUuY2htb2QobW9kZSwgKnBhdGhzKSA9IG5pbApjbGFzcyBGaWxlCiAgZGVmIGNobW9kKG1vZGUpID0gbmlsCmVuZAoKYWxpYXMgb3JpZ19wdXRzIHB1dHMKZGVmIHB1dHMoKmFyZ3MpCiAgYXJncy5lYWNoIGRvIHxhcmd8CiAgICBvcmlnX3B1dHMoYXJnLnJlc3BvbmRfdG8/KDpnc3ViKSA/IGFyZy5nc3ViKCJcbiIsICJcclxuIikgOiBhcmcpCiAgICBwcmludCAiXHIiCiAgZW5kCiAgbmlsCmVuZAoKZGVmIHNsZWVwKHNlYykKICBKUy5nbG9iYWxbOmlyYldvcmtlcl0uc2xlZXBfbXMoSlMuZXZhbCgicmV0dXJuICN7c2VjICogMTAwMH0iKSkuYXdhaXQKICByZXR1cm4gc2VjLnRvX2kKZW5kCg==",
    rubygems_compat = "data:application/octet-stream;base64,cmVxdWlyZSAicnVieWdlbXMvY29tbWFuZHMvaW5zdGFsbF9jb21tYW5kIgoKY2xhc3MgSlM6Ok9iamVjdAogIGRlZiB0b19hCiAgICAgIGFyeSA9IFtdCiAgICAgIHNlbGZbOmxlbmd0aF0udG9faS50aW1lcyBkbyB8aXwKICAgICAgICAgIGFyeSA8PCBzZWxmLmNhbGwoOmF0LCBpKS50b19pCiAgICAgIGVuZAogICAgICBhcnkKICBlbmQKZW5kCgpjbGFzcyBHZW06OlJlcXVlc3QKICBkZWYgc2VsZi5yZXF1ZXN0KHVyaSwgcmVxdWVzdCkKICAgIGlmIHVyaS5ob3N0bmFtZSA9PSAicnVieWdlbXMub3JnIiBvciB1cmkuaG9zdG5hbWUgPT0gImluZGV4LnJ1YnlnZW1zLm9yZyIKICAgICAgdXJpLmhvc3RuYW1lID0gImlyYi13YXNtLXByb3h5LmVkZ2Vjb21wdXRlLmFwcCIKICAgIGVuZAogICAgb3B0aW9ucyA9IEpTLmV2YWwoInJldHVybiB7fSIpCiAgICBvcHRpb25zWzptZXRob2RdID0gcmVxdWVzdC5tZXRob2QudG9fcwogICAgb3B0aW9uc1s6aGVhZGVyc10gPSBKUy5ldmFsKCJyZXR1cm4ge30iKQogICAgcmVxdWVzdC5lYWNoX2NhcGl0YWxpemVkIGRvIHxrLCB2fAogICAgICBvcHRpb25zWzpoZWFkZXJzXVtrXSA9IHYKICAgIGVuZAogICAgcmVzcG9uc2UgPSBKUy5nbG9iYWwuZmV0Y2godXJpLnRvX3MsIG9wdGlvbnMpLmF3YWl0CiAgICBjb250ZW50X3R5cGUgPSByZXNwb25zZVs6aGVhZGVyc10uZ2V0KCJDb250ZW50LVR5cGUiKS50b19zCiAgICBpc19vY3RldF9zdHJlYW0gPSBjb250ZW50X3R5cGUuc3RhcnRfd2l0aD8oImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIpIHx8IGNvbnRlbnRfdHlwZSA9PSAiYmluYXJ5L29jdGV0LXN0cmVhbSIKICAgIGlmIHVyaS5wYXRoLmVuZF93aXRoPygiLmdlbSIpIG9yIHVyaS5wYXRoLmVuZF93aXRoPygiLnJ6Iikgb3IgaXNfb2N0ZXRfc3RyZWFtCiAgICAgICMgRklYTUU6IHN1cHBvcnQgY2xhc3MgY29uc3RydWN0b3IgYW5kIGRpcmVjdCBmdW5jdGlvbiBjYWxsCiAgICAgIGZhY3RvcnkgPSBKUy5ldmFsKCJyZXR1cm4geyBtYWtlOiAoZGF0YSkgPT4gbmV3IFVpbnQ4QXJyYXkoZGF0YSkgfSIpCiAgICAgIGJvZHkgPSBmYWN0b3J5Lm1ha2UgcmVzcG9uc2UuYXJyYXlCdWZmZXIuYXdhaXQKICAgIGVsc2UKICAgICAgYm9keSA9IHJlc3BvbnNlLnRleHQuYXdhaXQKICAgIGVuZAogICAgaWYgSlMuaXNfYT8oYm9keSwgSlMuZ2xvYmFsWzpVaW50OEFycmF5XSkKICAgICAgYm9keV9zdHIgPSBib2R5LnRvX2EucGFjaygiQyoiKQogICAgZWxzZQogICAgICBib2R5X3N0ciA9IGJvZHkuaW5zcGVjdAogICAgZW5kCiAgICBib2R5X3N0ciA9IDo6R2VtOjpOZXQ6OkJ1ZmZlcmVkSU8ubmV3KFN0cmluZ0lPLm5ldyhib2R5X3N0cikpCgogICAgc3RhdHVzID0gcmVzcG9uc2VbInN0YXR1cyJdLmluc3BlY3QKICAgIHJlc3BvbnNlX2NsYXNzID0gOjpHZW06Ok5ldDo6SFRUUFJlc3BvbnNlOjpDT0RFX1RPX09CSltzdGF0dXNdCiAgICByZXNwb25zZSA9IHJlc3BvbnNlX2NsYXNzLm5ldygiMi4wIiwgc3RhdHVzLnRvX2ksIG5pbCkKCiAgICByZXNwb25zZS5yZWFkaW5nX2JvZHkoYm9keV9zdHIsIHRydWUpIHt9CgogICAgcmVzcG9uc2UKICBlbmQKCiAgZGVmIHBlcmZvcm1fcmVxdWVzdChyZXF1ZXN0KSA9IEdlbTo6UmVxdWVzdC5yZXF1ZXN0KEB1cmksIHJlcXVlc3QpCmVuZAoKY2xhc3MgR2VtOjpJbnN0YWxsZXIKICBkZWYgYnVpbGRfZXh0ZW5zaW9ucwogICAgICAjIEhBQ0s6IHNraXAgZXh0IGJ1aWxkIGZvciBub3cuLi4KICBlbmQKZW5kCgpjbGFzcyBHZW06OlNwZWNpZmljYXRpb24KICAjIEhBQ0s6IHN1cHJlc3MgbWlzc2luZyBleHRlbnNpb24gd2FybmluZywgd2hpY2ggcHJldmVudHMgInJlcXVpcmUiIHRvIHdvcmsKICBkZWYgbWlzc2luZ19leHRlbnNpb25zPyA9IGZhbHNlCmVuZAoKZGVmIEdlbS51c2VyX2hvbWUgPSBEaXIuaG9tZQojIEhBQ0s6IEluc3RhbGwgZ2VtcyB1bmRlciB3cml0YWJsZSBkaXJlY3RvcnkgYnkgZGVmYXVsdApkZWYgR2VtLmRpciA9IEdlbS51c2VyX2RpcgoKR2VtLmNvbmZpZ3VyYXRpb24uY29uY3VycmVudF9kb3dubG9hZHMgPSAxCg==",
    bundler_compat = "data:application/octet-stream;base64,cmVxdWlyZSAiYnVuZGxlciIKY2xhc3MgQnVuZGxlcjo6UHJvY2Vzc0xvY2sKICBkZWYgc2VsZi5sb2NrKCopCiAgICAjIEhBQ0s6IG5vIGZsb2NrIG9uIGJyb3dzZXIuLi4KICAgIHlpZWxkCiAgZW5kCmVuZAoKY2xhc3MgRmV0Y2hDb25uZWN0aW9uCiAgZGVmIHJlcXVlc3QodXJpLCByZXF1ZXN0KSA9IEdlbTo6UmVxdWVzdC5yZXF1ZXN0KHVyaSwgcmVxdWVzdCkKZW5kCgpjbGFzcyBCdW5kbGVyOjpGZXRjaGVyCiAgZGVmIGNvbm5lY3Rpb24KICAgIEBjb25uZWN0aW9uIHx8PSBiZWdpbgogICAgICAgIGNvbiA9IEZldGNoQ29ubmVjdGlvbi5uZXcKICAgIGVuZAogIGVuZAplbmQKCiMgSEFDSzogT3BlblNTTDo6RGlnZXN0IGlzIG5vdCBhdmFpbGFibGUKbW9kdWxlIEJ1bmRsZXI6OlNoYXJlZEhlbHBlcnMKICBkZWYgbWQ1X2F2YWlsYWJsZT8gPSBmYWxzZQplbmQK";
initTerminalPlugin(jQuery);
initUnixFormatting(window, jQuery);
class LineBuffer {
    constructor() {
        this.resolve = null, this.buffer = []
    }
    writeLine(t) {
        if (this.resolve) {
            const p = this.resolve;
            this.resolve = null, p(t)
        } else this.buffer.push(t)
    }
    async readLine() {
        return this.buffer.length > 0 ? this.buffer.shift() : new Promise(t => {
            this.resolve = t
        })
    }
}

function makeJQueryTerminal() {
    const w = new LineBuffer,
        t = jQuery("#terminal").terminal(p => {
            w.writeLine(p + `
`)
        }, {
            greetings: null,
            prompt: ""
        });
    return {
        term: t,
        lineBuffer: w,
        write(p) {
            t.echo(p, {
                newline: !1,
                exec: !1
            })
        },
        set_prompt(p) {
            t.set_prompt(p)
        },
        startIRB(p) {
            p.evalAsync(`
            require "stringio"
            require "/bundle/setup"
            require "js"
            def require_remote(path)
                response = JS.global.fetch(path).await
                text = response.text.await
                Kernel.eval(text.to_s, TOPLEVEL_BINDING, path)
            end
            require_remote "${stdlib_compat}"

            class NonBlockingIO
              def gets
                JS.global[:irbWorker][:term][:lineBuffer].readLine.await.to_s
              end

              def external_encoding
                "UTF-8"
              end

              def wait_readable(timeout = nil)
                true
              end

              def getc = "x"
              def ungetc(c) = nil
            end

            require_remote "${rubygems_compat}"
            require_remote "${bundler_compat}"
            class Term
                def self.echo(text)
                    JS.global.call("termEchoRaw", text)
                end
            end

            require "irb"
            ap_path = __FILE__
            STDOUT.sync = true
            $0 = File::basename(ap_path, ".rb") if ap_path
            IRB.setup(ap_path)
            irb = IRB::Irb.new(nil, IRB::StdioInputMethod.new)
            irb.run(IRB.conf)
        `)
        }
    }
}
var xterm = {
    exports: {}
};
(function(w, t) {
    (function(p, f) {
        w.exports = f()
    })(globalThis, () => (() => {
        var p = {
                4567: function(C, r, s) {
                    var c = this && this.__decorate || function(i, l, b, A) {
                            var n, T = arguments.length,
                                S = T < 3 ? l : A === null ? A = Object.getOwnPropertyDescriptor(l, b) : A;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") S = Reflect.decorate(i, l, b, A);
                            else
                                for (var L = i.length - 1; L >= 0; L--)(n = i[L]) && (S = (T < 3 ? n(S) : T > 3 ? n(l, b, S) : n(l, b)) || S);
                            return T > 3 && S && Object.defineProperty(l, b, S), S
                        },
                        g = this && this.__param || function(i, l) {
                            return function(b, A) {
                                l(b, A, i)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.AccessibilityManager = void 0;
                    const u = s(9042),
                        _ = s(9924),
                        v = s(844),
                        D = s(4725),
                        d = s(2585),
                        a = s(3656);
                    let o = r.AccessibilityManager = class extends v.Disposable {
                        constructor(i, l, b, A) {
                            super(), this._terminal = i, this._coreBrowserService = b, this._renderService = A, this._rowColumns = new WeakMap, this._liveRegionLineCount = 0, this._charsToConsume = [], this._charsToAnnounce = "", this._accessibilityContainer = this._coreBrowserService.mainDocument.createElement("div"), this._accessibilityContainer.classList.add("xterm-accessibility"), this._rowContainer = this._coreBrowserService.mainDocument.createElement("div"), this._rowContainer.setAttribute("role", "list"), this._rowContainer.classList.add("xterm-accessibility-tree"), this._rowElements = [];
                            for (let n = 0; n < this._terminal.rows; n++) this._rowElements[n] = this._createAccessibilityTreeNode(), this._rowContainer.appendChild(this._rowElements[n]);
                            if (this._topBoundaryFocusListener = n => this._handleBoundaryFocus(n, 0), this._bottomBoundaryFocusListener = n => this._handleBoundaryFocus(n, 1), this._rowElements[0].addEventListener("focus", this._topBoundaryFocusListener), this._rowElements[this._rowElements.length - 1].addEventListener("focus", this._bottomBoundaryFocusListener), this._refreshRowsDimensions(), this._accessibilityContainer.appendChild(this._rowContainer), this._liveRegion = this._coreBrowserService.mainDocument.createElement("div"), this._liveRegion.classList.add("live-region"), this._liveRegion.setAttribute("aria-live", "assertive"), this._accessibilityContainer.appendChild(this._liveRegion), this._liveRegionDebouncer = this.register(new _.TimeBasedDebouncer(this._renderRows.bind(this))), !this._terminal.element) throw new Error("Cannot enable accessibility before Terminal.open");
                            this._terminal.element.insertAdjacentElement("afterbegin", this._accessibilityContainer), this.register(this._terminal.onResize(n => this._handleResize(n.rows))), this.register(this._terminal.onRender(n => this._refreshRows(n.start, n.end))), this.register(this._terminal.onScroll(() => this._refreshRows())), this.register(this._terminal.onA11yChar(n => this._handleChar(n))), this.register(this._terminal.onLineFeed(() => this._handleChar(`
`))), this.register(this._terminal.onA11yTab(n => this._handleTab(n))), this.register(this._terminal.onKey(n => this._handleKey(n.key))), this.register(this._terminal.onBlur(() => this._clearLiveRegion())), this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions())), this.register((0, a.addDisposableDomListener)(document, "selectionchange", () => this._handleSelectionChange())), this.register(this._coreBrowserService.onDprChange(() => this._refreshRowsDimensions())), this._refreshRows(), this.register((0, v.toDisposable)(() => {
                                this._accessibilityContainer.remove(), this._rowElements.length = 0
                            }))
                        }
                        _handleTab(i) {
                            for (let l = 0; l < i; l++) this._handleChar(" ")
                        }
                        _handleChar(i) {
                            this._liveRegionLineCount < 21 && (this._charsToConsume.length > 0 ? this._charsToConsume.shift() !== i && (this._charsToAnnounce += i) : this._charsToAnnounce += i, i === `
` && (this._liveRegionLineCount++, this._liveRegionLineCount === 21 && (this._liveRegion.textContent += u.tooMuchOutput)))
                        }
                        _clearLiveRegion() {
                            this._liveRegion.textContent = "", this._liveRegionLineCount = 0
                        }
                        _handleKey(i) {
                            this._clearLiveRegion(), new RegExp("\\p{Control}", "u").test(i) || this._charsToConsume.push(i)
                        }
                        _refreshRows(i, l) {
                            this._liveRegionDebouncer.refresh(i, l, this._terminal.rows)
                        }
                        _renderRows(i, l) {
                            const b = this._terminal.buffer,
                                A = b.lines.length.toString();
                            for (let n = i; n <= l; n++) {
                                const T = b.lines.get(b.ydisp + n),
                                    S = [],
                                    L = (T == null ? void 0 : T.translateToString(!0, void 0, void 0, S)) || "",
                                    z = (b.ydisp + n + 1).toString(),
                                    G = this._rowElements[n];
                                G && (L.length === 0 ? (G.innerText = " ", this._rowColumns.set(G, [0, 1])) : (G.textContent = L, this._rowColumns.set(G, S)), G.setAttribute("aria-posinset", z), G.setAttribute("aria-setsize", A))
                            }
                            this._announceCharacters()
                        }
                        _announceCharacters() {
                            this._charsToAnnounce.length !== 0 && (this._liveRegion.textContent += this._charsToAnnounce, this._charsToAnnounce = "")
                        }
                        _handleBoundaryFocus(i, l) {
                            const b = i.target,
                                A = this._rowElements[l === 0 ? 1 : this._rowElements.length - 2];
                            if (b.getAttribute("aria-posinset") === (l === 0 ? "1" : `${this._terminal.buffer.lines.length}`) || i.relatedTarget !== A) return;
                            let n, T;
                            if (l === 0 ? (n = b, T = this._rowElements.pop(), this._rowContainer.removeChild(T)) : (n = this._rowElements.shift(), T = b, this._rowContainer.removeChild(n)), n.removeEventListener("focus", this._topBoundaryFocusListener), T.removeEventListener("focus", this._bottomBoundaryFocusListener), l === 0) {
                                const S = this._createAccessibilityTreeNode();
                                this._rowElements.unshift(S), this._rowContainer.insertAdjacentElement("afterbegin", S)
                            } else {
                                const S = this._createAccessibilityTreeNode();
                                this._rowElements.push(S), this._rowContainer.appendChild(S)
                            }
                            this._rowElements[0].addEventListener("focus", this._topBoundaryFocusListener), this._rowElements[this._rowElements.length - 1].addEventListener("focus", this._bottomBoundaryFocusListener), this._terminal.scrollLines(l === 0 ? -1 : 1), this._rowElements[l === 0 ? 1 : this._rowElements.length - 2].focus(), i.preventDefault(), i.stopImmediatePropagation()
                        }
                        _handleSelectionChange() {
                            var L;
                            if (this._rowElements.length === 0) return;
                            const i = document.getSelection();
                            if (!i) return;
                            if (i.isCollapsed) return void(this._rowContainer.contains(i.anchorNode) && this._terminal.clearSelection());
                            if (!i.anchorNode || !i.focusNode) return void console.error("anchorNode and/or focusNode are null");
                            let l = {
                                    node: i.anchorNode,
                                    offset: i.anchorOffset
                                },
                                b = {
                                    node: i.focusNode,
                                    offset: i.focusOffset
                                };
                            if ((l.node.compareDocumentPosition(b.node) & Node.DOCUMENT_POSITION_PRECEDING || l.node === b.node && l.offset > b.offset) && ([l, b] = [b, l]), l.node.compareDocumentPosition(this._rowElements[0]) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_FOLLOWING) && (l = {
                                    node: this._rowElements[0].childNodes[0],
                                    offset: 0
                                }), !this._rowContainer.contains(l.node)) return;
                            const A = this._rowElements.slice(-1)[0];
                            if (b.node.compareDocumentPosition(A) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_PRECEDING) && (b = {
                                    node: A,
                                    offset: ((L = A.textContent) == null ? void 0 : L.length) ?? 0
                                }), !this._rowContainer.contains(b.node)) return;
                            const n = ({
                                    node: z,
                                    offset: G
                                }) => {
                                    const K = z instanceof Text ? z.parentNode : z;
                                    let U = parseInt(K == null ? void 0 : K.getAttribute("aria-posinset"), 10) - 1;
                                    if (isNaN(U)) return console.warn("row is invalid. Race condition?"), null;
                                    const te = this._rowColumns.get(K);
                                    if (!te) return console.warn("columns is null. Race condition?"), null;
                                    let fe = G < te.length ? te[G] : te.slice(-1)[0] + 1;
                                    return fe >= this._terminal.cols && (++U, fe = 0), {
                                        row: U,
                                        column: fe
                                    }
                                },
                                T = n(l),
                                S = n(b);
                            if (T && S) {
                                if (T.row > S.row || T.row === S.row && T.column >= S.column) throw new Error("invalid range");
                                this._terminal.select(T.column, T.row, (S.row - T.row) * this._terminal.cols - T.column + S.column)
                            }
                        }
                        _handleResize(i) {
                            this._rowElements[this._rowElements.length - 1].removeEventListener("focus", this._bottomBoundaryFocusListener);
                            for (let l = this._rowContainer.children.length; l < this._terminal.rows; l++) this._rowElements[l] = this._createAccessibilityTreeNode(), this._rowContainer.appendChild(this._rowElements[l]);
                            for (; this._rowElements.length > i;) this._rowContainer.removeChild(this._rowElements.pop());
                            this._rowElements[this._rowElements.length - 1].addEventListener("focus", this._bottomBoundaryFocusListener), this._refreshRowsDimensions()
                        }
                        _createAccessibilityTreeNode() {
                            const i = this._coreBrowserService.mainDocument.createElement("div");
                            return i.setAttribute("role", "listitem"), i.tabIndex = -1, this._refreshRowDimensions(i), i
                        }
                        _refreshRowsDimensions() {
                            if (this._renderService.dimensions.css.cell.height) {
                                this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`, this._rowElements.length !== this._terminal.rows && this._handleResize(this._terminal.rows);
                                for (let i = 0; i < this._terminal.rows; i++) this._refreshRowDimensions(this._rowElements[i])
                            }
                        }
                        _refreshRowDimensions(i) {
                            i.style.height = `${this._renderService.dimensions.css.cell.height}px`
                        }
                    };
                    r.AccessibilityManager = o = c([g(1, d.IInstantiationService), g(2, D.ICoreBrowserService), g(3, D.IRenderService)], o)
                },
                3614: (C, r) => {
                    function s(_) {
                        return _.replace(/\r?\n/g, "\r")
                    }

                    function c(_, v) {
                        return v ? "\x1B[200~" + _ + "\x1B[201~" : _
                    }

                    function g(_, v, D, d) {
                        _ = c(_ = s(_), D.decPrivateModes.bracketedPasteMode && d.rawOptions.ignoreBracketedPasteMode !== !0), D.triggerDataEvent(_, !0), v.value = ""
                    }

                    function u(_, v, D) {
                        const d = D.getBoundingClientRect(),
                            a = _.clientX - d.left - 10,
                            o = _.clientY - d.top - 10;
                        v.style.width = "20px", v.style.height = "20px", v.style.left = `${a}px`, v.style.top = `${o}px`, v.style.zIndex = "1000", v.focus()
                    }
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.rightClickHandler = r.moveTextAreaUnderMouseCursor = r.paste = r.handlePasteEvent = r.copyHandler = r.bracketTextForPaste = r.prepareTextForTerminal = void 0, r.prepareTextForTerminal = s, r.bracketTextForPaste = c, r.copyHandler = function(_, v) {
                        _.clipboardData && _.clipboardData.setData("text/plain", v.selectionText), _.preventDefault()
                    }, r.handlePasteEvent = function(_, v, D, d) {
                        _.stopPropagation(), _.clipboardData && g(_.clipboardData.getData("text/plain"), v, D, d)
                    }, r.paste = g, r.moveTextAreaUnderMouseCursor = u, r.rightClickHandler = function(_, v, D, d, a) {
                        u(_, v, D), a && d.rightClickSelect(_), v.value = d.selectionText, v.select()
                    }
                },
                7239: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.ColorContrastCache = void 0;
                    const c = s(1505);
                    r.ColorContrastCache = class {
                        constructor() {
                            this._color = new c.TwoKeyMap, this._css = new c.TwoKeyMap
                        }
                        setCss(g, u, _) {
                            this._css.set(g, u, _)
                        }
                        getCss(g, u) {
                            return this._css.get(g, u)
                        }
                        setColor(g, u, _) {
                            this._color.set(g, u, _)
                        }
                        getColor(g, u) {
                            return this._color.get(g, u)
                        }
                        clear() {
                            this._color.clear(), this._css.clear()
                        }
                    }
                },
                3656: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.addDisposableDomListener = void 0, r.addDisposableDomListener = function(s, c, g, u) {
                        s.addEventListener(c, g, u);
                        let _ = !1;
                        return {
                            dispose: () => {
                                _ || (_ = !0, s.removeEventListener(c, g, u))
                            }
                        }
                    }
                },
                3551: function(C, r, s) {
                    var c = this && this.__decorate || function(o, i, l, b) {
                            var A, n = arguments.length,
                                T = n < 3 ? i : b === null ? b = Object.getOwnPropertyDescriptor(i, l) : b;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") T = Reflect.decorate(o, i, l, b);
                            else
                                for (var S = o.length - 1; S >= 0; S--)(A = o[S]) && (T = (n < 3 ? A(T) : n > 3 ? A(i, l, T) : A(i, l)) || T);
                            return n > 3 && T && Object.defineProperty(i, l, T), T
                        },
                        g = this && this.__param || function(o, i) {
                            return function(l, b) {
                                i(l, b, o)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.Linkifier = void 0;
                    const u = s(3656),
                        _ = s(8460),
                        v = s(844),
                        D = s(2585),
                        d = s(4725);
                    let a = r.Linkifier = class extends v.Disposable {
                        get currentLink() {
                            return this._currentLink
                        }
                        constructor(o, i, l, b, A) {
                            super(), this._element = o, this._mouseService = i, this._renderService = l, this._bufferService = b, this._linkProviderService = A, this._linkCacheDisposables = [], this._isMouseOut = !0, this._wasResized = !1, this._activeLine = -1, this._onShowLinkUnderline = this.register(new _.EventEmitter), this.onShowLinkUnderline = this._onShowLinkUnderline.event, this._onHideLinkUnderline = this.register(new _.EventEmitter), this.onHideLinkUnderline = this._onHideLinkUnderline.event, this.register((0, v.getDisposeArrayDisposable)(this._linkCacheDisposables)), this.register((0, v.toDisposable)(() => {
                                var n;
                                this._lastMouseEvent = void 0, (n = this._activeProviderReplies) == null || n.clear()
                            })), this.register(this._bufferService.onResize(() => {
                                this._clearCurrentLink(), this._wasResized = !0
                            })), this.register((0, u.addDisposableDomListener)(this._element, "mouseleave", () => {
                                this._isMouseOut = !0, this._clearCurrentLink()
                            })), this.register((0, u.addDisposableDomListener)(this._element, "mousemove", this._handleMouseMove.bind(this))), this.register((0, u.addDisposableDomListener)(this._element, "mousedown", this._handleMouseDown.bind(this))), this.register((0, u.addDisposableDomListener)(this._element, "mouseup", this._handleMouseUp.bind(this)))
                        }
                        _handleMouseMove(o) {
                            this._lastMouseEvent = o;
                            const i = this._positionFromMouseEvent(o, this._element, this._mouseService);
                            if (!i) return;
                            this._isMouseOut = !1;
                            const l = o.composedPath();
                            for (let b = 0; b < l.length; b++) {
                                const A = l[b];
                                if (A.classList.contains("xterm")) break;
                                if (A.classList.contains("xterm-hover")) return
                            }
                            this._lastBufferCell && i.x === this._lastBufferCell.x && i.y === this._lastBufferCell.y || (this._handleHover(i), this._lastBufferCell = i)
                        }
                        _handleHover(o) {
                            if (this._activeLine !== o.y || this._wasResized) return this._clearCurrentLink(), this._askForLink(o, !1), void(this._wasResized = !1);
                            this._currentLink && this._linkAtPosition(this._currentLink.link, o) || (this._clearCurrentLink(), this._askForLink(o, !0))
                        }
                        _askForLink(o, i) {
                            var b, A;
                            this._activeProviderReplies && i || ((b = this._activeProviderReplies) == null || b.forEach(n => {
                                n == null || n.forEach(T => {
                                    T.link.dispose && T.link.dispose()
                                })
                            }), this._activeProviderReplies = new Map, this._activeLine = o.y);
                            let l = !1;
                            for (const [n, T] of this._linkProviderService.linkProviders.entries()) i ? (A = this._activeProviderReplies) != null && A.get(n) && (l = this._checkLinkProviderResult(n, o, l)) : T.provideLinks(o.y, S => {
                                var z, G;
                                if (this._isMouseOut) return;
                                const L = S == null ? void 0 : S.map(K => ({
                                    link: K
                                }));
                                (z = this._activeProviderReplies) == null || z.set(n, L), l = this._checkLinkProviderResult(n, o, l), ((G = this._activeProviderReplies) == null ? void 0 : G.size) === this._linkProviderService.linkProviders.length && this._removeIntersectingLinks(o.y, this._activeProviderReplies)
                            })
                        }
                        _removeIntersectingLinks(o, i) {
                            const l = new Set;
                            for (let b = 0; b < i.size; b++) {
                                const A = i.get(b);
                                if (A)
                                    for (let n = 0; n < A.length; n++) {
                                        const T = A[n],
                                            S = T.link.range.start.y < o ? 0 : T.link.range.start.x,
                                            L = T.link.range.end.y > o ? this._bufferService.cols : T.link.range.end.x;
                                        for (let z = S; z <= L; z++) {
                                            if (l.has(z)) {
                                                A.splice(n--, 1);
                                                break
                                            }
                                            l.add(z)
                                        }
                                    }
                            }
                        }
                        _checkLinkProviderResult(o, i, l) {
                            var n;
                            if (!this._activeProviderReplies) return l;
                            const b = this._activeProviderReplies.get(o);
                            let A = !1;
                            for (let T = 0; T < o; T++) this._activeProviderReplies.has(T) && !this._activeProviderReplies.get(T) || (A = !0);
                            if (!A && b) {
                                const T = b.find(S => this._linkAtPosition(S.link, i));
                                T && (l = !0, this._handleNewLink(T))
                            }
                            if (this._activeProviderReplies.size === this._linkProviderService.linkProviders.length && !l)
                                for (let T = 0; T < this._activeProviderReplies.size; T++) {
                                    const S = (n = this._activeProviderReplies.get(T)) == null ? void 0 : n.find(L => this._linkAtPosition(L.link, i));
                                    if (S) {
                                        l = !0, this._handleNewLink(S);
                                        break
                                    }
                                }
                            return l
                        }
                        _handleMouseDown() {
                            this._mouseDownLink = this._currentLink
                        }
                        _handleMouseUp(o) {
                            if (!this._currentLink) return;
                            const i = this._positionFromMouseEvent(o, this._element, this._mouseService);
                            i && this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, i) && this._currentLink.link.activate(o, this._currentLink.link.text)
                        }
                        _clearCurrentLink(o, i) {
                            this._currentLink && this._lastMouseEvent && (!o || !i || this._currentLink.link.range.start.y >= o && this._currentLink.link.range.end.y <= i) && (this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent), this._currentLink = void 0, (0, v.disposeArray)(this._linkCacheDisposables))
                        }
                        _handleNewLink(o) {
                            if (!this._lastMouseEvent) return;
                            const i = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);
                            i && this._linkAtPosition(o.link, i) && (this._currentLink = o, this._currentLink.state = {
                                decorations: {
                                    underline: o.link.decorations === void 0 || o.link.decorations.underline,
                                    pointerCursor: o.link.decorations === void 0 || o.link.decorations.pointerCursor
                                },
                                isHovered: !0
                            }, this._linkHover(this._element, o.link, this._lastMouseEvent), o.link.decorations = {}, Object.defineProperties(o.link.decorations, {
                                pointerCursor: {
                                    get: () => {
                                        var l, b;
                                        return (b = (l = this._currentLink) == null ? void 0 : l.state) == null ? void 0 : b.decorations.pointerCursor
                                    },
                                    set: l => {
                                        var b;
                                        (b = this._currentLink) != null && b.state && this._currentLink.state.decorations.pointerCursor !== l && (this._currentLink.state.decorations.pointerCursor = l, this._currentLink.state.isHovered && this._element.classList.toggle("xterm-cursor-pointer", l))
                                    }
                                },
                                underline: {
                                    get: () => {
                                        var l, b;
                                        return (b = (l = this._currentLink) == null ? void 0 : l.state) == null ? void 0 : b.decorations.underline
                                    },
                                    set: l => {
                                        var b, A, n;
                                        (b = this._currentLink) != null && b.state && ((n = (A = this._currentLink) == null ? void 0 : A.state) == null ? void 0 : n.decorations.underline) !== l && (this._currentLink.state.decorations.underline = l, this._currentLink.state.isHovered && this._fireUnderlineEvent(o.link, l))
                                    }
                                }
                            }), this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(l => {
                                if (!this._currentLink) return;
                                const b = l.start === 0 ? 0 : l.start + 1 + this._bufferService.buffer.ydisp,
                                    A = this._bufferService.buffer.ydisp + 1 + l.end;
                                if (this._currentLink.link.range.start.y >= b && this._currentLink.link.range.end.y <= A && (this._clearCurrentLink(b, A), this._lastMouseEvent)) {
                                    const n = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);
                                    n && this._askForLink(n, !1)
                                }
                            })))
                        }
                        _linkHover(o, i, l) {
                            var b;
                            (b = this._currentLink) != null && b.state && (this._currentLink.state.isHovered = !0, this._currentLink.state.decorations.underline && this._fireUnderlineEvent(i, !0), this._currentLink.state.decorations.pointerCursor && o.classList.add("xterm-cursor-pointer")), i.hover && i.hover(l, i.text)
                        }
                        _fireUnderlineEvent(o, i) {
                            const l = o.range,
                                b = this._bufferService.buffer.ydisp,
                                A = this._createLinkUnderlineEvent(l.start.x - 1, l.start.y - b - 1, l.end.x, l.end.y - b - 1, void 0);
                            (i ? this._onShowLinkUnderline : this._onHideLinkUnderline).fire(A)
                        }
                        _linkLeave(o, i, l) {
                            var b;
                            (b = this._currentLink) != null && b.state && (this._currentLink.state.isHovered = !1, this._currentLink.state.decorations.underline && this._fireUnderlineEvent(i, !1), this._currentLink.state.decorations.pointerCursor && o.classList.remove("xterm-cursor-pointer")), i.leave && i.leave(l, i.text)
                        }
                        _linkAtPosition(o, i) {
                            const l = o.range.start.y * this._bufferService.cols + o.range.start.x,
                                b = o.range.end.y * this._bufferService.cols + o.range.end.x,
                                A = i.y * this._bufferService.cols + i.x;
                            return l <= A && A <= b
                        }
                        _positionFromMouseEvent(o, i, l) {
                            const b = l.getCoords(o, i, this._bufferService.cols, this._bufferService.rows);
                            if (b) return {
                                x: b[0],
                                y: b[1] + this._bufferService.buffer.ydisp
                            }
                        }
                        _createLinkUnderlineEvent(o, i, l, b, A) {
                            return {
                                x1: o,
                                y1: i,
                                x2: l,
                                y2: b,
                                cols: this._bufferService.cols,
                                fg: A
                            }
                        }
                    };
                    r.Linkifier = a = c([g(1, d.IMouseService), g(2, d.IRenderService), g(3, D.IBufferService), g(4, d.ILinkProviderService)], a)
                },
                9042: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.tooMuchOutput = r.promptLabel = void 0, r.promptLabel = "Terminal input", r.tooMuchOutput = "Too much output to announce, navigate to rows manually to read"
                },
                3730: function(C, r, s) {
                    var c = this && this.__decorate || function(d, a, o, i) {
                            var l, b = arguments.length,
                                A = b < 3 ? a : i === null ? i = Object.getOwnPropertyDescriptor(a, o) : i;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") A = Reflect.decorate(d, a, o, i);
                            else
                                for (var n = d.length - 1; n >= 0; n--)(l = d[n]) && (A = (b < 3 ? l(A) : b > 3 ? l(a, o, A) : l(a, o)) || A);
                            return b > 3 && A && Object.defineProperty(a, o, A), A
                        },
                        g = this && this.__param || function(d, a) {
                            return function(o, i) {
                                a(o, i, d)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.OscLinkProvider = void 0;
                    const u = s(511),
                        _ = s(2585);
                    let v = r.OscLinkProvider = class {
                        constructor(d, a, o) {
                            this._bufferService = d, this._optionsService = a, this._oscLinkService = o
                        }
                        provideLinks(d, a) {
                            var L;
                            const o = this._bufferService.buffer.lines.get(d - 1);
                            if (!o) return void a(void 0);
                            const i = [],
                                l = this._optionsService.rawOptions.linkHandler,
                                b = new u.CellData,
                                A = o.getTrimmedLength();
                            let n = -1,
                                T = -1,
                                S = !1;
                            for (let z = 0; z < A; z++)
                                if (T !== -1 || o.hasContent(z)) {
                                    if (o.loadCell(z, b), b.hasExtendedAttrs() && b.extended.urlId) {
                                        if (T === -1) {
                                            T = z, n = b.extended.urlId;
                                            continue
                                        }
                                        S = b.extended.urlId !== n
                                    } else T !== -1 && (S = !0);
                                    if (S || T !== -1 && z === A - 1) {
                                        const G = (L = this._oscLinkService.getLinkData(n)) == null ? void 0 : L.uri;
                                        if (G) {
                                            const K = {
                                                start: {
                                                    x: T + 1,
                                                    y: d
                                                },
                                                end: {
                                                    x: z + (S || z !== A - 1 ? 0 : 1),
                                                    y: d
                                                }
                                            };
                                            let U = !1;
                                            if (!(l != null && l.allowNonHttpProtocols)) try {
                                                const te = new URL(G);
                                                ["http:", "https:"].includes(te.protocol) || (U = !0)
                                            } catch {
                                                U = !0
                                            }
                                            U || i.push({
                                                text: G,
                                                range: K,
                                                activate: (te, fe) => l ? l.activate(te, fe, K) : D(0, fe),
                                                hover: (te, fe) => {
                                                    var ye;
                                                    return (ye = l == null ? void 0 : l.hover) == null ? void 0 : ye.call(l, te, fe, K)
                                                },
                                                leave: (te, fe) => {
                                                    var ye;
                                                    return (ye = l == null ? void 0 : l.leave) == null ? void 0 : ye.call(l, te, fe, K)
                                                }
                                            })
                                        }
                                        S = !1, b.hasExtendedAttrs() && b.extended.urlId ? (T = z, n = b.extended.urlId) : (T = -1, n = -1)
                                    }
                                } a(i)
                        }
                    };

                    function D(d, a) {
                        if (confirm(`Do you want to navigate to ${a}?

WARNING: This link could potentially be dangerous`)) {
                            const o = window.open();
                            if (o) {
                                try {
                                    o.opener = null
                                } catch {}
                                o.location.href = a
                            } else console.warn("Opening link blocked as opener could not be cleared")
                        }
                    }
                    r.OscLinkProvider = v = c([g(0, _.IBufferService), g(1, _.IOptionsService), g(2, _.IOscLinkService)], v)
                },
                6193: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.RenderDebouncer = void 0, r.RenderDebouncer = class {
                        constructor(s, c) {
                            this._renderCallback = s, this._coreBrowserService = c, this._refreshCallbacks = []
                        }
                        dispose() {
                            this._animationFrame && (this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame), this._animationFrame = void 0)
                        }
                        addRefreshCallback(s) {
                            return this._refreshCallbacks.push(s), this._animationFrame || (this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh())), this._animationFrame
                        }
                        refresh(s, c, g) {
                            this._rowCount = g, s = s !== void 0 ? s : 0, c = c !== void 0 ? c : this._rowCount - 1, this._rowStart = this._rowStart !== void 0 ? Math.min(this._rowStart, s) : s, this._rowEnd = this._rowEnd !== void 0 ? Math.max(this._rowEnd, c) : c, this._animationFrame || (this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh()))
                        }
                        _innerRefresh() {
                            if (this._animationFrame = void 0, this._rowStart === void 0 || this._rowEnd === void 0 || this._rowCount === void 0) return void this._runRefreshCallbacks();
                            const s = Math.max(this._rowStart, 0),
                                c = Math.min(this._rowEnd, this._rowCount - 1);
                            this._rowStart = void 0, this._rowEnd = void 0, this._renderCallback(s, c), this._runRefreshCallbacks()
                        }
                        _runRefreshCallbacks() {
                            for (const s of this._refreshCallbacks) s(0);
                            this._refreshCallbacks = []
                        }
                    }
                },
                3236: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.Terminal = void 0;
                    const c = s(3614),
                        g = s(3656),
                        u = s(3551),
                        _ = s(9042),
                        v = s(3730),
                        D = s(1680),
                        d = s(3107),
                        a = s(5744),
                        o = s(2950),
                        i = s(1296),
                        l = s(428),
                        b = s(4269),
                        A = s(5114),
                        n = s(8934),
                        T = s(3230),
                        S = s(9312),
                        L = s(4725),
                        z = s(6731),
                        G = s(8055),
                        K = s(8969),
                        U = s(8460),
                        te = s(844),
                        fe = s(6114),
                        ye = s(8437),
                        Fe = s(2584),
                        ge = s(7399),
                        O = s(5941),
                        Z = s(9074),
                        q = s(2585),
                        re = s(5435),
                        we = s(4567),
                        Ee = s(779);
                    class je extends K.CoreTerminal {
                        get onFocus() {
                            return this._onFocus.event
                        }
                        get onBlur() {
                            return this._onBlur.event
                        }
                        get onA11yChar() {
                            return this._onA11yCharEmitter.event
                        }
                        get onA11yTab() {
                            return this._onA11yTabEmitter.event
                        }
                        get onWillOpen() {
                            return this._onWillOpen.event
                        }
                        constructor(oe = {}) {
                            super(oe), this.browser = fe, this._keyDownHandled = !1, this._keyDownSeen = !1, this._keyPressHandled = !1, this._unprocessedDeadKey = !1, this._accessibilityManager = this.register(new te.MutableDisposable), this._onCursorMove = this.register(new U.EventEmitter), this.onCursorMove = this._onCursorMove.event, this._onKey = this.register(new U.EventEmitter), this.onKey = this._onKey.event, this._onRender = this.register(new U.EventEmitter), this.onRender = this._onRender.event, this._onSelectionChange = this.register(new U.EventEmitter), this.onSelectionChange = this._onSelectionChange.event, this._onTitleChange = this.register(new U.EventEmitter), this.onTitleChange = this._onTitleChange.event, this._onBell = this.register(new U.EventEmitter), this.onBell = this._onBell.event, this._onFocus = this.register(new U.EventEmitter), this._onBlur = this.register(new U.EventEmitter), this._onA11yCharEmitter = this.register(new U.EventEmitter), this._onA11yTabEmitter = this.register(new U.EventEmitter), this._onWillOpen = this.register(new U.EventEmitter), this._setup(), this._decorationService = this._instantiationService.createInstance(Z.DecorationService), this._instantiationService.setService(q.IDecorationService, this._decorationService), this._linkProviderService = this._instantiationService.createInstance(Ee.LinkProviderService), this._instantiationService.setService(L.ILinkProviderService, this._linkProviderService), this._linkProviderService.registerLinkProvider(this._instantiationService.createInstance(v.OscLinkProvider)), this.register(this._inputHandler.onRequestBell(() => this._onBell.fire())), this.register(this._inputHandler.onRequestRefreshRows((W, Ce) => this.refresh(W, Ce))), this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus())), this.register(this._inputHandler.onRequestReset(() => this.reset())), this.register(this._inputHandler.onRequestWindowsOptionsReport(W => this._reportWindowsOptions(W))), this.register(this._inputHandler.onColor(W => this._handleColorEvent(W))), this.register((0, U.forwardEvent)(this._inputHandler.onCursorMove, this._onCursorMove)), this.register((0, U.forwardEvent)(this._inputHandler.onTitleChange, this._onTitleChange)), this.register((0, U.forwardEvent)(this._inputHandler.onA11yChar, this._onA11yCharEmitter)), this.register((0, U.forwardEvent)(this._inputHandler.onA11yTab, this._onA11yTabEmitter)), this.register(this._bufferService.onResize(W => this._afterResize(W.cols, W.rows))), this.register((0, te.toDisposable)(() => {
                                var W, Ce;
                                this._customKeyEventHandler = void 0, (Ce = (W = this.element) == null ? void 0 : W.parentNode) == null || Ce.removeChild(this.element)
                            }))
                        }
                        _handleColorEvent(oe) {
                            if (this._themeService)
                                for (const W of oe) {
                                    let Ce, pe = "";
                                    switch (W.index) {
                                        case 256:
                                            Ce = "foreground", pe = "10";
                                            break;
                                        case 257:
                                            Ce = "background", pe = "11";
                                            break;
                                        case 258:
                                            Ce = "cursor", pe = "12";
                                            break;
                                        default:
                                            Ce = "ansi", pe = "4;" + W.index
                                    }
                                    switch (W.type) {
                                        case 0:
                                            const Ne = G.color.toColorRGB(Ce === "ansi" ? this._themeService.colors.ansi[W.index] : this._themeService.colors[Ce]);
                                            this.coreService.triggerDataEvent(`${Fe.C0.ESC}]${pe};${(0,O.toRgbString)(Ne)}${Fe.C1_ESCAPED.ST}`);
                                            break;
                                        case 1:
                                            if (Ce === "ansi") this._themeService.modifyColors(Pe => Pe.ansi[W.index] = G.channels.toColor(...W.color));
                                            else {
                                                const Pe = Ce;
                                                this._themeService.modifyColors(Xe => Xe[Pe] = G.channels.toColor(...W.color))
                                            }
                                            break;
                                        case 2:
                                            this._themeService.restoreColor(W.index)
                                    }
                                }
                        }
                        _setup() {
                            super._setup(), this._customKeyEventHandler = void 0
                        }
                        get buffer() {
                            return this.buffers.active
                        }
                        focus() {
                            this.textarea && this.textarea.focus({
                                preventScroll: !0
                            })
                        }
                        _handleScreenReaderModeOptionChange(oe) {
                            oe ? !this._accessibilityManager.value && this._renderService && (this._accessibilityManager.value = this._instantiationService.createInstance(we.AccessibilityManager, this)) : this._accessibilityManager.clear()
                        }
                        _handleTextAreaFocus(oe) {
                            this.coreService.decPrivateModes.sendFocus && this.coreService.triggerDataEvent(Fe.C0.ESC + "[I"), this.element.classList.add("focus"), this._showCursor(), this._onFocus.fire()
                        }
                        blur() {
                            var oe;
                            return (oe = this.textarea) == null ? void 0 : oe.blur()
                        }
                        _handleTextAreaBlur() {
                            this.textarea.value = "", this.refresh(this.buffer.y, this.buffer.y), this.coreService.decPrivateModes.sendFocus && this.coreService.triggerDataEvent(Fe.C0.ESC + "[O"), this.element.classList.remove("focus"), this._onBlur.fire()
                        }
                        _syncTextArea() {
                            if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper.isComposing || !this._renderService) return;
                            const oe = this.buffer.ybase + this.buffer.y,
                                W = this.buffer.lines.get(oe);
                            if (!W) return;
                            const Ce = Math.min(this.buffer.x, this.cols - 1),
                                pe = this._renderService.dimensions.css.cell.height,
                                Ne = W.getWidth(Ce),
                                Pe = this._renderService.dimensions.css.cell.width * Ne,
                                Xe = this.buffer.y * this._renderService.dimensions.css.cell.height,
                                ut = Ce * this._renderService.dimensions.css.cell.width;
                            this.textarea.style.left = ut + "px", this.textarea.style.top = Xe + "px", this.textarea.style.width = Pe + "px", this.textarea.style.height = pe + "px", this.textarea.style.lineHeight = pe + "px", this.textarea.style.zIndex = "-5"
                        }
                        _initGlobal() {
                            this._bindKeys(), this.register((0, g.addDisposableDomListener)(this.element, "copy", W => {
                                this.hasSelection() && (0, c.copyHandler)(W, this._selectionService)
                            }));
                            const oe = W => (0, c.handlePasteEvent)(W, this.textarea, this.coreService, this.optionsService);
                            this.register((0, g.addDisposableDomListener)(this.textarea, "paste", oe)), this.register((0, g.addDisposableDomListener)(this.element, "paste", oe)), fe.isFirefox ? this.register((0, g.addDisposableDomListener)(this.element, "mousedown", W => {
                                W.button === 2 && (0, c.rightClickHandler)(W, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord)
                            })) : this.register((0, g.addDisposableDomListener)(this.element, "contextmenu", W => {
                                (0, c.rightClickHandler)(W, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord)
                            })), fe.isLinux && this.register((0, g.addDisposableDomListener)(this.element, "auxclick", W => {
                                W.button === 1 && (0, c.moveTextAreaUnderMouseCursor)(W, this.textarea, this.screenElement)
                            }))
                        }
                        _bindKeys() {
                            this.register((0, g.addDisposableDomListener)(this.textarea, "keyup", oe => this._keyUp(oe), !0)), this.register((0, g.addDisposableDomListener)(this.textarea, "keydown", oe => this._keyDown(oe), !0)), this.register((0, g.addDisposableDomListener)(this.textarea, "keypress", oe => this._keyPress(oe), !0)), this.register((0, g.addDisposableDomListener)(this.textarea, "compositionstart", () => this._compositionHelper.compositionstart())), this.register((0, g.addDisposableDomListener)(this.textarea, "compositionupdate", oe => this._compositionHelper.compositionupdate(oe))), this.register((0, g.addDisposableDomListener)(this.textarea, "compositionend", () => this._compositionHelper.compositionend())), this.register((0, g.addDisposableDomListener)(this.textarea, "input", oe => this._inputEvent(oe), !0)), this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()))
                        }
                        open(oe) {
                            var Ce;
                            if (!oe) throw new Error("Terminal requires a parent element.");
                            if (oe.isConnected || this._logService.debug("Terminal.open was called on an element that was not attached to the DOM"), ((Ce = this.element) == null ? void 0 : Ce.ownerDocument.defaultView) && this._coreBrowserService) return void(this.element.ownerDocument.defaultView !== this._coreBrowserService.window && (this._coreBrowserService.window = this.element.ownerDocument.defaultView));
                            this._document = oe.ownerDocument, this.options.documentOverride && this.options.documentOverride instanceof Document && (this._document = this.optionsService.rawOptions.documentOverride), this.element = this._document.createElement("div"), this.element.dir = "ltr", this.element.classList.add("terminal"), this.element.classList.add("xterm"), oe.appendChild(this.element);
                            const W = this._document.createDocumentFragment();
                            this._viewportElement = this._document.createElement("div"), this._viewportElement.classList.add("xterm-viewport"), W.appendChild(this._viewportElement), this._viewportScrollArea = this._document.createElement("div"), this._viewportScrollArea.classList.add("xterm-scroll-area"), this._viewportElement.appendChild(this._viewportScrollArea), this.screenElement = this._document.createElement("div"), this.screenElement.classList.add("xterm-screen"), this.register((0, g.addDisposableDomListener)(this.screenElement, "mousemove", pe => this.updateCursorStyle(pe))), this._helperContainer = this._document.createElement("div"), this._helperContainer.classList.add("xterm-helpers"), this.screenElement.appendChild(this._helperContainer), W.appendChild(this.screenElement), this.textarea = this._document.createElement("textarea"), this.textarea.classList.add("xterm-helper-textarea"), this.textarea.setAttribute("aria-label", _.promptLabel), fe.isChromeOS || this.textarea.setAttribute("aria-multiline", "false"), this.textarea.setAttribute("autocorrect", "off"), this.textarea.setAttribute("autocapitalize", "off"), this.textarea.setAttribute("spellcheck", "false"), this.textarea.tabIndex = 0, this._coreBrowserService = this.register(this._instantiationService.createInstance(A.CoreBrowserService, this.textarea, oe.ownerDocument.defaultView ?? window, this._document ?? typeof window < "u" ? window.document : null)), this._instantiationService.setService(L.ICoreBrowserService, this._coreBrowserService), this.register((0, g.addDisposableDomListener)(this.textarea, "focus", pe => this._handleTextAreaFocus(pe))), this.register((0, g.addDisposableDomListener)(this.textarea, "blur", () => this._handleTextAreaBlur())), this._helperContainer.appendChild(this.textarea), this._charSizeService = this._instantiationService.createInstance(l.CharSizeService, this._document, this._helperContainer), this._instantiationService.setService(L.ICharSizeService, this._charSizeService), this._themeService = this._instantiationService.createInstance(z.ThemeService), this._instantiationService.setService(L.IThemeService, this._themeService), this._characterJoinerService = this._instantiationService.createInstance(b.CharacterJoinerService), this._instantiationService.setService(L.ICharacterJoinerService, this._characterJoinerService), this._renderService = this.register(this._instantiationService.createInstance(T.RenderService, this.rows, this.screenElement)), this._instantiationService.setService(L.IRenderService, this._renderService), this.register(this._renderService.onRenderedViewportChange(pe => this._onRender.fire(pe))), this.onResize(pe => this._renderService.resize(pe.cols, pe.rows)), this._compositionView = this._document.createElement("div"), this._compositionView.classList.add("composition-view"), this._compositionHelper = this._instantiationService.createInstance(o.CompositionHelper, this.textarea, this._compositionView), this._helperContainer.appendChild(this._compositionView), this._mouseService = this._instantiationService.createInstance(n.MouseService), this._instantiationService.setService(L.IMouseService, this._mouseService), this.linkifier = this.register(this._instantiationService.createInstance(u.Linkifier, this.screenElement)), this.element.appendChild(W);
                            try {
                                this._onWillOpen.fire(this.element)
                            } catch {}
                            this._renderService.hasRenderer() || this._renderService.setRenderer(this._createRenderer()), this.viewport = this._instantiationService.createInstance(D.Viewport, this._viewportElement, this._viewportScrollArea), this.viewport.onRequestScrollLines(pe => this.scrollLines(pe.amount, pe.suppressScrollEvent, 1)), this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport.syncScrollArea())), this.register(this.viewport), this.register(this.onCursorMove(() => {
                                this._renderService.handleCursorMove(), this._syncTextArea()
                            })), this.register(this.onResize(() => this._renderService.handleResize(this.cols, this.rows))), this.register(this.onBlur(() => this._renderService.handleBlur())), this.register(this.onFocus(() => this._renderService.handleFocus())), this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea())), this._selectionService = this.register(this._instantiationService.createInstance(S.SelectionService, this.element, this.screenElement, this.linkifier)), this._instantiationService.setService(L.ISelectionService, this._selectionService), this.register(this._selectionService.onRequestScrollLines(pe => this.scrollLines(pe.amount, pe.suppressScrollEvent))), this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire())), this.register(this._selectionService.onRequestRedraw(pe => this._renderService.handleSelectionChanged(pe.start, pe.end, pe.columnSelectMode))), this.register(this._selectionService.onLinuxMouseSelection(pe => {
                                this.textarea.value = pe, this.textarea.focus(), this.textarea.select()
                            })), this.register(this._onScroll.event(pe => {
                                this.viewport.syncScrollArea(), this._selectionService.refresh()
                            })), this.register((0, g.addDisposableDomListener)(this._viewportElement, "scroll", () => this._selectionService.refresh())), this.register(this._instantiationService.createInstance(d.BufferDecorationRenderer, this.screenElement)), this.register((0, g.addDisposableDomListener)(this.element, "mousedown", pe => this._selectionService.handleMouseDown(pe))), this.coreMouseService.areMouseEventsActive ? (this._selectionService.disable(), this.element.classList.add("enable-mouse-events")) : this._selectionService.enable(), this.options.screenReaderMode && (this._accessibilityManager.value = this._instantiationService.createInstance(we.AccessibilityManager, this)), this.register(this.optionsService.onSpecificOptionChange("screenReaderMode", pe => this._handleScreenReaderModeOptionChange(pe))), this.options.overviewRulerWidth && (this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(a.OverviewRulerRenderer, this._viewportElement, this.screenElement))), this.optionsService.onSpecificOptionChange("overviewRulerWidth", pe => {
                                !this._overviewRulerRenderer && pe && this._viewportElement && this.screenElement && (this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(a.OverviewRulerRenderer, this._viewportElement, this.screenElement)))
                            }), this._charSizeService.measure(), this.refresh(0, this.rows - 1), this._initGlobal(), this.bindMouse()
                        }
                        _createRenderer() {
                            return this._instantiationService.createInstance(i.DomRenderer, this, this._document, this.element, this.screenElement, this._viewportElement, this._helperContainer, this.linkifier)
                        }
                        bindMouse() {
                            const oe = this,
                                W = this.element;

                            function Ce(Pe) {
                                const Xe = oe._mouseService.getMouseReportCoords(Pe, oe.screenElement);
                                if (!Xe) return !1;
                                let ut, ct;
                                switch (Pe.overrideType || Pe.type) {
                                    case "mousemove":
                                        ct = 32, Pe.buttons === void 0 ? (ut = 3, Pe.button !== void 0 && (ut = Pe.button < 3 ? Pe.button : 3)) : ut = 1 & Pe.buttons ? 0 : 4 & Pe.buttons ? 1 : 2 & Pe.buttons ? 2 : 3;
                                        break;
                                    case "mouseup":
                                        ct = 0, ut = Pe.button < 3 ? Pe.button : 3;
                                        break;
                                    case "mousedown":
                                        ct = 1, ut = Pe.button < 3 ? Pe.button : 3;
                                        break;
                                    case "wheel":
                                        if (oe._customWheelEventHandler && oe._customWheelEventHandler(Pe) === !1 || oe.viewport.getLinesScrolled(Pe) === 0) return !1;
                                        ct = Pe.deltaY < 0 ? 0 : 1, ut = 4;
                                        break;
                                    default:
                                        return !1
                                }
                                return !(ct === void 0 || ut === void 0 || ut > 4) && oe.coreMouseService.triggerMouseEvent({
                                    col: Xe.col,
                                    row: Xe.row,
                                    x: Xe.x,
                                    y: Xe.y,
                                    button: ut,
                                    action: ct,
                                    ctrl: Pe.ctrlKey,
                                    alt: Pe.altKey,
                                    shift: Pe.shiftKey
                                })
                            }
                            const pe = {
                                    mouseup: null,
                                    wheel: null,
                                    mousedrag: null,
                                    mousemove: null
                                },
                                Ne = {
                                    mouseup: Pe => (Ce(Pe), Pe.buttons || (this._document.removeEventListener("mouseup", pe.mouseup), pe.mousedrag && this._document.removeEventListener("mousemove", pe.mousedrag)), this.cancel(Pe)),
                                    wheel: Pe => (Ce(Pe), this.cancel(Pe, !0)),
                                    mousedrag: Pe => {
                                        Pe.buttons && Ce(Pe)
                                    },
                                    mousemove: Pe => {
                                        Pe.buttons || Ce(Pe)
                                    }
                                };
                            this.register(this.coreMouseService.onProtocolChange(Pe => {
                                Pe ? (this.optionsService.rawOptions.logLevel === "debug" && this._logService.debug("Binding to mouse events:", this.coreMouseService.explainEvents(Pe)), this.element.classList.add("enable-mouse-events"), this._selectionService.disable()) : (this._logService.debug("Unbinding from mouse events."), this.element.classList.remove("enable-mouse-events"), this._selectionService.enable()), 8 & Pe ? pe.mousemove || (W.addEventListener("mousemove", Ne.mousemove), pe.mousemove = Ne.mousemove) : (W.removeEventListener("mousemove", pe.mousemove), pe.mousemove = null), 16 & Pe ? pe.wheel || (W.addEventListener("wheel", Ne.wheel, {
                                    passive: !1
                                }), pe.wheel = Ne.wheel) : (W.removeEventListener("wheel", pe.wheel), pe.wheel = null), 2 & Pe ? pe.mouseup || (pe.mouseup = Ne.mouseup) : (this._document.removeEventListener("mouseup", pe.mouseup), pe.mouseup = null), 4 & Pe ? pe.mousedrag || (pe.mousedrag = Ne.mousedrag) : (this._document.removeEventListener("mousemove", pe.mousedrag), pe.mousedrag = null)
                            })), this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol, this.register((0, g.addDisposableDomListener)(W, "mousedown", Pe => {
                                if (Pe.preventDefault(), this.focus(), this.coreMouseService.areMouseEventsActive && !this._selectionService.shouldForceSelection(Pe)) return Ce(Pe), pe.mouseup && this._document.addEventListener("mouseup", pe.mouseup), pe.mousedrag && this._document.addEventListener("mousemove", pe.mousedrag), this.cancel(Pe)
                            })), this.register((0, g.addDisposableDomListener)(W, "wheel", Pe => {
                                if (!pe.wheel) {
                                    if (this._customWheelEventHandler && this._customWheelEventHandler(Pe) === !1) return !1;
                                    if (!this.buffer.hasScrollback) {
                                        const Xe = this.viewport.getLinesScrolled(Pe);
                                        if (Xe === 0) return;
                                        const ut = Fe.C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? "O" : "[") + (Pe.deltaY < 0 ? "A" : "B");
                                        let ct = "";
                                        for (let $e = 0; $e < Math.abs(Xe); $e++) ct += ut;
                                        return this.coreService.triggerDataEvent(ct, !0), this.cancel(Pe, !0)
                                    }
                                    return this.viewport.handleWheel(Pe) ? this.cancel(Pe) : void 0
                                }
                            }, {
                                passive: !1
                            })), this.register((0, g.addDisposableDomListener)(W, "touchstart", Pe => {
                                if (!this.coreMouseService.areMouseEventsActive) return this.viewport.handleTouchStart(Pe), this.cancel(Pe)
                            }, {
                                passive: !0
                            })), this.register((0, g.addDisposableDomListener)(W, "touchmove", Pe => {
                                if (!this.coreMouseService.areMouseEventsActive) return this.viewport.handleTouchMove(Pe) ? void 0 : this.cancel(Pe)
                            }, {
                                passive: !1
                            }))
                        }
                        refresh(oe, W) {
                            var Ce;
                            (Ce = this._renderService) == null || Ce.refreshRows(oe, W)
                        }
                        updateCursorStyle(oe) {
                            var W;
                            (W = this._selectionService) != null && W.shouldColumnSelect(oe) ? this.element.classList.add("column-select") : this.element.classList.remove("column-select")
                        }
                        _showCursor() {
                            this.coreService.isCursorInitialized || (this.coreService.isCursorInitialized = !0, this.refresh(this.buffer.y, this.buffer.y))
                        }
                        scrollLines(oe, W, Ce = 0) {
                            var pe;
                            Ce === 1 ? (super.scrollLines(oe, W, Ce), this.refresh(0, this.rows - 1)) : (pe = this.viewport) == null || pe.scrollLines(oe)
                        }
                        paste(oe) {
                            (0, c.paste)(oe, this.textarea, this.coreService, this.optionsService)
                        }
                        attachCustomKeyEventHandler(oe) {
                            this._customKeyEventHandler = oe
                        }
                        attachCustomWheelEventHandler(oe) {
                            this._customWheelEventHandler = oe
                        }
                        registerLinkProvider(oe) {
                            return this._linkProviderService.registerLinkProvider(oe)
                        }
                        registerCharacterJoiner(oe) {
                            if (!this._characterJoinerService) throw new Error("Terminal must be opened first");
                            const W = this._characterJoinerService.register(oe);
                            return this.refresh(0, this.rows - 1), W
                        }
                        deregisterCharacterJoiner(oe) {
                            if (!this._characterJoinerService) throw new Error("Terminal must be opened first");
                            this._characterJoinerService.deregister(oe) && this.refresh(0, this.rows - 1)
                        }
                        get markers() {
                            return this.buffer.markers
                        }
                        registerMarker(oe) {
                            return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + oe)
                        }
                        registerDecoration(oe) {
                            return this._decorationService.registerDecoration(oe)
                        }
                        hasSelection() {
                            return !!this._selectionService && this._selectionService.hasSelection
                        }
                        select(oe, W, Ce) {
                            this._selectionService.setSelection(oe, W, Ce)
                        }
                        getSelection() {
                            return this._selectionService ? this._selectionService.selectionText : ""
                        }
                        getSelectionPosition() {
                            if (this._selectionService && this._selectionService.hasSelection) return {
                                start: {
                                    x: this._selectionService.selectionStart[0],
                                    y: this._selectionService.selectionStart[1]
                                },
                                end: {
                                    x: this._selectionService.selectionEnd[0],
                                    y: this._selectionService.selectionEnd[1]
                                }
                            }
                        }
                        clearSelection() {
                            var oe;
                            (oe = this._selectionService) == null || oe.clearSelection()
                        }
                        selectAll() {
                            var oe;
                            (oe = this._selectionService) == null || oe.selectAll()
                        }
                        selectLines(oe, W) {
                            var Ce;
                            (Ce = this._selectionService) == null || Ce.selectLines(oe, W)
                        }
                        _keyDown(oe) {
                            if (this._keyDownHandled = !1, this._keyDownSeen = !0, this._customKeyEventHandler && this._customKeyEventHandler(oe) === !1) return !1;
                            const W = this.browser.isMac && this.options.macOptionIsMeta && oe.altKey;
                            if (!W && !this._compositionHelper.keydown(oe)) return this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp && this.scrollToBottom(), !1;
                            W || oe.key !== "Dead" && oe.key !== "AltGraph" || (this._unprocessedDeadKey = !0);
                            const Ce = (0, ge.evaluateKeyboardEvent)(oe, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);
                            if (this.updateCursorStyle(oe), Ce.type === 3 || Ce.type === 2) {
                                const pe = this.rows - 1;
                                return this.scrollLines(Ce.type === 2 ? -pe : pe), this.cancel(oe, !0)
                            }
                            return Ce.type === 1 && this.selectAll(), !!this._isThirdLevelShift(this.browser, oe) || (Ce.cancel && this.cancel(oe, !0), !Ce.key || !!(oe.key && !oe.ctrlKey && !oe.altKey && !oe.metaKey && oe.key.length === 1 && oe.key.charCodeAt(0) >= 65 && oe.key.charCodeAt(0) <= 90) || (this._unprocessedDeadKey ? (this._unprocessedDeadKey = !1, !0) : (Ce.key !== Fe.C0.ETX && Ce.key !== Fe.C0.CR || (this.textarea.value = ""), this._onKey.fire({
                                key: Ce.key,
                                domEvent: oe
                            }), this._showCursor(), this.coreService.triggerDataEvent(Ce.key, !0), !this.optionsService.rawOptions.screenReaderMode || oe.altKey || oe.ctrlKey ? this.cancel(oe, !0) : void(this._keyDownHandled = !0))))
                        }
                        _isThirdLevelShift(oe, W) {
                            const Ce = oe.isMac && !this.options.macOptionIsMeta && W.altKey && !W.ctrlKey && !W.metaKey || oe.isWindows && W.altKey && W.ctrlKey && !W.metaKey || oe.isWindows && W.getModifierState("AltGraph");
                            return W.type === "keypress" ? Ce : Ce && (!W.keyCode || W.keyCode > 47)
                        }
                        _keyUp(oe) {
                            this._keyDownSeen = !1, this._customKeyEventHandler && this._customKeyEventHandler(oe) === !1 || (function(W) {
                                return W.keyCode === 16 || W.keyCode === 17 || W.keyCode === 18
                            }(oe) || this.focus(), this.updateCursorStyle(oe), this._keyPressHandled = !1)
                        }
                        _keyPress(oe) {
                            let W;
                            if (this._keyPressHandled = !1, this._keyDownHandled || this._customKeyEventHandler && this._customKeyEventHandler(oe) === !1) return !1;
                            if (this.cancel(oe), oe.charCode) W = oe.charCode;
                            else if (oe.which === null || oe.which === void 0) W = oe.keyCode;
                            else {
                                if (oe.which === 0 || oe.charCode === 0) return !1;
                                W = oe.which
                            }
                            return !(!W || (oe.altKey || oe.ctrlKey || oe.metaKey) && !this._isThirdLevelShift(this.browser, oe) || (W = String.fromCharCode(W), this._onKey.fire({
                                key: W,
                                domEvent: oe
                            }), this._showCursor(), this.coreService.triggerDataEvent(W, !0), this._keyPressHandled = !0, this._unprocessedDeadKey = !1, 0))
                        }
                        _inputEvent(oe) {
                            if (oe.data && oe.inputType === "insertText" && (!oe.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {
                                if (this._keyPressHandled) return !1;
                                this._unprocessedDeadKey = !1;
                                const W = oe.data;
                                return this.coreService.triggerDataEvent(W, !0), this.cancel(oe), !0
                            }
                            return !1
                        }
                        resize(oe, W) {
                            oe !== this.cols || W !== this.rows ? super.resize(oe, W) : this._charSizeService && !this._charSizeService.hasValidSize && this._charSizeService.measure()
                        }
                        _afterResize(oe, W) {
                            var Ce, pe;
                            (Ce = this._charSizeService) == null || Ce.measure(), (pe = this.viewport) == null || pe.syncScrollArea(!0)
                        }
                        clear() {
                            var oe;
                            if (this.buffer.ybase !== 0 || this.buffer.y !== 0) {
                                this.buffer.clearAllMarkers(), this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)), this.buffer.lines.length = 1, this.buffer.ydisp = 0, this.buffer.ybase = 0, this.buffer.y = 0;
                                for (let W = 1; W < this.rows; W++) this.buffer.lines.push(this.buffer.getBlankLine(ye.DEFAULT_ATTR_DATA));
                                this._onScroll.fire({
                                    position: this.buffer.ydisp,
                                    source: 0
                                }), (oe = this.viewport) == null || oe.reset(), this.refresh(0, this.rows - 1)
                            }
                        }
                        reset() {
                            var W, Ce;
                            this.options.rows = this.rows, this.options.cols = this.cols;
                            const oe = this._customKeyEventHandler;
                            this._setup(), super.reset(), (W = this._selectionService) == null || W.reset(), this._decorationService.reset(), (Ce = this.viewport) == null || Ce.reset(), this._customKeyEventHandler = oe, this.refresh(0, this.rows - 1)
                        }
                        clearTextureAtlas() {
                            var oe;
                            (oe = this._renderService) == null || oe.clearTextureAtlas()
                        }
                        _reportFocus() {
                            var oe;
                            (oe = this.element) != null && oe.classList.contains("focus") ? this.coreService.triggerDataEvent(Fe.C0.ESC + "[I") : this.coreService.triggerDataEvent(Fe.C0.ESC + "[O")
                        }
                        _reportWindowsOptions(oe) {
                            if (this._renderService) switch (oe) {
                                case re.WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:
                                    const W = this._renderService.dimensions.css.canvas.width.toFixed(0),
                                        Ce = this._renderService.dimensions.css.canvas.height.toFixed(0);
                                    this.coreService.triggerDataEvent(`${Fe.C0.ESC}[4;${Ce};${W}t`);
                                    break;
                                case re.WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:
                                    const pe = this._renderService.dimensions.css.cell.width.toFixed(0),
                                        Ne = this._renderService.dimensions.css.cell.height.toFixed(0);
                                    this.coreService.triggerDataEvent(`${Fe.C0.ESC}[6;${Ne};${pe}t`)
                            }
                        }
                        cancel(oe, W) {
                            if (this.options.cancelEvents || W) return oe.preventDefault(), oe.stopPropagation(), !1
                        }
                    }
                    r.Terminal = je
                },
                9924: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.TimeBasedDebouncer = void 0, r.TimeBasedDebouncer = class {
                        constructor(s, c = 1e3) {
                            this._renderCallback = s, this._debounceThresholdMS = c, this._lastRefreshMs = 0, this._additionalRefreshRequested = !1
                        }
                        dispose() {
                            this._refreshTimeoutID && clearTimeout(this._refreshTimeoutID)
                        }
                        refresh(s, c, g) {
                            this._rowCount = g, s = s !== void 0 ? s : 0, c = c !== void 0 ? c : this._rowCount - 1, this._rowStart = this._rowStart !== void 0 ? Math.min(this._rowStart, s) : s, this._rowEnd = this._rowEnd !== void 0 ? Math.max(this._rowEnd, c) : c;
                            const u = Date.now();
                            if (u - this._lastRefreshMs >= this._debounceThresholdMS) this._lastRefreshMs = u, this._innerRefresh();
                            else if (!this._additionalRefreshRequested) {
                                const _ = u - this._lastRefreshMs,
                                    v = this._debounceThresholdMS - _;
                                this._additionalRefreshRequested = !0, this._refreshTimeoutID = window.setTimeout(() => {
                                    this._lastRefreshMs = Date.now(), this._innerRefresh(), this._additionalRefreshRequested = !1, this._refreshTimeoutID = void 0
                                }, v)
                            }
                        }
                        _innerRefresh() {
                            if (this._rowStart === void 0 || this._rowEnd === void 0 || this._rowCount === void 0) return;
                            const s = Math.max(this._rowStart, 0),
                                c = Math.min(this._rowEnd, this._rowCount - 1);
                            this._rowStart = void 0, this._rowEnd = void 0, this._renderCallback(s, c)
                        }
                    }
                },
                1680: function(C, r, s) {
                    var c = this && this.__decorate || function(o, i, l, b) {
                            var A, n = arguments.length,
                                T = n < 3 ? i : b === null ? b = Object.getOwnPropertyDescriptor(i, l) : b;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") T = Reflect.decorate(o, i, l, b);
                            else
                                for (var S = o.length - 1; S >= 0; S--)(A = o[S]) && (T = (n < 3 ? A(T) : n > 3 ? A(i, l, T) : A(i, l)) || T);
                            return n > 3 && T && Object.defineProperty(i, l, T), T
                        },
                        g = this && this.__param || function(o, i) {
                            return function(l, b) {
                                i(l, b, o)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.Viewport = void 0;
                    const u = s(3656),
                        _ = s(4725),
                        v = s(8460),
                        D = s(844),
                        d = s(2585);
                    let a = r.Viewport = class extends D.Disposable {
                        constructor(o, i, l, b, A, n, T, S) {
                            super(), this._viewportElement = o, this._scrollArea = i, this._bufferService = l, this._optionsService = b, this._charSizeService = A, this._renderService = n, this._coreBrowserService = T, this.scrollBarWidth = 0, this._currentRowHeight = 0, this._currentDeviceCellHeight = 0, this._lastRecordedBufferLength = 0, this._lastRecordedViewportHeight = 0, this._lastRecordedBufferHeight = 0, this._lastTouchY = 0, this._lastScrollTop = 0, this._wheelPartialScroll = 0, this._refreshAnimationFrame = null, this._ignoreNextScrollEvent = !1, this._smoothScrollState = {
                                startTime: 0,
                                origin: -1,
                                target: -1
                            }, this._onRequestScrollLines = this.register(new v.EventEmitter), this.onRequestScrollLines = this._onRequestScrollLines.event, this.scrollBarWidth = this._viewportElement.offsetWidth - this._scrollArea.offsetWidth || 15, this.register((0, u.addDisposableDomListener)(this._viewportElement, "scroll", this._handleScroll.bind(this))), this._activeBuffer = this._bufferService.buffer, this.register(this._bufferService.buffers.onBufferActivate(L => this._activeBuffer = L.activeBuffer)), this._renderDimensions = this._renderService.dimensions, this.register(this._renderService.onDimensionsChange(L => this._renderDimensions = L)), this._handleThemeChange(S.colors), this.register(S.onChangeColors(L => this._handleThemeChange(L))), this.register(this._optionsService.onSpecificOptionChange("scrollback", () => this.syncScrollArea())), setTimeout(() => this.syncScrollArea())
                        }
                        _handleThemeChange(o) {
                            this._viewportElement.style.backgroundColor = o.background.css
                        }
                        reset() {
                            this._currentRowHeight = 0, this._currentDeviceCellHeight = 0, this._lastRecordedBufferLength = 0, this._lastRecordedViewportHeight = 0, this._lastRecordedBufferHeight = 0, this._lastTouchY = 0, this._lastScrollTop = 0, this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea())
                        }
                        _refresh(o) {
                            if (o) return this._innerRefresh(), void(this._refreshAnimationFrame !== null && this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame));
                            this._refreshAnimationFrame === null && (this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh()))
                        }
                        _innerRefresh() {
                            if (this._charSizeService.height > 0) {
                                this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr, this._currentDeviceCellHeight = this._renderDimensions.device.cell.height, this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;
                                const i = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);
                                this._lastRecordedBufferHeight !== i && (this._lastRecordedBufferHeight = i, this._scrollArea.style.height = this._lastRecordedBufferHeight + "px")
                            }
                            const o = this._bufferService.buffer.ydisp * this._currentRowHeight;
                            this._viewportElement.scrollTop !== o && (this._ignoreNextScrollEvent = !0, this._viewportElement.scrollTop = o), this._refreshAnimationFrame = null
                        }
                        syncScrollArea(o = !1) {
                            if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) return this._lastRecordedBufferLength = this._bufferService.buffer.lines.length, void this._refresh(o);
                            this._lastRecordedViewportHeight === this._renderService.dimensions.css.canvas.height && this._lastScrollTop === this._activeBuffer.ydisp * this._currentRowHeight && this._renderDimensions.device.cell.height === this._currentDeviceCellHeight || this._refresh(o)
                        }
                        _handleScroll(o) {
                            if (this._lastScrollTop = this._viewportElement.scrollTop, !this._viewportElement.offsetParent) return;
                            if (this._ignoreNextScrollEvent) return this._ignoreNextScrollEvent = !1, void this._onRequestScrollLines.fire({
                                amount: 0,
                                suppressScrollEvent: !0
                            });
                            const i = Math.round(this._lastScrollTop / this._currentRowHeight) - this._bufferService.buffer.ydisp;
                            this._onRequestScrollLines.fire({
                                amount: i,
                                suppressScrollEvent: !0
                            })
                        }
                        _smoothScroll() {
                            if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) return;
                            const o = this._smoothScrollPercent();
                            this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(o * (this._smoothScrollState.target - this._smoothScrollState.origin)), o < 1 ? this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll()) : this._clearSmoothScrollState()
                        }
                        _smoothScrollPercent() {
                            return this._optionsService.rawOptions.smoothScrollDuration && this._smoothScrollState.startTime ? Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0) : 1
                        }
                        _clearSmoothScrollState() {
                            this._smoothScrollState.startTime = 0, this._smoothScrollState.origin = -1, this._smoothScrollState.target = -1
                        }
                        _bubbleScroll(o, i) {
                            const l = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;
                            return !(i < 0 && this._viewportElement.scrollTop !== 0 || i > 0 && l < this._lastRecordedBufferHeight) || (o.cancelable && o.preventDefault(), !1)
                        }
                        handleWheel(o) {
                            const i = this._getPixelsScrolled(o);
                            return i !== 0 && (this._optionsService.rawOptions.smoothScrollDuration ? (this._smoothScrollState.startTime = Date.now(), this._smoothScrollPercent() < 1 ? (this._smoothScrollState.origin = this._viewportElement.scrollTop, this._smoothScrollState.target === -1 ? this._smoothScrollState.target = this._viewportElement.scrollTop + i : this._smoothScrollState.target += i, this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0), this._smoothScroll()) : this._clearSmoothScrollState()) : this._viewportElement.scrollTop += i, this._bubbleScroll(o, i))
                        }
                        scrollLines(o) {
                            if (o !== 0)
                                if (this._optionsService.rawOptions.smoothScrollDuration) {
                                    const i = o * this._currentRowHeight;
                                    this._smoothScrollState.startTime = Date.now(), this._smoothScrollPercent() < 1 ? (this._smoothScrollState.origin = this._viewportElement.scrollTop, this._smoothScrollState.target = this._smoothScrollState.origin + i, this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0), this._smoothScroll()) : this._clearSmoothScrollState()
                                } else this._onRequestScrollLines.fire({
                                    amount: o,
                                    suppressScrollEvent: !1
                                })
                        }
                        _getPixelsScrolled(o) {
                            if (o.deltaY === 0 || o.shiftKey) return 0;
                            let i = this._applyScrollModifier(o.deltaY, o);
                            return o.deltaMode === WheelEvent.DOM_DELTA_LINE ? i *= this._currentRowHeight : o.deltaMode === WheelEvent.DOM_DELTA_PAGE && (i *= this._currentRowHeight * this._bufferService.rows), i
                        }
                        getBufferElements(o, i) {
                            var S;
                            let l, b = "";
                            const A = [],
                                n = i ?? this._bufferService.buffer.lines.length,
                                T = this._bufferService.buffer.lines;
                            for (let L = o; L < n; L++) {
                                const z = T.get(L);
                                if (!z) continue;
                                const G = (S = T.get(L + 1)) == null ? void 0 : S.isWrapped;
                                if (b += z.translateToString(!G), !G || L === T.length - 1) {
                                    const K = document.createElement("div");
                                    K.textContent = b, A.push(K), b.length > 0 && (l = K), b = ""
                                }
                            }
                            return {
                                bufferElements: A,
                                cursorElement: l
                            }
                        }
                        getLinesScrolled(o) {
                            if (o.deltaY === 0 || o.shiftKey) return 0;
                            let i = this._applyScrollModifier(o.deltaY, o);
                            return o.deltaMode === WheelEvent.DOM_DELTA_PIXEL ? (i /= this._currentRowHeight + 0, this._wheelPartialScroll += i, i = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1), this._wheelPartialScroll %= 1) : o.deltaMode === WheelEvent.DOM_DELTA_PAGE && (i *= this._bufferService.rows), i
                        }
                        _applyScrollModifier(o, i) {
                            const l = this._optionsService.rawOptions.fastScrollModifier;
                            return l === "alt" && i.altKey || l === "ctrl" && i.ctrlKey || l === "shift" && i.shiftKey ? o * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity : o * this._optionsService.rawOptions.scrollSensitivity
                        }
                        handleTouchStart(o) {
                            this._lastTouchY = o.touches[0].pageY
                        }
                        handleTouchMove(o) {
                            const i = this._lastTouchY - o.touches[0].pageY;
                            return this._lastTouchY = o.touches[0].pageY, i !== 0 && (this._viewportElement.scrollTop += i, this._bubbleScroll(o, i))
                        }
                    };
                    r.Viewport = a = c([g(2, d.IBufferService), g(3, d.IOptionsService), g(4, _.ICharSizeService), g(5, _.IRenderService), g(6, _.ICoreBrowserService), g(7, _.IThemeService)], a)
                },
                3107: function(C, r, s) {
                    var c = this && this.__decorate || function(d, a, o, i) {
                            var l, b = arguments.length,
                                A = b < 3 ? a : i === null ? i = Object.getOwnPropertyDescriptor(a, o) : i;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") A = Reflect.decorate(d, a, o, i);
                            else
                                for (var n = d.length - 1; n >= 0; n--)(l = d[n]) && (A = (b < 3 ? l(A) : b > 3 ? l(a, o, A) : l(a, o)) || A);
                            return b > 3 && A && Object.defineProperty(a, o, A), A
                        },
                        g = this && this.__param || function(d, a) {
                            return function(o, i) {
                                a(o, i, d)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.BufferDecorationRenderer = void 0;
                    const u = s(4725),
                        _ = s(844),
                        v = s(2585);
                    let D = r.BufferDecorationRenderer = class extends _.Disposable {
                        constructor(d, a, o, i, l) {
                            super(), this._screenElement = d, this._bufferService = a, this._coreBrowserService = o, this._decorationService = i, this._renderService = l, this._decorationElements = new Map, this._altBufferIsActive = !1, this._dimensionsChanged = !1, this._container = document.createElement("div"), this._container.classList.add("xterm-decoration-container"), this._screenElement.appendChild(this._container), this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations())), this.register(this._renderService.onDimensionsChange(() => {
                                this._dimensionsChanged = !0, this._queueRefresh()
                            })), this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh())), this.register(this._bufferService.buffers.onBufferActivate(() => {
                                this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt
                            })), this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh())), this.register(this._decorationService.onDecorationRemoved(b => this._removeDecoration(b))), this.register((0, _.toDisposable)(() => {
                                this._container.remove(), this._decorationElements.clear()
                            }))
                        }
                        _queueRefresh() {
                            this._animationFrame === void 0 && (this._animationFrame = this._renderService.addRefreshCallback(() => {
                                this._doRefreshDecorations(), this._animationFrame = void 0
                            }))
                        }
                        _doRefreshDecorations() {
                            for (const d of this._decorationService.decorations) this._renderDecoration(d);
                            this._dimensionsChanged = !1
                        }
                        _renderDecoration(d) {
                            this._refreshStyle(d), this._dimensionsChanged && this._refreshXPosition(d)
                        }
                        _createElement(d) {
                            var i;
                            const a = this._coreBrowserService.mainDocument.createElement("div");
                            a.classList.add("xterm-decoration"), a.classList.toggle("xterm-decoration-top-layer", ((i = d == null ? void 0 : d.options) == null ? void 0 : i.layer) === "top"), a.style.width = `${Math.round((d.options.width||1)*this._renderService.dimensions.css.cell.width)}px`, a.style.height = (d.options.height || 1) * this._renderService.dimensions.css.cell.height + "px", a.style.top = (d.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height + "px", a.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;
                            const o = d.options.x ?? 0;
                            return o && o > this._bufferService.cols && (a.style.display = "none"), this._refreshXPosition(d, a), a
                        }
                        _refreshStyle(d) {
                            const a = d.marker.line - this._bufferService.buffers.active.ydisp;
                            if (a < 0 || a >= this._bufferService.rows) d.element && (d.element.style.display = "none", d.onRenderEmitter.fire(d.element));
                            else {
                                let o = this._decorationElements.get(d);
                                o || (o = this._createElement(d), d.element = o, this._decorationElements.set(d, o), this._container.appendChild(o), d.onDispose(() => {
                                    this._decorationElements.delete(d), o.remove()
                                })), o.style.top = a * this._renderService.dimensions.css.cell.height + "px", o.style.display = this._altBufferIsActive ? "none" : "block", d.onRenderEmitter.fire(o)
                            }
                        }
                        _refreshXPosition(d, a = d.element) {
                            if (!a) return;
                            const o = d.options.x ?? 0;
                            (d.options.anchor || "left") === "right" ? a.style.right = o ? o * this._renderService.dimensions.css.cell.width + "px" : "": a.style.left = o ? o * this._renderService.dimensions.css.cell.width + "px" : ""
                        }
                        _removeDecoration(d) {
                            var a;
                            (a = this._decorationElements.get(d)) == null || a.remove(), this._decorationElements.delete(d), d.dispose()
                        }
                    };
                    r.BufferDecorationRenderer = D = c([g(1, v.IBufferService), g(2, u.ICoreBrowserService), g(3, v.IDecorationService), g(4, u.IRenderService)], D)
                },
                5871: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.ColorZoneStore = void 0, r.ColorZoneStore = class {
                        constructor() {
                            this._zones = [], this._zonePool = [], this._zonePoolIndex = 0, this._linePadding = {
                                full: 0,
                                left: 0,
                                center: 0,
                                right: 0
                            }
                        }
                        get zones() {
                            return this._zonePool.length = Math.min(this._zonePool.length, this._zones.length), this._zones
                        }
                        clear() {
                            this._zones.length = 0, this._zonePoolIndex = 0
                        }
                        addDecoration(s) {
                            if (s.options.overviewRulerOptions) {
                                for (const c of this._zones)
                                    if (c.color === s.options.overviewRulerOptions.color && c.position === s.options.overviewRulerOptions.position) {
                                        if (this._lineIntersectsZone(c, s.marker.line)) return;
                                        if (this._lineAdjacentToZone(c, s.marker.line, s.options.overviewRulerOptions.position)) return void this._addLineToZone(c, s.marker.line)
                                    } if (this._zonePoolIndex < this._zonePool.length) return this._zonePool[this._zonePoolIndex].color = s.options.overviewRulerOptions.color, this._zonePool[this._zonePoolIndex].position = s.options.overviewRulerOptions.position, this._zonePool[this._zonePoolIndex].startBufferLine = s.marker.line, this._zonePool[this._zonePoolIndex].endBufferLine = s.marker.line, void this._zones.push(this._zonePool[this._zonePoolIndex++]);
                                this._zones.push({
                                    color: s.options.overviewRulerOptions.color,
                                    position: s.options.overviewRulerOptions.position,
                                    startBufferLine: s.marker.line,
                                    endBufferLine: s.marker.line
                                }), this._zonePool.push(this._zones[this._zones.length - 1]), this._zonePoolIndex++
                            }
                        }
                        setPadding(s) {
                            this._linePadding = s
                        }
                        _lineIntersectsZone(s, c) {
                            return c >= s.startBufferLine && c <= s.endBufferLine
                        }
                        _lineAdjacentToZone(s, c, g) {
                            return c >= s.startBufferLine - this._linePadding[g || "full"] && c <= s.endBufferLine + this._linePadding[g || "full"]
                        }
                        _addLineToZone(s, c) {
                            s.startBufferLine = Math.min(s.startBufferLine, c), s.endBufferLine = Math.max(s.endBufferLine, c)
                        }
                    }
                },
                5744: function(C, r, s) {
                    var c = this && this.__decorate || function(l, b, A, n) {
                            var T, S = arguments.length,
                                L = S < 3 ? b : n === null ? n = Object.getOwnPropertyDescriptor(b, A) : n;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") L = Reflect.decorate(l, b, A, n);
                            else
                                for (var z = l.length - 1; z >= 0; z--)(T = l[z]) && (L = (S < 3 ? T(L) : S > 3 ? T(b, A, L) : T(b, A)) || L);
                            return S > 3 && L && Object.defineProperty(b, A, L), L
                        },
                        g = this && this.__param || function(l, b) {
                            return function(A, n) {
                                b(A, n, l)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.OverviewRulerRenderer = void 0;
                    const u = s(5871),
                        _ = s(4725),
                        v = s(844),
                        D = s(2585),
                        d = {
                            full: 0,
                            left: 0,
                            center: 0,
                            right: 0
                        },
                        a = {
                            full: 0,
                            left: 0,
                            center: 0,
                            right: 0
                        },
                        o = {
                            full: 0,
                            left: 0,
                            center: 0,
                            right: 0
                        };
                    let i = r.OverviewRulerRenderer = class extends v.Disposable {
                        get _width() {
                            return this._optionsService.options.overviewRulerWidth || 0
                        }
                        constructor(l, b, A, n, T, S, L) {
                            var G;
                            super(), this._viewportElement = l, this._screenElement = b, this._bufferService = A, this._decorationService = n, this._renderService = T, this._optionsService = S, this._coreBrowserService = L, this._colorZoneStore = new u.ColorZoneStore, this._shouldUpdateDimensions = !0, this._shouldUpdateAnchor = !0, this._lastKnownBufferLength = 0, this._canvas = this._coreBrowserService.mainDocument.createElement("canvas"), this._canvas.classList.add("xterm-decoration-overview-ruler"), this._refreshCanvasDimensions(), (G = this._viewportElement.parentElement) == null || G.insertBefore(this._canvas, this._viewportElement);
                            const z = this._canvas.getContext("2d");
                            if (!z) throw new Error("Ctx cannot be null");
                            this._ctx = z, this._registerDecorationListeners(), this._registerBufferChangeListeners(), this._registerDimensionChangeListeners(), this.register((0, v.toDisposable)(() => {
                                var K;
                                (K = this._canvas) == null || K.remove()
                            }))
                        }
                        _registerDecorationListeners() {
                            this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(void 0, !0))), this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(void 0, !0)))
                        }
                        _registerBufferChangeListeners() {
                            this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh())), this.register(this._bufferService.buffers.onBufferActivate(() => {
                                this._canvas.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? "none" : "block"
                            })), this.register(this._bufferService.onScroll(() => {
                                this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length && (this._refreshDrawHeightConstants(), this._refreshColorZonePadding())
                            }))
                        }
                        _registerDimensionChangeListeners() {
                            this.register(this._renderService.onRender(() => {
                                this._containerHeight && this._containerHeight === this._screenElement.clientHeight || (this._queueRefresh(!0), this._containerHeight = this._screenElement.clientHeight)
                            })), this.register(this._optionsService.onSpecificOptionChange("overviewRulerWidth", () => this._queueRefresh(!0))), this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh(!0))), this._queueRefresh(!0)
                        }
                        _refreshDrawConstants() {
                            const l = Math.floor(this._canvas.width / 3),
                                b = Math.ceil(this._canvas.width / 3);
                            a.full = this._canvas.width, a.left = l, a.center = b, a.right = l, this._refreshDrawHeightConstants(), o.full = 0, o.left = 0, o.center = a.left, o.right = a.left + a.center
                        }
                        _refreshDrawHeightConstants() {
                            d.full = Math.round(2 * this._coreBrowserService.dpr);
                            const l = this._canvas.height / this._bufferService.buffer.lines.length,
                                b = Math.round(Math.max(Math.min(l, 12), 6) * this._coreBrowserService.dpr);
                            d.left = b, d.center = b, d.right = b
                        }
                        _refreshColorZonePadding() {
                            this._colorZoneStore.setPadding({
                                full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * d.full),
                                left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * d.left),
                                center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * d.center),
                                right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * d.right)
                            }), this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length
                        }
                        _refreshCanvasDimensions() {
                            this._canvas.style.width = `${this._width}px`, this._canvas.width = Math.round(this._width * this._coreBrowserService.dpr), this._canvas.style.height = `${this._screenElement.clientHeight}px`, this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowserService.dpr), this._refreshDrawConstants(), this._refreshColorZonePadding()
                        }
                        _refreshDecorations() {
                            this._shouldUpdateDimensions && this._refreshCanvasDimensions(), this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height), this._colorZoneStore.clear();
                            for (const b of this._decorationService.decorations) this._colorZoneStore.addDecoration(b);
                            this._ctx.lineWidth = 1;
                            const l = this._colorZoneStore.zones;
                            for (const b of l) b.position !== "full" && this._renderColorZone(b);
                            for (const b of l) b.position === "full" && this._renderColorZone(b);
                            this._shouldUpdateDimensions = !1, this._shouldUpdateAnchor = !1
                        }
                        _renderColorZone(l) {
                            this._ctx.fillStyle = l.color, this._ctx.fillRect(o[l.position || "full"], Math.round((this._canvas.height - 1) * (l.startBufferLine / this._bufferService.buffers.active.lines.length) - d[l.position || "full"] / 2), a[l.position || "full"], Math.round((this._canvas.height - 1) * ((l.endBufferLine - l.startBufferLine) / this._bufferService.buffers.active.lines.length) + d[l.position || "full"]))
                        }
                        _queueRefresh(l, b) {
                            this._shouldUpdateDimensions = l || this._shouldUpdateDimensions, this._shouldUpdateAnchor = b || this._shouldUpdateAnchor, this._animationFrame === void 0 && (this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {
                                this._refreshDecorations(), this._animationFrame = void 0
                            }))
                        }
                    };
                    r.OverviewRulerRenderer = i = c([g(2, D.IBufferService), g(3, D.IDecorationService), g(4, _.IRenderService), g(5, D.IOptionsService), g(6, _.ICoreBrowserService)], i)
                },
                2950: function(C, r, s) {
                    var c = this && this.__decorate || function(d, a, o, i) {
                            var l, b = arguments.length,
                                A = b < 3 ? a : i === null ? i = Object.getOwnPropertyDescriptor(a, o) : i;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") A = Reflect.decorate(d, a, o, i);
                            else
                                for (var n = d.length - 1; n >= 0; n--)(l = d[n]) && (A = (b < 3 ? l(A) : b > 3 ? l(a, o, A) : l(a, o)) || A);
                            return b > 3 && A && Object.defineProperty(a, o, A), A
                        },
                        g = this && this.__param || function(d, a) {
                            return function(o, i) {
                                a(o, i, d)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.CompositionHelper = void 0;
                    const u = s(4725),
                        _ = s(2585),
                        v = s(2584);
                    let D = r.CompositionHelper = class {
                        get isComposing() {
                            return this._isComposing
                        }
                        constructor(d, a, o, i, l, b) {
                            this._textarea = d, this._compositionView = a, this._bufferService = o, this._optionsService = i, this._coreService = l, this._renderService = b, this._isComposing = !1, this._isSendingComposition = !1, this._compositionPosition = {
                                start: 0,
                                end: 0
                            }, this._dataAlreadySent = ""
                        }
                        compositionstart() {
                            this._isComposing = !0, this._compositionPosition.start = this._textarea.value.length, this._compositionView.textContent = "", this._dataAlreadySent = "", this._compositionView.classList.add("active")
                        }
                        compositionupdate(d) {
                            this._compositionView.textContent = d.data, this.updateCompositionElements(), setTimeout(() => {
                                this._compositionPosition.end = this._textarea.value.length
                            }, 0)
                        }
                        compositionend() {
                            this._finalizeComposition(!0)
                        }
                        keydown(d) {
                            if (this._isComposing || this._isSendingComposition) {
                                if (d.keyCode === 229 || d.keyCode === 16 || d.keyCode === 17 || d.keyCode === 18) return !1;
                                this._finalizeComposition(!1)
                            }
                            return d.keyCode !== 229 || (this._handleAnyTextareaChanges(), !1)
                        }
                        _finalizeComposition(d) {
                            if (this._compositionView.classList.remove("active"), this._isComposing = !1, d) {
                                const a = {
                                    start: this._compositionPosition.start,
                                    end: this._compositionPosition.end
                                };
                                this._isSendingComposition = !0, setTimeout(() => {
                                    if (this._isSendingComposition) {
                                        let o;
                                        this._isSendingComposition = !1, a.start += this._dataAlreadySent.length, o = this._isComposing ? this._textarea.value.substring(a.start, a.end) : this._textarea.value.substring(a.start), o.length > 0 && this._coreService.triggerDataEvent(o, !0)
                                    }
                                }, 0)
                            } else {
                                this._isSendingComposition = !1;
                                const a = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);
                                this._coreService.triggerDataEvent(a, !0)
                            }
                        }
                        _handleAnyTextareaChanges() {
                            const d = this._textarea.value;
                            setTimeout(() => {
                                if (!this._isComposing) {
                                    const a = this._textarea.value,
                                        o = a.replace(d, "");
                                    this._dataAlreadySent = o, a.length > d.length ? this._coreService.triggerDataEvent(o, !0) : a.length < d.length ? this._coreService.triggerDataEvent(`${v.C0.DEL}`, !0) : a.length === d.length && a !== d && this._coreService.triggerDataEvent(a, !0)
                                }
                            }, 0)
                        }
                        updateCompositionElements(d) {
                            if (this._isComposing) {
                                if (this._bufferService.buffer.isCursorInViewport) {
                                    const a = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1),
                                        o = this._renderService.dimensions.css.cell.height,
                                        i = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height,
                                        l = a * this._renderService.dimensions.css.cell.width;
                                    this._compositionView.style.left = l + "px", this._compositionView.style.top = i + "px", this._compositionView.style.height = o + "px", this._compositionView.style.lineHeight = o + "px", this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily, this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + "px";
                                    const b = this._compositionView.getBoundingClientRect();
                                    this._textarea.style.left = l + "px", this._textarea.style.top = i + "px", this._textarea.style.width = Math.max(b.width, 1) + "px", this._textarea.style.height = Math.max(b.height, 1) + "px", this._textarea.style.lineHeight = b.height + "px"
                                }
                                d || setTimeout(() => this.updateCompositionElements(!0), 0)
                            }
                        }
                    };
                    r.CompositionHelper = D = c([g(2, _.IBufferService), g(3, _.IOptionsService), g(4, _.ICoreService), g(5, u.IRenderService)], D)
                },
                9806: (C, r) => {
                    function s(c, g, u) {
                        const _ = u.getBoundingClientRect(),
                            v = c.getComputedStyle(u),
                            D = parseInt(v.getPropertyValue("padding-left")),
                            d = parseInt(v.getPropertyValue("padding-top"));
                        return [g.clientX - _.left - D, g.clientY - _.top - d]
                    }
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.getCoords = r.getCoordsRelativeToElement = void 0, r.getCoordsRelativeToElement = s, r.getCoords = function(c, g, u, _, v, D, d, a, o) {
                        if (!D) return;
                        const i = s(c, g, u);
                        return i ? (i[0] = Math.ceil((i[0] + (o ? d / 2 : 0)) / d), i[1] = Math.ceil(i[1] / a), i[0] = Math.min(Math.max(i[0], 1), _ + (o ? 1 : 0)), i[1] = Math.min(Math.max(i[1], 1), v), i) : void 0
                    }
                },
                9504: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.moveToCellSequence = void 0;
                    const c = s(2584);

                    function g(a, o, i, l) {
                        const b = a - u(a, i),
                            A = o - u(o, i),
                            n = Math.abs(b - A) - function(T, S, L) {
                                let z = 0;
                                const G = T - u(T, L),
                                    K = S - u(S, L);
                                for (let U = 0; U < Math.abs(G - K); U++) {
                                    const te = _(T, S) === "A" ? -1 : 1,
                                        fe = L.buffer.lines.get(G + te * U);
                                    fe != null && fe.isWrapped && z++
                                }
                                return z
                            }(a, o, i);
                        return d(n, D(_(a, o), l))
                    }

                    function u(a, o) {
                        let i = 0,
                            l = o.buffer.lines.get(a),
                            b = l == null ? void 0 : l.isWrapped;
                        for (; b && a >= 0 && a < o.rows;) i++, l = o.buffer.lines.get(--a), b = l == null ? void 0 : l.isWrapped;
                        return i
                    }

                    function _(a, o) {
                        return a > o ? "A" : "B"
                    }

                    function v(a, o, i, l, b, A) {
                        let n = a,
                            T = o,
                            S = "";
                        for (; n !== i || T !== l;) n += b ? 1 : -1, b && n > A.cols - 1 ? (S += A.buffer.translateBufferLineToString(T, !1, a, n), n = 0, a = 0, T++) : !b && n < 0 && (S += A.buffer.translateBufferLineToString(T, !1, 0, a + 1), n = A.cols - 1, a = n, T--);
                        return S + A.buffer.translateBufferLineToString(T, !1, a, n)
                    }

                    function D(a, o) {
                        const i = o ? "O" : "[";
                        return c.C0.ESC + i + a
                    }

                    function d(a, o) {
                        a = Math.floor(a);
                        let i = "";
                        for (let l = 0; l < a; l++) i += o;
                        return i
                    }
                    r.moveToCellSequence = function(a, o, i, l) {
                        const b = i.buffer.x,
                            A = i.buffer.y;
                        if (!i.buffer.hasScrollback) return function(S, L, z, G, K, U) {
                            return g(L, G, K, U).length === 0 ? "" : d(v(S, L, S, L - u(L, K), !1, K).length, D("D", U))
                        }(b, A, 0, o, i, l) + g(A, o, i, l) + function(S, L, z, G, K, U) {
                            let te;
                            te = g(L, G, K, U).length > 0 ? G - u(G, K) : L;
                            const fe = G,
                                ye = function(Fe, ge, O, Z, q, re) {
                                    let we;
                                    return we = g(O, Z, q, re).length > 0 ? Z - u(Z, q) : ge, Fe < O && we <= Z || Fe >= O && we < Z ? "C" : "D"
                                }(S, L, z, G, K, U);
                            return d(v(S, te, z, fe, ye === "C", K).length, D(ye, U))
                        }(b, A, a, o, i, l);
                        let n;
                        if (A === o) return n = b > a ? "D" : "C", d(Math.abs(b - a), D(n, l));
                        n = A > o ? "D" : "C";
                        const T = Math.abs(A - o);
                        return d(function(S, L) {
                            return L.cols - S
                        }(A > o ? a : b, i) + (T - 1) * i.cols + 1 + ((A > o ? b : a) - 1), D(n, l))
                    }
                },
                1296: function(C, r, s) {
                    var c = this && this.__decorate || function(U, te, fe, ye) {
                            var Fe, ge = arguments.length,
                                O = ge < 3 ? te : ye === null ? ye = Object.getOwnPropertyDescriptor(te, fe) : ye;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") O = Reflect.decorate(U, te, fe, ye);
                            else
                                for (var Z = U.length - 1; Z >= 0; Z--)(Fe = U[Z]) && (O = (ge < 3 ? Fe(O) : ge > 3 ? Fe(te, fe, O) : Fe(te, fe)) || O);
                            return ge > 3 && O && Object.defineProperty(te, fe, O), O
                        },
                        g = this && this.__param || function(U, te) {
                            return function(fe, ye) {
                                te(fe, ye, U)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.DomRenderer = void 0;
                    const u = s(3787),
                        _ = s(2550),
                        v = s(2223),
                        D = s(6171),
                        d = s(6052),
                        a = s(4725),
                        o = s(8055),
                        i = s(8460),
                        l = s(844),
                        b = s(2585),
                        A = "xterm-dom-renderer-owner-",
                        n = "xterm-rows",
                        T = "xterm-fg-",
                        S = "xterm-bg-",
                        L = "xterm-focus",
                        z = "xterm-selection";
                    let G = 1,
                        K = r.DomRenderer = class extends l.Disposable {
                            constructor(U, te, fe, ye, Fe, ge, O, Z, q, re, we, Ee, je) {
                                super(), this._terminal = U, this._document = te, this._element = fe, this._screenElement = ye, this._viewportElement = Fe, this._helperContainer = ge, this._linkifier2 = O, this._charSizeService = q, this._optionsService = re, this._bufferService = we, this._coreBrowserService = Ee, this._themeService = je, this._terminalClass = G++, this._rowElements = [], this._selectionRenderModel = (0, d.createSelectionRenderModel)(), this.onRequestRedraw = this.register(new i.EventEmitter).event, this._rowContainer = this._document.createElement("div"), this._rowContainer.classList.add(n), this._rowContainer.style.lineHeight = "normal", this._rowContainer.setAttribute("aria-hidden", "true"), this._refreshRowElements(this._bufferService.cols, this._bufferService.rows), this._selectionContainer = this._document.createElement("div"), this._selectionContainer.classList.add(z), this._selectionContainer.setAttribute("aria-hidden", "true"), this.dimensions = (0, D.createRenderDimensions)(), this._updateDimensions(), this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged())), this.register(this._themeService.onChangeColors(ze => this._injectCss(ze))), this._injectCss(this._themeService.colors), this._rowFactory = Z.createInstance(u.DomRendererRowFactory, document), this._element.classList.add(A + this._terminalClass), this._screenElement.appendChild(this._rowContainer), this._screenElement.appendChild(this._selectionContainer), this.register(this._linkifier2.onShowLinkUnderline(ze => this._handleLinkHover(ze))), this.register(this._linkifier2.onHideLinkUnderline(ze => this._handleLinkLeave(ze))), this.register((0, l.toDisposable)(() => {
                                    this._element.classList.remove(A + this._terminalClass), this._rowContainer.remove(), this._selectionContainer.remove(), this._widthCache.dispose(), this._themeStyleElement.remove(), this._dimensionsStyleElement.remove()
                                })), this._widthCache = new _.WidthCache(this._document, this._helperContainer), this._widthCache.setFont(this._optionsService.rawOptions.fontFamily, this._optionsService.rawOptions.fontSize, this._optionsService.rawOptions.fontWeight, this._optionsService.rawOptions.fontWeightBold), this._setDefaultSpacing()
                            }
                            _updateDimensions() {
                                const U = this._coreBrowserService.dpr;
                                this.dimensions.device.char.width = this._charSizeService.width * U, this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * U), this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing), this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight), this.dimensions.device.char.left = 0, this.dimensions.device.char.top = 0, this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols, this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows, this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / U), this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / U), this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols, this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;
                                for (const fe of this._rowElements) fe.style.width = `${this.dimensions.css.canvas.width}px`, fe.style.height = `${this.dimensions.css.cell.height}px`, fe.style.lineHeight = `${this.dimensions.css.cell.height}px`, fe.style.overflow = "hidden";
                                this._dimensionsStyleElement || (this._dimensionsStyleElement = this._document.createElement("style"), this._screenElement.appendChild(this._dimensionsStyleElement));
                                const te = `${this._terminalSelector} .${n} span { display: inline-block; height: 100%; vertical-align: top;}`;
                                this._dimensionsStyleElement.textContent = te, this._selectionContainer.style.height = this._viewportElement.style.height, this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`, this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`
                            }
                            _injectCss(U) {
                                this._themeStyleElement || (this._themeStyleElement = this._document.createElement("style"), this._screenElement.appendChild(this._themeStyleElement));
                                let te = `${this._terminalSelector} .${n} { color: ${U.foreground.css}; font-family: ${this._optionsService.rawOptions.fontFamily}; font-size: ${this._optionsService.rawOptions.fontSize}px; font-kerning: none; white-space: pre}`;
                                te += `${this._terminalSelector} .${n} .xterm-dim { color: ${o.color.multiplyOpacity(U.foreground,.5).css};}`, te += `${this._terminalSelector} span:not(.xterm-bold) { font-weight: ${this._optionsService.rawOptions.fontWeight};}${this._terminalSelector} span.xterm-bold { font-weight: ${this._optionsService.rawOptions.fontWeightBold};}${this._terminalSelector} span.xterm-italic { font-style: italic;}`;
                                const fe = `blink_underline_${this._terminalClass}`,
                                    ye = `blink_bar_${this._terminalClass}`,
                                    Fe = `blink_block_${this._terminalClass}`;
                                te += `@keyframes ${fe} { 50% {  border-bottom-style: hidden; }}`, te += `@keyframes ${ye} { 50% {  box-shadow: none; }}`, te += `@keyframes ${Fe} { 0% {  background-color: ${U.cursor.css};  color: ${U.cursorAccent.css}; } 50% {  background-color: inherit;  color: ${U.cursor.css}; }}`, te += `${this._terminalSelector} .${n}.${L} .xterm-cursor.xterm-cursor-blink.xterm-cursor-underline { animation: ${fe} 1s step-end infinite;}${this._terminalSelector} .${n}.${L} .xterm-cursor.xterm-cursor-blink.xterm-cursor-bar { animation: ${ye} 1s step-end infinite;}${this._terminalSelector} .${n}.${L} .xterm-cursor.xterm-cursor-blink.xterm-cursor-block { animation: ${Fe} 1s step-end infinite;}${this._terminalSelector} .${n} .xterm-cursor.xterm-cursor-block { background-color: ${U.cursor.css}; color: ${U.cursorAccent.css};}${this._terminalSelector} .${n} .xterm-cursor.xterm-cursor-block:not(.xterm-cursor-blink) { background-color: ${U.cursor.css} !important; color: ${U.cursorAccent.css} !important;}${this._terminalSelector} .${n} .xterm-cursor.xterm-cursor-outline { outline: 1px solid ${U.cursor.css}; outline-offset: -1px;}${this._terminalSelector} .${n} .xterm-cursor.xterm-cursor-bar { box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${U.cursor.css} inset;}${this._terminalSelector} .${n} .xterm-cursor.xterm-cursor-underline { border-bottom: 1px ${U.cursor.css}; border-bottom-style: solid; height: calc(100% - 1px);}`, te += `${this._terminalSelector} .${z} { position: absolute; top: 0; left: 0; z-index: 1; pointer-events: none;}${this._terminalSelector}.focus .${z} div { position: absolute; background-color: ${U.selectionBackgroundOpaque.css};}${this._terminalSelector} .${z} div { position: absolute; background-color: ${U.selectionInactiveBackgroundOpaque.css};}`;
                                for (const [ge, O] of U.ansi.entries()) te += `${this._terminalSelector} .${T}${ge} { color: ${O.css}; }${this._terminalSelector} .${T}${ge}.xterm-dim { color: ${o.color.multiplyOpacity(O,.5).css}; }${this._terminalSelector} .${S}${ge} { background-color: ${O.css}; }`;
                                te += `${this._terminalSelector} .${T}${v.INVERTED_DEFAULT_COLOR} { color: ${o.color.opaque(U.background).css}; }${this._terminalSelector} .${T}${v.INVERTED_DEFAULT_COLOR}.xterm-dim { color: ${o.color.multiplyOpacity(o.color.opaque(U.background),.5).css}; }${this._terminalSelector} .${S}${v.INVERTED_DEFAULT_COLOR} { background-color: ${U.foreground.css}; }`, this._themeStyleElement.textContent = te
                            }
                            _setDefaultSpacing() {
                                const U = this.dimensions.css.cell.width - this._widthCache.get("W", !1, !1);
                                this._rowContainer.style.letterSpacing = `${U}px`, this._rowFactory.defaultSpacing = U
                            }
                            handleDevicePixelRatioChange() {
                                this._updateDimensions(), this._widthCache.clear(), this._setDefaultSpacing()
                            }
                            _refreshRowElements(U, te) {
                                for (let fe = this._rowElements.length; fe <= te; fe++) {
                                    const ye = this._document.createElement("div");
                                    this._rowContainer.appendChild(ye), this._rowElements.push(ye)
                                }
                                for (; this._rowElements.length > te;) this._rowContainer.removeChild(this._rowElements.pop())
                            }
                            handleResize(U, te) {
                                this._refreshRowElements(U, te), this._updateDimensions(), this.handleSelectionChanged(this._selectionRenderModel.selectionStart, this._selectionRenderModel.selectionEnd, this._selectionRenderModel.columnSelectMode)
                            }
                            handleCharSizeChanged() {
                                this._updateDimensions(), this._widthCache.clear(), this._setDefaultSpacing()
                            }
                            handleBlur() {
                                this._rowContainer.classList.remove(L), this.renderRows(0, this._bufferService.rows - 1)
                            }
                            handleFocus() {
                                this._rowContainer.classList.add(L), this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y)
                            }
                            handleSelectionChanged(U, te, fe) {
                                if (this._selectionContainer.replaceChildren(), this._rowFactory.handleSelectionChanged(U, te, fe), this.renderRows(0, this._bufferService.rows - 1), !U || !te) return;
                                this._selectionRenderModel.update(this._terminal, U, te, fe);
                                const ye = this._selectionRenderModel.viewportStartRow,
                                    Fe = this._selectionRenderModel.viewportEndRow,
                                    ge = this._selectionRenderModel.viewportCappedStartRow,
                                    O = this._selectionRenderModel.viewportCappedEndRow;
                                if (ge >= this._bufferService.rows || O < 0) return;
                                const Z = this._document.createDocumentFragment();
                                if (fe) {
                                    const q = U[0] > te[0];
                                    Z.appendChild(this._createSelectionElement(ge, q ? te[0] : U[0], q ? U[0] : te[0], O - ge + 1))
                                } else {
                                    const q = ye === ge ? U[0] : 0,
                                        re = ge === Fe ? te[0] : this._bufferService.cols;
                                    Z.appendChild(this._createSelectionElement(ge, q, re));
                                    const we = O - ge - 1;
                                    if (Z.appendChild(this._createSelectionElement(ge + 1, 0, this._bufferService.cols, we)), ge !== O) {
                                        const Ee = Fe === O ? te[0] : this._bufferService.cols;
                                        Z.appendChild(this._createSelectionElement(O, 0, Ee))
                                    }
                                }
                                this._selectionContainer.appendChild(Z)
                            }
                            _createSelectionElement(U, te, fe, ye = 1) {
                                const Fe = this._document.createElement("div"),
                                    ge = te * this.dimensions.css.cell.width;
                                let O = this.dimensions.css.cell.width * (fe - te);
                                return ge + O > this.dimensions.css.canvas.width && (O = this.dimensions.css.canvas.width - ge), Fe.style.height = ye * this.dimensions.css.cell.height + "px", Fe.style.top = U * this.dimensions.css.cell.height + "px", Fe.style.left = `${ge}px`, Fe.style.width = `${O}px`, Fe
                            }
                            handleCursorMove() {}
                            _handleOptionsChanged() {
                                this._updateDimensions(), this._injectCss(this._themeService.colors), this._widthCache.setFont(this._optionsService.rawOptions.fontFamily, this._optionsService.rawOptions.fontSize, this._optionsService.rawOptions.fontWeight, this._optionsService.rawOptions.fontWeightBold), this._setDefaultSpacing()
                            }
                            clear() {
                                for (const U of this._rowElements) U.replaceChildren()
                            }
                            renderRows(U, te) {
                                const fe = this._bufferService.buffer,
                                    ye = fe.ybase + fe.y,
                                    Fe = Math.min(fe.x, this._bufferService.cols - 1),
                                    ge = this._optionsService.rawOptions.cursorBlink,
                                    O = this._optionsService.rawOptions.cursorStyle,
                                    Z = this._optionsService.rawOptions.cursorInactiveStyle;
                                for (let q = U; q <= te; q++) {
                                    const re = q + fe.ydisp,
                                        we = this._rowElements[q],
                                        Ee = fe.lines.get(re);
                                    if (!we || !Ee) break;
                                    we.replaceChildren(...this._rowFactory.createRow(Ee, re, re === ye, O, Z, Fe, ge, this.dimensions.css.cell.width, this._widthCache, -1, -1))
                                }
                            }
                            get _terminalSelector() {
                                return `.${A}${this._terminalClass}`
                            }
                            _handleLinkHover(U) {
                                this._setCellUnderline(U.x1, U.x2, U.y1, U.y2, U.cols, !0)
                            }
                            _handleLinkLeave(U) {
                                this._setCellUnderline(U.x1, U.x2, U.y1, U.y2, U.cols, !1)
                            }
                            _setCellUnderline(U, te, fe, ye, Fe, ge) {
                                fe < 0 && (U = 0), ye < 0 && (te = 0);
                                const O = this._bufferService.rows - 1;
                                fe = Math.max(Math.min(fe, O), 0), ye = Math.max(Math.min(ye, O), 0), Fe = Math.min(Fe, this._bufferService.cols);
                                const Z = this._bufferService.buffer,
                                    q = Z.ybase + Z.y,
                                    re = Math.min(Z.x, Fe - 1),
                                    we = this._optionsService.rawOptions.cursorBlink,
                                    Ee = this._optionsService.rawOptions.cursorStyle,
                                    je = this._optionsService.rawOptions.cursorInactiveStyle;
                                for (let ze = fe; ze <= ye; ++ze) {
                                    const oe = ze + Z.ydisp,
                                        W = this._rowElements[ze],
                                        Ce = Z.lines.get(oe);
                                    if (!W || !Ce) break;
                                    W.replaceChildren(...this._rowFactory.createRow(Ce, oe, oe === q, Ee, je, re, we, this.dimensions.css.cell.width, this._widthCache, ge ? ze === fe ? U : 0 : -1, ge ? (ze === ye ? te : Fe) - 1 : -1))
                                }
                            }
                        };
                    r.DomRenderer = K = c([g(7, b.IInstantiationService), g(8, a.ICharSizeService), g(9, b.IOptionsService), g(10, b.IBufferService), g(11, a.ICoreBrowserService), g(12, a.IThemeService)], K)
                },
                3787: function(C, r, s) {
                    var c = this && this.__decorate || function(n, T, S, L) {
                            var z, G = arguments.length,
                                K = G < 3 ? T : L === null ? L = Object.getOwnPropertyDescriptor(T, S) : L;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") K = Reflect.decorate(n, T, S, L);
                            else
                                for (var U = n.length - 1; U >= 0; U--)(z = n[U]) && (K = (G < 3 ? z(K) : G > 3 ? z(T, S, K) : z(T, S)) || K);
                            return G > 3 && K && Object.defineProperty(T, S, K), K
                        },
                        g = this && this.__param || function(n, T) {
                            return function(S, L) {
                                T(S, L, n)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.DomRendererRowFactory = void 0;
                    const u = s(2223),
                        _ = s(643),
                        v = s(511),
                        D = s(2585),
                        d = s(8055),
                        a = s(4725),
                        o = s(4269),
                        i = s(6171),
                        l = s(3734);
                    let b = r.DomRendererRowFactory = class {
                        constructor(n, T, S, L, z, G, K) {
                            this._document = n, this._characterJoinerService = T, this._optionsService = S, this._coreBrowserService = L, this._coreService = z, this._decorationService = G, this._themeService = K, this._workCell = new v.CellData, this._columnSelectMode = !1, this.defaultSpacing = 0
                        }
                        handleSelectionChanged(n, T, S) {
                            this._selectionStart = n, this._selectionEnd = T, this._columnSelectMode = S
                        }
                        createRow(n, T, S, L, z, G, K, U, te, fe, ye) {
                            const Fe = [],
                                ge = this._characterJoinerService.getJoinedCharacters(T),
                                O = this._themeService.colors;
                            let Z, q = n.getNoBgTrimmedLength();
                            S && q < G + 1 && (q = G + 1);
                            let re = 0,
                                we = "",
                                Ee = 0,
                                je = 0,
                                ze = 0,
                                oe = !1,
                                W = 0,
                                Ce = !1,
                                pe = 0;
                            const Ne = [],
                                Pe = fe !== -1 && ye !== -1;
                            for (let Xe = 0; Xe < q; Xe++) {
                                n.loadCell(Xe, this._workCell);
                                let ut = this._workCell.getWidth();
                                if (ut === 0) continue;
                                let ct = !1,
                                    $e = Xe,
                                    Ve = this._workCell;
                                if (ge.length > 0 && Xe === ge[0][0]) {
                                    ct = !0;
                                    const ot = ge.shift();
                                    Ve = new o.JoinedCellData(this._workCell, n.translateToString(!0, ot[0], ot[1]), ot[1] - ot[0]), $e = ot[1] - 1, ut = Ve.getWidth()
                                }
                                const rr = this._isCellInSelection(Xe, T),
                                    gr = S && Xe === G,
                                    vr = Pe && Xe >= fe && Xe <= ye;
                                let cr = !1;
                                this._decorationService.forEachDecorationAtCell(Xe, T, void 0, ot => {
                                    cr = !0
                                });
                                let nt = Ve.getChars() || _.WHITESPACE_CELL_CHAR;
                                if (nt === " " && (Ve.isUnderline() || Ve.isOverline()) && (nt = " "), pe = ut * U - te.get(nt, Ve.isBold(), Ve.isItalic()), Z) {
                                    if (re && (rr && Ce || !rr && !Ce && Ve.bg === Ee) && (rr && Ce && O.selectionForeground || Ve.fg === je) && Ve.extended.ext === ze && vr === oe && pe === W && !gr && !ct && !cr) {
                                        Ve.isInvisible() ? we += _.WHITESPACE_CELL_CHAR : we += nt, re++;
                                        continue
                                    }
                                    re && (Z.textContent = we), Z = this._document.createElement("span"), re = 0, we = ""
                                } else Z = this._document.createElement("span");
                                if (Ee = Ve.bg, je = Ve.fg, ze = Ve.extended.ext, oe = vr, W = pe, Ce = rr, ct && G >= Xe && G <= $e && (G = Xe), !this._coreService.isCursorHidden && gr && this._coreService.isCursorInitialized) {
                                    if (Ne.push("xterm-cursor"), this._coreBrowserService.isFocused) K && Ne.push("xterm-cursor-blink"), Ne.push(L === "bar" ? "xterm-cursor-bar" : L === "underline" ? "xterm-cursor-underline" : "xterm-cursor-block");
                                    else if (z) switch (z) {
                                        case "outline":
                                            Ne.push("xterm-cursor-outline");
                                            break;
                                        case "block":
                                            Ne.push("xterm-cursor-block");
                                            break;
                                        case "bar":
                                            Ne.push("xterm-cursor-bar");
                                            break;
                                        case "underline":
                                            Ne.push("xterm-cursor-underline")
                                    }
                                }
                                if (Ve.isBold() && Ne.push("xterm-bold"), Ve.isItalic() && Ne.push("xterm-italic"), Ve.isDim() && Ne.push("xterm-dim"), we = Ve.isInvisible() ? _.WHITESPACE_CELL_CHAR : Ve.getChars() || _.WHITESPACE_CELL_CHAR, Ve.isUnderline() && (Ne.push(`xterm-underline-${Ve.extended.underlineStyle}`), we === " " && (we = " "), !Ve.isUnderlineColorDefault()))
                                    if (Ve.isUnderlineColorRGB()) Z.style.textDecorationColor = `rgb(${l.AttributeData.toColorRGB(Ve.getUnderlineColor()).join(",")})`;
                                    else {
                                        let ot = Ve.getUnderlineColor();
                                        this._optionsService.rawOptions.drawBoldTextInBrightColors && Ve.isBold() && ot < 8 && (ot += 8), Z.style.textDecorationColor = O.ansi[ot].css
                                    } Ve.isOverline() && (Ne.push("xterm-overline"), we === " " && (we = " ")), Ve.isStrikethrough() && Ne.push("xterm-strikethrough"), vr && (Z.style.textDecoration = "underline");
                                let F = Ve.getFgColor(),
                                    kt = Ve.getFgColorMode(),
                                    Et = Ve.getBgColor(),
                                    Ht = Ve.getBgColorMode();
                                const mr = !!Ve.isInverse();
                                if (mr) {
                                    const ot = F;
                                    F = Et, Et = ot;
                                    const Tt = kt;
                                    kt = Ht, Ht = Tt
                                }
                                let Lt, Zt, Dt, Pt = !1;
                                switch (this._decorationService.forEachDecorationAtCell(Xe, T, void 0, ot => {
                                        ot.options.layer !== "top" && Pt || (ot.backgroundColorRGB && (Ht = 50331648, Et = ot.backgroundColorRGB.rgba >> 8 & 16777215, Lt = ot.backgroundColorRGB), ot.foregroundColorRGB && (kt = 50331648, F = ot.foregroundColorRGB.rgba >> 8 & 16777215, Zt = ot.foregroundColorRGB), Pt = ot.options.layer === "top")
                                    }), !Pt && rr && (Lt = this._coreBrowserService.isFocused ? O.selectionBackgroundOpaque : O.selectionInactiveBackgroundOpaque, Et = Lt.rgba >> 8 & 16777215, Ht = 50331648, Pt = !0, O.selectionForeground && (kt = 50331648, F = O.selectionForeground.rgba >> 8 & 16777215, Zt = O.selectionForeground)), Pt && Ne.push("xterm-decoration-top"), Ht) {
                                    case 16777216:
                                    case 33554432:
                                        Dt = O.ansi[Et], Ne.push(`xterm-bg-${Et}`);
                                        break;
                                    case 50331648:
                                        Dt = d.channels.toColor(Et >> 16, Et >> 8 & 255, 255 & Et), this._addStyle(Z, `background-color:#${A((Et>>>0).toString(16),"0",6)}`);
                                        break;
                                    default:
                                        mr ? (Dt = O.foreground, Ne.push(`xterm-bg-${u.INVERTED_DEFAULT_COLOR}`)) : Dt = O.background
                                }
                                switch (Lt || Ve.isDim() && (Lt = d.color.multiplyOpacity(Dt, .5)), kt) {
                                    case 16777216:
                                    case 33554432:
                                        Ve.isBold() && F < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors && (F += 8), this._applyMinimumContrast(Z, Dt, O.ansi[F], Ve, Lt, void 0) || Ne.push(`xterm-fg-${F}`);
                                        break;
                                    case 50331648:
                                        const ot = d.channels.toColor(F >> 16 & 255, F >> 8 & 255, 255 & F);
                                        this._applyMinimumContrast(Z, Dt, ot, Ve, Lt, Zt) || this._addStyle(Z, `color:#${A(F.toString(16),"0",6)}`);
                                        break;
                                    default:
                                        this._applyMinimumContrast(Z, Dt, O.foreground, Ve, Lt, Zt) || mr && Ne.push(`xterm-fg-${u.INVERTED_DEFAULT_COLOR}`)
                                }
                                Ne.length && (Z.className = Ne.join(" "), Ne.length = 0), gr || ct || cr ? Z.textContent = we : re++, pe !== this.defaultSpacing && (Z.style.letterSpacing = `${pe}px`), Fe.push(Z), Xe = $e
                            }
                            return Z && re && (Z.textContent = we), Fe
                        }
                        _applyMinimumContrast(n, T, S, L, z, G) {
                            if (this._optionsService.rawOptions.minimumContrastRatio === 1 || (0, i.treatGlyphAsBackgroundColor)(L.getCode())) return !1;
                            const K = this._getContrastCache(L);
                            let U;
                            if (z || G || (U = K.getColor(T.rgba, S.rgba)), U === void 0) {
                                const te = this._optionsService.rawOptions.minimumContrastRatio / (L.isDim() ? 2 : 1);
                                U = d.color.ensureContrastRatio(z || T, G || S, te), K.setColor((z || T).rgba, (G || S).rgba, U ?? null)
                            }
                            return !!U && (this._addStyle(n, `color:${U.css}`), !0)
                        }
                        _getContrastCache(n) {
                            return n.isDim() ? this._themeService.colors.halfContrastCache : this._themeService.colors.contrastCache
                        }
                        _addStyle(n, T) {
                            n.setAttribute("style", `${n.getAttribute("style")||""}${T};`)
                        }
                        _isCellInSelection(n, T) {
                            const S = this._selectionStart,
                                L = this._selectionEnd;
                            return !(!S || !L) && (this._columnSelectMode ? S[0] <= L[0] ? n >= S[0] && T >= S[1] && n < L[0] && T <= L[1] : n < S[0] && T >= S[1] && n >= L[0] && T <= L[1] : T > S[1] && T < L[1] || S[1] === L[1] && T === S[1] && n >= S[0] && n < L[0] || S[1] < L[1] && T === L[1] && n < L[0] || S[1] < L[1] && T === S[1] && n >= S[0])
                        }
                    };

                    function A(n, T, S) {
                        for (; n.length < S;) n = T + n;
                        return n
                    }
                    r.DomRendererRowFactory = b = c([g(1, a.ICharacterJoinerService), g(2, D.IOptionsService), g(3, a.ICoreBrowserService), g(4, D.ICoreService), g(5, D.IDecorationService), g(6, a.IThemeService)], b)
                },
                2550: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.WidthCache = void 0, r.WidthCache = class {
                        constructor(s, c) {
                            this._flat = new Float32Array(256), this._font = "", this._fontSize = 0, this._weight = "normal", this._weightBold = "bold", this._measureElements = [], this._container = s.createElement("div"), this._container.classList.add("xterm-width-cache-measure-container"), this._container.setAttribute("aria-hidden", "true"), this._container.style.whiteSpace = "pre", this._container.style.fontKerning = "none";
                            const g = s.createElement("span");
                            g.classList.add("xterm-char-measure-element");
                            const u = s.createElement("span");
                            u.classList.add("xterm-char-measure-element"), u.style.fontWeight = "bold";
                            const _ = s.createElement("span");
                            _.classList.add("xterm-char-measure-element"), _.style.fontStyle = "italic";
                            const v = s.createElement("span");
                            v.classList.add("xterm-char-measure-element"), v.style.fontWeight = "bold", v.style.fontStyle = "italic", this._measureElements = [g, u, _, v], this._container.appendChild(g), this._container.appendChild(u), this._container.appendChild(_), this._container.appendChild(v), c.appendChild(this._container), this.clear()
                        }
                        dispose() {
                            this._container.remove(), this._measureElements.length = 0, this._holey = void 0
                        }
                        clear() {
                            this._flat.fill(-9999), this._holey = new Map
                        }
                        setFont(s, c, g, u) {
                            s === this._font && c === this._fontSize && g === this._weight && u === this._weightBold || (this._font = s, this._fontSize = c, this._weight = g, this._weightBold = u, this._container.style.fontFamily = this._font, this._container.style.fontSize = `${this._fontSize}px`, this._measureElements[0].style.fontWeight = `${g}`, this._measureElements[1].style.fontWeight = `${u}`, this._measureElements[2].style.fontWeight = `${g}`, this._measureElements[3].style.fontWeight = `${u}`, this.clear())
                        }
                        get(s, c, g) {
                            let u = 0;
                            if (!c && !g && s.length === 1 && (u = s.charCodeAt(0)) < 256) {
                                if (this._flat[u] !== -9999) return this._flat[u];
                                const D = this._measure(s, 0);
                                return D > 0 && (this._flat[u] = D), D
                            }
                            let _ = s;
                            c && (_ += "B"), g && (_ += "I");
                            let v = this._holey.get(_);
                            if (v === void 0) {
                                let D = 0;
                                c && (D |= 1), g && (D |= 2), v = this._measure(s, D), v > 0 && this._holey.set(_, v)
                            }
                            return v
                        }
                        _measure(s, c) {
                            const g = this._measureElements[c];
                            return g.textContent = s.repeat(32), g.offsetWidth / 32
                        }
                    }
                },
                2223: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.TEXT_BASELINE = r.DIM_OPACITY = r.INVERTED_DEFAULT_COLOR = void 0;
                    const c = s(6114);
                    r.INVERTED_DEFAULT_COLOR = 257, r.DIM_OPACITY = .5, r.TEXT_BASELINE = c.isFirefox || c.isLegacyEdge ? "bottom" : "ideographic"
                },
                6171: (C, r) => {
                    function s(g) {
                        return 57508 <= g && g <= 57558
                    }

                    function c(g) {
                        return g >= 128512 && g <= 128591 || g >= 127744 && g <= 128511 || g >= 128640 && g <= 128767 || g >= 9728 && g <= 9983 || g >= 9984 && g <= 10175 || g >= 65024 && g <= 65039 || g >= 129280 && g <= 129535 || g >= 127462 && g <= 127487
                    }
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.computeNextVariantOffset = r.createRenderDimensions = r.treatGlyphAsBackgroundColor = r.allowRescaling = r.isEmoji = r.isRestrictedPowerlineGlyph = r.isPowerlineGlyph = r.throwIfFalsy = void 0, r.throwIfFalsy = function(g) {
                        if (!g) throw new Error("value must not be falsy");
                        return g
                    }, r.isPowerlineGlyph = s, r.isRestrictedPowerlineGlyph = function(g) {
                        return 57520 <= g && g <= 57527
                    }, r.isEmoji = c, r.allowRescaling = function(g, u, _, v) {
                        return u === 1 && _ > Math.ceil(1.5 * v) && g !== void 0 && g > 255 && !c(g) && !s(g) && ! function(D) {
                            return 57344 <= D && D <= 63743
                        }(g)
                    }, r.treatGlyphAsBackgroundColor = function(g) {
                        return s(g) || function(u) {
                            return 9472 <= u && u <= 9631
                        }(g)
                    }, r.createRenderDimensions = function() {
                        return {
                            css: {
                                canvas: {
                                    width: 0,
                                    height: 0
                                },
                                cell: {
                                    width: 0,
                                    height: 0
                                }
                            },
                            device: {
                                canvas: {
                                    width: 0,
                                    height: 0
                                },
                                cell: {
                                    width: 0,
                                    height: 0
                                },
                                char: {
                                    width: 0,
                                    height: 0,
                                    left: 0,
                                    top: 0
                                }
                            }
                        }
                    }, r.computeNextVariantOffset = function(g, u, _ = 0) {
                        return (g - (2 * Math.round(u) - _)) % (2 * Math.round(u))
                    }
                },
                6052: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.createSelectionRenderModel = void 0;
                    class s {
                        constructor() {
                            this.clear()
                        }
                        clear() {
                            this.hasSelection = !1, this.columnSelectMode = !1, this.viewportStartRow = 0, this.viewportEndRow = 0, this.viewportCappedStartRow = 0, this.viewportCappedEndRow = 0, this.startCol = 0, this.endCol = 0, this.selectionStart = void 0, this.selectionEnd = void 0
                        }
                        update(g, u, _, v = !1) {
                            if (this.selectionStart = u, this.selectionEnd = _, !u || !_ || u[0] === _[0] && u[1] === _[1]) return void this.clear();
                            const D = g.buffers.active.ydisp,
                                d = u[1] - D,
                                a = _[1] - D,
                                o = Math.max(d, 0),
                                i = Math.min(a, g.rows - 1);
                            o >= g.rows || i < 0 ? this.clear() : (this.hasSelection = !0, this.columnSelectMode = v, this.viewportStartRow = d, this.viewportEndRow = a, this.viewportCappedStartRow = o, this.viewportCappedEndRow = i, this.startCol = u[0], this.endCol = _[0])
                        }
                        isCellSelected(g, u, _) {
                            return !!this.hasSelection && (_ -= g.buffer.active.viewportY, this.columnSelectMode ? this.startCol <= this.endCol ? u >= this.startCol && _ >= this.viewportCappedStartRow && u < this.endCol && _ <= this.viewportCappedEndRow : u < this.startCol && _ >= this.viewportCappedStartRow && u >= this.endCol && _ <= this.viewportCappedEndRow : _ > this.viewportStartRow && _ < this.viewportEndRow || this.viewportStartRow === this.viewportEndRow && _ === this.viewportStartRow && u >= this.startCol && u < this.endCol || this.viewportStartRow < this.viewportEndRow && _ === this.viewportEndRow && u < this.endCol || this.viewportStartRow < this.viewportEndRow && _ === this.viewportStartRow && u >= this.startCol)
                        }
                    }
                    r.createSelectionRenderModel = function() {
                        return new s
                    }
                },
                456: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.SelectionModel = void 0, r.SelectionModel = class {
                        constructor(s) {
                            this._bufferService = s, this.isSelectAllActive = !1, this.selectionStartLength = 0
                        }
                        clearSelection() {
                            this.selectionStart = void 0, this.selectionEnd = void 0, this.isSelectAllActive = !1, this.selectionStartLength = 0
                        }
                        get finalSelectionStart() {
                            return this.isSelectAllActive ? [0, 0] : this.selectionEnd && this.selectionStart && this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart
                        }
                        get finalSelectionEnd() {
                            if (this.isSelectAllActive) return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];
                            if (this.selectionStart) {
                                if (!this.selectionEnd || this.areSelectionValuesReversed()) {
                                    const s = this.selectionStart[0] + this.selectionStartLength;
                                    return s > this._bufferService.cols ? s % this._bufferService.cols == 0 ? [this._bufferService.cols, this.selectionStart[1] + Math.floor(s / this._bufferService.cols) - 1] : [s % this._bufferService.cols, this.selectionStart[1] + Math.floor(s / this._bufferService.cols)] : [s, this.selectionStart[1]]
                                }
                                if (this.selectionStartLength && this.selectionEnd[1] === this.selectionStart[1]) {
                                    const s = this.selectionStart[0] + this.selectionStartLength;
                                    return s > this._bufferService.cols ? [s % this._bufferService.cols, this.selectionStart[1] + Math.floor(s / this._bufferService.cols)] : [Math.max(s, this.selectionEnd[0]), this.selectionEnd[1]]
                                }
                                return this.selectionEnd
                            }
                        }
                        areSelectionValuesReversed() {
                            const s = this.selectionStart,
                                c = this.selectionEnd;
                            return !(!s || !c) && (s[1] > c[1] || s[1] === c[1] && s[0] > c[0])
                        }
                        handleTrim(s) {
                            return this.selectionStart && (this.selectionStart[1] -= s), this.selectionEnd && (this.selectionEnd[1] -= s), this.selectionEnd && this.selectionEnd[1] < 0 ? (this.clearSelection(), !0) : (this.selectionStart && this.selectionStart[1] < 0 && (this.selectionStart[1] = 0), !1)
                        }
                    }
                },
                428: function(C, r, s) {
                    var c = this && this.__decorate || function(i, l, b, A) {
                            var n, T = arguments.length,
                                S = T < 3 ? l : A === null ? A = Object.getOwnPropertyDescriptor(l, b) : A;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") S = Reflect.decorate(i, l, b, A);
                            else
                                for (var L = i.length - 1; L >= 0; L--)(n = i[L]) && (S = (T < 3 ? n(S) : T > 3 ? n(l, b, S) : n(l, b)) || S);
                            return T > 3 && S && Object.defineProperty(l, b, S), S
                        },
                        g = this && this.__param || function(i, l) {
                            return function(b, A) {
                                l(b, A, i)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.CharSizeService = void 0;
                    const u = s(2585),
                        _ = s(8460),
                        v = s(844);
                    let D = r.CharSizeService = class extends v.Disposable {
                        get hasValidSize() {
                            return this.width > 0 && this.height > 0
                        }
                        constructor(i, l, b) {
                            super(), this._optionsService = b, this.width = 0, this.height = 0, this._onCharSizeChange = this.register(new _.EventEmitter), this.onCharSizeChange = this._onCharSizeChange.event;
                            try {
                                this._measureStrategy = this.register(new o(this._optionsService))
                            } catch {
                                this._measureStrategy = this.register(new a(i, l, this._optionsService))
                            }
                            this.register(this._optionsService.onMultipleOptionChange(["fontFamily", "fontSize"], () => this.measure()))
                        }
                        measure() {
                            const i = this._measureStrategy.measure();
                            i.width === this.width && i.height === this.height || (this.width = i.width, this.height = i.height, this._onCharSizeChange.fire())
                        }
                    };
                    r.CharSizeService = D = c([g(2, u.IOptionsService)], D);
                    class d extends v.Disposable {
                        constructor() {
                            super(...arguments), this._result = {
                                width: 0,
                                height: 0
                            }
                        }
                        _validateAndSet(l, b) {
                            l !== void 0 && l > 0 && b !== void 0 && b > 0 && (this._result.width = l, this._result.height = b)
                        }
                    }
                    class a extends d {
                        constructor(l, b, A) {
                            super(), this._document = l, this._parentElement = b, this._optionsService = A, this._measureElement = this._document.createElement("span"), this._measureElement.classList.add("xterm-char-measure-element"), this._measureElement.textContent = "W".repeat(32), this._measureElement.setAttribute("aria-hidden", "true"), this._measureElement.style.whiteSpace = "pre", this._measureElement.style.fontKerning = "none", this._parentElement.appendChild(this._measureElement)
                        }
                        measure() {
                            return this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily, this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`, this._validateAndSet(Number(this._measureElement.offsetWidth) / 32, Number(this._measureElement.offsetHeight)), this._result
                        }
                    }
                    class o extends d {
                        constructor(l) {
                            super(), this._optionsService = l, this._canvas = new OffscreenCanvas(100, 100), this._ctx = this._canvas.getContext("2d");
                            const b = this._ctx.measureText("W");
                            if (!("width" in b && "fontBoundingBoxAscent" in b && "fontBoundingBoxDescent" in b)) throw new Error("Required font metrics not supported")
                        }
                        measure() {
                            this._ctx.font = `${this._optionsService.rawOptions.fontSize}px ${this._optionsService.rawOptions.fontFamily}`;
                            const l = this._ctx.measureText("W");
                            return this._validateAndSet(l.width, l.fontBoundingBoxAscent + l.fontBoundingBoxDescent), this._result
                        }
                    }
                },
                4269: function(C, r, s) {
                    var c = this && this.__decorate || function(o, i, l, b) {
                            var A, n = arguments.length,
                                T = n < 3 ? i : b === null ? b = Object.getOwnPropertyDescriptor(i, l) : b;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") T = Reflect.decorate(o, i, l, b);
                            else
                                for (var S = o.length - 1; S >= 0; S--)(A = o[S]) && (T = (n < 3 ? A(T) : n > 3 ? A(i, l, T) : A(i, l)) || T);
                            return n > 3 && T && Object.defineProperty(i, l, T), T
                        },
                        g = this && this.__param || function(o, i) {
                            return function(l, b) {
                                i(l, b, o)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.CharacterJoinerService = r.JoinedCellData = void 0;
                    const u = s(3734),
                        _ = s(643),
                        v = s(511),
                        D = s(2585);
                    class d extends u.AttributeData {
                        constructor(i, l, b) {
                            super(), this.content = 0, this.combinedData = "", this.fg = i.fg, this.bg = i.bg, this.combinedData = l, this._width = b
                        }
                        isCombined() {
                            return 2097152
                        }
                        getWidth() {
                            return this._width
                        }
                        getChars() {
                            return this.combinedData
                        }
                        getCode() {
                            return 2097151
                        }
                        setFromCharData(i) {
                            throw new Error("not implemented")
                        }
                        getAsCharData() {
                            return [this.fg, this.getChars(), this.getWidth(), this.getCode()]
                        }
                    }
                    r.JoinedCellData = d;
                    let a = r.CharacterJoinerService = class Ni {
                        constructor(i) {
                            this._bufferService = i, this._characterJoiners = [], this._nextCharacterJoinerId = 0, this._workCell = new v.CellData
                        }
                        register(i) {
                            const l = {
                                id: this._nextCharacterJoinerId++,
                                handler: i
                            };
                            return this._characterJoiners.push(l), l.id
                        }
                        deregister(i) {
                            for (let l = 0; l < this._characterJoiners.length; l++)
                                if (this._characterJoiners[l].id === i) return this._characterJoiners.splice(l, 1), !0;
                            return !1
                        }
                        getJoinedCharacters(i) {
                            if (this._characterJoiners.length === 0) return [];
                            const l = this._bufferService.buffer.lines.get(i);
                            if (!l || l.length === 0) return [];
                            const b = [],
                                A = l.translateToString(!0);
                            let n = 0,
                                T = 0,
                                S = 0,
                                L = l.getFg(0),
                                z = l.getBg(0);
                            for (let G = 0; G < l.getTrimmedLength(); G++)
                                if (l.loadCell(G, this._workCell), this._workCell.getWidth() !== 0) {
                                    if (this._workCell.fg !== L || this._workCell.bg !== z) {
                                        if (G - n > 1) {
                                            const K = this._getJoinedRanges(A, S, T, l, n);
                                            for (let U = 0; U < K.length; U++) b.push(K[U])
                                        }
                                        n = G, S = T, L = this._workCell.fg, z = this._workCell.bg
                                    }
                                    T += this._workCell.getChars().length || _.WHITESPACE_CELL_CHAR.length
                                } if (this._bufferService.cols - n > 1) {
                                const G = this._getJoinedRanges(A, S, T, l, n);
                                for (let K = 0; K < G.length; K++) b.push(G[K])
                            }
                            return b
                        }
                        _getJoinedRanges(i, l, b, A, n) {
                            const T = i.substring(l, b);
                            let S = [];
                            try {
                                S = this._characterJoiners[0].handler(T)
                            } catch (L) {
                                console.error(L)
                            }
                            for (let L = 1; L < this._characterJoiners.length; L++) try {
                                const z = this._characterJoiners[L].handler(T);
                                for (let G = 0; G < z.length; G++) Ni._mergeRanges(S, z[G])
                            } catch (z) {
                                console.error(z)
                            }
                            return this._stringRangesToCellRanges(S, A, n), S
                        }
                        _stringRangesToCellRanges(i, l, b) {
                            let A = 0,
                                n = !1,
                                T = 0,
                                S = i[A];
                            if (S) {
                                for (let L = b; L < this._bufferService.cols; L++) {
                                    const z = l.getWidth(L),
                                        G = l.getString(L).length || _.WHITESPACE_CELL_CHAR.length;
                                    if (z !== 0) {
                                        if (!n && S[0] <= T && (S[0] = L, n = !0), S[1] <= T) {
                                            if (S[1] = L, S = i[++A], !S) break;
                                            S[0] <= T ? (S[0] = L, n = !0) : n = !1
                                        }
                                        T += G
                                    }
                                }
                                S && (S[1] = this._bufferService.cols)
                            }
                        }
                        static _mergeRanges(i, l) {
                            let b = !1;
                            for (let A = 0; A < i.length; A++) {
                                const n = i[A];
                                if (b) {
                                    if (l[1] <= n[0]) return i[A - 1][1] = l[1], i;
                                    if (l[1] <= n[1]) return i[A - 1][1] = Math.max(l[1], n[1]), i.splice(A, 1), i;
                                    i.splice(A, 1), A--
                                } else {
                                    if (l[1] <= n[0]) return i.splice(A, 0, l), i;
                                    if (l[1] <= n[1]) return n[0] = Math.min(l[0], n[0]), i;
                                    l[0] < n[1] && (n[0] = Math.min(l[0], n[0]), b = !0)
                                }
                            }
                            return b ? i[i.length - 1][1] = l[1] : i.push(l), i
                        }
                    };
                    r.CharacterJoinerService = a = c([g(0, D.IBufferService)], a)
                },
                5114: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.CoreBrowserService = void 0;
                    const c = s(844),
                        g = s(8460),
                        u = s(3656);
                    class _ extends c.Disposable {
                        constructor(d, a, o) {
                            super(), this._textarea = d, this._window = a, this.mainDocument = o, this._isFocused = !1, this._cachedIsFocused = void 0, this._screenDprMonitor = new v(this._window), this._onDprChange = this.register(new g.EventEmitter), this.onDprChange = this._onDprChange.event, this._onWindowChange = this.register(new g.EventEmitter), this.onWindowChange = this._onWindowChange.event, this.register(this.onWindowChange(i => this._screenDprMonitor.setWindow(i))), this.register((0, g.forwardEvent)(this._screenDprMonitor.onDprChange, this._onDprChange)), this._textarea.addEventListener("focus", () => this._isFocused = !0), this._textarea.addEventListener("blur", () => this._isFocused = !1)
                        }
                        get window() {
                            return this._window
                        }
                        set window(d) {
                            this._window !== d && (this._window = d, this._onWindowChange.fire(this._window))
                        }
                        get dpr() {
                            return this.window.devicePixelRatio
                        }
                        get isFocused() {
                            return this._cachedIsFocused === void 0 && (this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus(), queueMicrotask(() => this._cachedIsFocused = void 0)), this._cachedIsFocused
                        }
                    }
                    r.CoreBrowserService = _;
                    class v extends c.Disposable {
                        constructor(d) {
                            super(), this._parentWindow = d, this._windowResizeListener = this.register(new c.MutableDisposable), this._onDprChange = this.register(new g.EventEmitter), this.onDprChange = this._onDprChange.event, this._outerListener = () => this._setDprAndFireIfDiffers(), this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio, this._updateDpr(), this._setWindowResizeListener(), this.register((0, c.toDisposable)(() => this.clearListener()))
                        }
                        setWindow(d) {
                            this._parentWindow = d, this._setWindowResizeListener(), this._setDprAndFireIfDiffers()
                        }
                        _setWindowResizeListener() {
                            this._windowResizeListener.value = (0, u.addDisposableDomListener)(this._parentWindow, "resize", () => this._setDprAndFireIfDiffers())
                        }
                        _setDprAndFireIfDiffers() {
                            this._parentWindow.devicePixelRatio !== this._currentDevicePixelRatio && this._onDprChange.fire(this._parentWindow.devicePixelRatio), this._updateDpr()
                        }
                        _updateDpr() {
                            var d;
                            this._outerListener && ((d = this._resolutionMediaMatchList) == null || d.removeListener(this._outerListener), this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio, this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`), this._resolutionMediaMatchList.addListener(this._outerListener))
                        }
                        clearListener() {
                            this._resolutionMediaMatchList && this._outerListener && (this._resolutionMediaMatchList.removeListener(this._outerListener), this._resolutionMediaMatchList = void 0, this._outerListener = void 0)
                        }
                    }
                },
                779: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.LinkProviderService = void 0;
                    const c = s(844);
                    class g extends c.Disposable {
                        constructor() {
                            super(), this.linkProviders = [], this.register((0, c.toDisposable)(() => this.linkProviders.length = 0))
                        }
                        registerLinkProvider(_) {
                            return this.linkProviders.push(_), {
                                dispose: () => {
                                    const v = this.linkProviders.indexOf(_);
                                    v !== -1 && this.linkProviders.splice(v, 1)
                                }
                            }
                        }
                    }
                    r.LinkProviderService = g
                },
                8934: function(C, r, s) {
                    var c = this && this.__decorate || function(D, d, a, o) {
                            var i, l = arguments.length,
                                b = l < 3 ? d : o === null ? o = Object.getOwnPropertyDescriptor(d, a) : o;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") b = Reflect.decorate(D, d, a, o);
                            else
                                for (var A = D.length - 1; A >= 0; A--)(i = D[A]) && (b = (l < 3 ? i(b) : l > 3 ? i(d, a, b) : i(d, a)) || b);
                            return l > 3 && b && Object.defineProperty(d, a, b), b
                        },
                        g = this && this.__param || function(D, d) {
                            return function(a, o) {
                                d(a, o, D)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.MouseService = void 0;
                    const u = s(4725),
                        _ = s(9806);
                    let v = r.MouseService = class {
                        constructor(D, d) {
                            this._renderService = D, this._charSizeService = d
                        }
                        getCoords(D, d, a, o, i) {
                            return (0, _.getCoords)(window, D, d, a, o, this._charSizeService.hasValidSize, this._renderService.dimensions.css.cell.width, this._renderService.dimensions.css.cell.height, i)
                        }
                        getMouseReportCoords(D, d) {
                            const a = (0, _.getCoordsRelativeToElement)(window, D, d);
                            if (this._charSizeService.hasValidSize) return a[0] = Math.min(Math.max(a[0], 0), this._renderService.dimensions.css.canvas.width - 1), a[1] = Math.min(Math.max(a[1], 0), this._renderService.dimensions.css.canvas.height - 1), {
                                col: Math.floor(a[0] / this._renderService.dimensions.css.cell.width),
                                row: Math.floor(a[1] / this._renderService.dimensions.css.cell.height),
                                x: Math.floor(a[0]),
                                y: Math.floor(a[1])
                            }
                        }
                    };
                    r.MouseService = v = c([g(0, u.IRenderService), g(1, u.ICharSizeService)], v)
                },
                3230: function(C, r, s) {
                    var c = this && this.__decorate || function(i, l, b, A) {
                            var n, T = arguments.length,
                                S = T < 3 ? l : A === null ? A = Object.getOwnPropertyDescriptor(l, b) : A;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") S = Reflect.decorate(i, l, b, A);
                            else
                                for (var L = i.length - 1; L >= 0; L--)(n = i[L]) && (S = (T < 3 ? n(S) : T > 3 ? n(l, b, S) : n(l, b)) || S);
                            return T > 3 && S && Object.defineProperty(l, b, S), S
                        },
                        g = this && this.__param || function(i, l) {
                            return function(b, A) {
                                l(b, A, i)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.RenderService = void 0;
                    const u = s(6193),
                        _ = s(4725),
                        v = s(8460),
                        D = s(844),
                        d = s(7226),
                        a = s(2585);
                    let o = r.RenderService = class extends D.Disposable {
                        get dimensions() {
                            return this._renderer.value.dimensions
                        }
                        constructor(i, l, b, A, n, T, S, L) {
                            super(), this._rowCount = i, this._charSizeService = A, this._renderer = this.register(new D.MutableDisposable), this._pausedResizeTask = new d.DebouncedIdleTask, this._observerDisposable = this.register(new D.MutableDisposable), this._isPaused = !1, this._needsFullRefresh = !1, this._isNextRenderRedrawOnly = !0, this._needsSelectionRefresh = !1, this._canvasWidth = 0, this._canvasHeight = 0, this._selectionState = {
                                start: void 0,
                                end: void 0,
                                columnSelectMode: !1
                            }, this._onDimensionsChange = this.register(new v.EventEmitter), this.onDimensionsChange = this._onDimensionsChange.event, this._onRenderedViewportChange = this.register(new v.EventEmitter), this.onRenderedViewportChange = this._onRenderedViewportChange.event, this._onRender = this.register(new v.EventEmitter), this.onRender = this._onRender.event, this._onRefreshRequest = this.register(new v.EventEmitter), this.onRefreshRequest = this._onRefreshRequest.event, this._renderDebouncer = new u.RenderDebouncer((z, G) => this._renderRows(z, G), S), this.register(this._renderDebouncer), this.register(S.onDprChange(() => this.handleDevicePixelRatioChange())), this.register(T.onResize(() => this._fullRefresh())), this.register(T.buffers.onBufferActivate(() => {
                                var z;
                                return (z = this._renderer.value) == null ? void 0 : z.clear()
                            })), this.register(b.onOptionChange(() => this._handleOptionsChanged())), this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged())), this.register(n.onDecorationRegistered(() => this._fullRefresh())), this.register(n.onDecorationRemoved(() => this._fullRefresh())), this.register(b.onMultipleOptionChange(["customGlyphs", "drawBoldTextInBrightColors", "letterSpacing", "lineHeight", "fontFamily", "fontSize", "fontWeight", "fontWeightBold", "minimumContrastRatio", "rescaleOverlappingGlyphs"], () => {
                                this.clear(), this.handleResize(T.cols, T.rows), this._fullRefresh()
                            })), this.register(b.onMultipleOptionChange(["cursorBlink", "cursorStyle"], () => this.refreshRows(T.buffer.y, T.buffer.y, !0))), this.register(L.onChangeColors(() => this._fullRefresh())), this._registerIntersectionObserver(S.window, l), this.register(S.onWindowChange(z => this._registerIntersectionObserver(z, l)))
                        }
                        _registerIntersectionObserver(i, l) {
                            if ("IntersectionObserver" in i) {
                                const b = new i.IntersectionObserver(A => this._handleIntersectionChange(A[A.length - 1]), {
                                    threshold: 0
                                });
                                b.observe(l), this._observerDisposable.value = (0, D.toDisposable)(() => b.disconnect())
                            }
                        }
                        _handleIntersectionChange(i) {
                            this._isPaused = i.isIntersecting === void 0 ? i.intersectionRatio === 0 : !i.isIntersecting, this._isPaused || this._charSizeService.hasValidSize || this._charSizeService.measure(), !this._isPaused && this._needsFullRefresh && (this._pausedResizeTask.flush(), this.refreshRows(0, this._rowCount - 1), this._needsFullRefresh = !1)
                        }
                        refreshRows(i, l, b = !1) {
                            this._isPaused ? this._needsFullRefresh = !0 : (b || (this._isNextRenderRedrawOnly = !1), this._renderDebouncer.refresh(i, l, this._rowCount))
                        }
                        _renderRows(i, l) {
                            this._renderer.value && (i = Math.min(i, this._rowCount - 1), l = Math.min(l, this._rowCount - 1), this._renderer.value.renderRows(i, l), this._needsSelectionRefresh && (this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode), this._needsSelectionRefresh = !1), this._isNextRenderRedrawOnly || this._onRenderedViewportChange.fire({
                                start: i,
                                end: l
                            }), this._onRender.fire({
                                start: i,
                                end: l
                            }), this._isNextRenderRedrawOnly = !0)
                        }
                        resize(i, l) {
                            this._rowCount = l, this._fireOnCanvasResize()
                        }
                        _handleOptionsChanged() {
                            this._renderer.value && (this.refreshRows(0, this._rowCount - 1), this._fireOnCanvasResize())
                        }
                        _fireOnCanvasResize() {
                            this._renderer.value && (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight || this._onDimensionsChange.fire(this._renderer.value.dimensions))
                        }
                        hasRenderer() {
                            return !!this._renderer.value
                        }
                        setRenderer(i) {
                            this._renderer.value = i, this._renderer.value && (this._renderer.value.onRequestRedraw(l => this.refreshRows(l.start, l.end, !0)), this._needsSelectionRefresh = !0, this._fullRefresh())
                        }
                        addRefreshCallback(i) {
                            return this._renderDebouncer.addRefreshCallback(i)
                        }
                        _fullRefresh() {
                            this._isPaused ? this._needsFullRefresh = !0 : this.refreshRows(0, this._rowCount - 1)
                        }
                        clearTextureAtlas() {
                            var i, l;
                            this._renderer.value && ((l = (i = this._renderer.value).clearTextureAtlas) == null || l.call(i), this._fullRefresh())
                        }
                        handleDevicePixelRatioChange() {
                            this._charSizeService.measure(), this._renderer.value && (this._renderer.value.handleDevicePixelRatioChange(), this.refreshRows(0, this._rowCount - 1))
                        }
                        handleResize(i, l) {
                            this._renderer.value && (this._isPaused ? this._pausedResizeTask.set(() => {
                                var b;
                                return (b = this._renderer.value) == null ? void 0 : b.handleResize(i, l)
                            }) : this._renderer.value.handleResize(i, l), this._fullRefresh())
                        }
                        handleCharSizeChanged() {
                            var i;
                            (i = this._renderer.value) == null || i.handleCharSizeChanged()
                        }
                        handleBlur() {
                            var i;
                            (i = this._renderer.value) == null || i.handleBlur()
                        }
                        handleFocus() {
                            var i;
                            (i = this._renderer.value) == null || i.handleFocus()
                        }
                        handleSelectionChanged(i, l, b) {
                            var A;
                            this._selectionState.start = i, this._selectionState.end = l, this._selectionState.columnSelectMode = b, (A = this._renderer.value) == null || A.handleSelectionChanged(i, l, b)
                        }
                        handleCursorMove() {
                            var i;
                            (i = this._renderer.value) == null || i.handleCursorMove()
                        }
                        clear() {
                            var i;
                            (i = this._renderer.value) == null || i.clear()
                        }
                    };
                    r.RenderService = o = c([g(2, a.IOptionsService), g(3, _.ICharSizeService), g(4, a.IDecorationService), g(5, a.IBufferService), g(6, _.ICoreBrowserService), g(7, _.IThemeService)], o)
                },
                9312: function(C, r, s) {
                    var c = this && this.__decorate || function(S, L, z, G) {
                            var K, U = arguments.length,
                                te = U < 3 ? L : G === null ? G = Object.getOwnPropertyDescriptor(L, z) : G;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") te = Reflect.decorate(S, L, z, G);
                            else
                                for (var fe = S.length - 1; fe >= 0; fe--)(K = S[fe]) && (te = (U < 3 ? K(te) : U > 3 ? K(L, z, te) : K(L, z)) || te);
                            return U > 3 && te && Object.defineProperty(L, z, te), te
                        },
                        g = this && this.__param || function(S, L) {
                            return function(z, G) {
                                L(z, G, S)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.SelectionService = void 0;
                    const u = s(9806),
                        _ = s(9504),
                        v = s(456),
                        D = s(4725),
                        d = s(8460),
                        a = s(844),
                        o = s(6114),
                        i = s(4841),
                        l = s(511),
                        b = s(2585),
                        A = " ",
                        n = new RegExp(A, "g");
                    let T = r.SelectionService = class extends a.Disposable {
                        constructor(S, L, z, G, K, U, te, fe, ye) {
                            super(), this._element = S, this._screenElement = L, this._linkifier = z, this._bufferService = G, this._coreService = K, this._mouseService = U, this._optionsService = te, this._renderService = fe, this._coreBrowserService = ye, this._dragScrollAmount = 0, this._enabled = !0, this._workCell = new l.CellData, this._mouseDownTimeStamp = 0, this._oldHasSelection = !1, this._oldSelectionStart = void 0, this._oldSelectionEnd = void 0, this._onLinuxMouseSelection = this.register(new d.EventEmitter), this.onLinuxMouseSelection = this._onLinuxMouseSelection.event, this._onRedrawRequest = this.register(new d.EventEmitter), this.onRequestRedraw = this._onRedrawRequest.event, this._onSelectionChange = this.register(new d.EventEmitter), this.onSelectionChange = this._onSelectionChange.event, this._onRequestScrollLines = this.register(new d.EventEmitter), this.onRequestScrollLines = this._onRequestScrollLines.event, this._mouseMoveListener = Fe => this._handleMouseMove(Fe), this._mouseUpListener = Fe => this._handleMouseUp(Fe), this._coreService.onUserInput(() => {
                                this.hasSelection && this.clearSelection()
                            }), this._trimListener = this._bufferService.buffer.lines.onTrim(Fe => this._handleTrim(Fe)), this.register(this._bufferService.buffers.onBufferActivate(Fe => this._handleBufferActivate(Fe))), this.enable(), this._model = new v.SelectionModel(this._bufferService), this._activeSelectionMode = 0, this.register((0, a.toDisposable)(() => {
                                this._removeMouseDownListeners()
                            }))
                        }
                        reset() {
                            this.clearSelection()
                        }
                        disable() {
                            this.clearSelection(), this._enabled = !1
                        }
                        enable() {
                            this._enabled = !0
                        }
                        get selectionStart() {
                            return this._model.finalSelectionStart
                        }
                        get selectionEnd() {
                            return this._model.finalSelectionEnd
                        }
                        get hasSelection() {
                            const S = this._model.finalSelectionStart,
                                L = this._model.finalSelectionEnd;
                            return !(!S || !L || S[0] === L[0] && S[1] === L[1])
                        }
                        get selectionText() {
                            const S = this._model.finalSelectionStart,
                                L = this._model.finalSelectionEnd;
                            if (!S || !L) return "";
                            const z = this._bufferService.buffer,
                                G = [];
                            if (this._activeSelectionMode === 3) {
                                if (S[0] === L[0]) return "";
                                const K = S[0] < L[0] ? S[0] : L[0],
                                    U = S[0] < L[0] ? L[0] : S[0];
                                for (let te = S[1]; te <= L[1]; te++) {
                                    const fe = z.translateBufferLineToString(te, !0, K, U);
                                    G.push(fe)
                                }
                            } else {
                                const K = S[1] === L[1] ? L[0] : void 0;
                                G.push(z.translateBufferLineToString(S[1], !0, S[0], K));
                                for (let U = S[1] + 1; U <= L[1] - 1; U++) {
                                    const te = z.lines.get(U),
                                        fe = z.translateBufferLineToString(U, !0);
                                    te != null && te.isWrapped ? G[G.length - 1] += fe : G.push(fe)
                                }
                                if (S[1] !== L[1]) {
                                    const U = z.lines.get(L[1]),
                                        te = z.translateBufferLineToString(L[1], !0, 0, L[0]);
                                    U && U.isWrapped ? G[G.length - 1] += te : G.push(te)
                                }
                            }
                            return G.map(K => K.replace(n, " ")).join(o.isWindows ? `\r
` : `
`)
                        }
                        clearSelection() {
                            this._model.clearSelection(), this._removeMouseDownListeners(), this.refresh(), this._onSelectionChange.fire()
                        }
                        refresh(S) {
                            this._refreshAnimationFrame || (this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh())), o.isLinux && S && this.selectionText.length && this._onLinuxMouseSelection.fire(this.selectionText)
                        }
                        _refresh() {
                            this._refreshAnimationFrame = void 0, this._onRedrawRequest.fire({
                                start: this._model.finalSelectionStart,
                                end: this._model.finalSelectionEnd,
                                columnSelectMode: this._activeSelectionMode === 3
                            })
                        }
                        _isClickInSelection(S) {
                            const L = this._getMouseBufferCoords(S),
                                z = this._model.finalSelectionStart,
                                G = this._model.finalSelectionEnd;
                            return !!(z && G && L) && this._areCoordsInSelection(L, z, G)
                        }
                        isCellInSelection(S, L) {
                            const z = this._model.finalSelectionStart,
                                G = this._model.finalSelectionEnd;
                            return !(!z || !G) && this._areCoordsInSelection([S, L], z, G)
                        }
                        _areCoordsInSelection(S, L, z) {
                            return S[1] > L[1] && S[1] < z[1] || L[1] === z[1] && S[1] === L[1] && S[0] >= L[0] && S[0] < z[0] || L[1] < z[1] && S[1] === z[1] && S[0] < z[0] || L[1] < z[1] && S[1] === L[1] && S[0] >= L[0]
                        }
                        _selectWordAtCursor(S, L) {
                            var K, U;
                            const z = (U = (K = this._linkifier.currentLink) == null ? void 0 : K.link) == null ? void 0 : U.range;
                            if (z) return this._model.selectionStart = [z.start.x - 1, z.start.y - 1], this._model.selectionStartLength = (0, i.getRangeLength)(z, this._bufferService.cols), this._model.selectionEnd = void 0, !0;
                            const G = this._getMouseBufferCoords(S);
                            return !!G && (this._selectWordAt(G, L), this._model.selectionEnd = void 0, !0)
                        }
                        selectAll() {
                            this._model.isSelectAllActive = !0, this.refresh(), this._onSelectionChange.fire()
                        }
                        selectLines(S, L) {
                            this._model.clearSelection(), S = Math.max(S, 0), L = Math.min(L, this._bufferService.buffer.lines.length - 1), this._model.selectionStart = [0, S], this._model.selectionEnd = [this._bufferService.cols, L], this.refresh(), this._onSelectionChange.fire()
                        }
                        _handleTrim(S) {
                            this._model.handleTrim(S) && this.refresh()
                        }
                        _getMouseBufferCoords(S) {
                            const L = this._mouseService.getCoords(S, this._screenElement, this._bufferService.cols, this._bufferService.rows, !0);
                            if (L) return L[0]--, L[1]--, L[1] += this._bufferService.buffer.ydisp, L
                        }
                        _getMouseEventScrollAmount(S) {
                            let L = (0, u.getCoordsRelativeToElement)(this._coreBrowserService.window, S, this._screenElement)[1];
                            const z = this._renderService.dimensions.css.canvas.height;
                            return L >= 0 && L <= z ? 0 : (L > z && (L -= z), L = Math.min(Math.max(L, -50), 50), L /= 50, L / Math.abs(L) + Math.round(14 * L))
                        }
                        shouldForceSelection(S) {
                            return o.isMac ? S.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection : S.shiftKey
                        }
                        handleMouseDown(S) {
                            if (this._mouseDownTimeStamp = S.timeStamp, (S.button !== 2 || !this.hasSelection) && S.button === 0) {
                                if (!this._enabled) {
                                    if (!this.shouldForceSelection(S)) return;
                                    S.stopPropagation()
                                }
                                S.preventDefault(), this._dragScrollAmount = 0, this._enabled && S.shiftKey ? this._handleIncrementalClick(S) : S.detail === 1 ? this._handleSingleClick(S) : S.detail === 2 ? this._handleDoubleClick(S) : S.detail === 3 && this._handleTripleClick(S), this._addMouseDownListeners(), this.refresh(!0)
                            }
                        }
                        _addMouseDownListeners() {
                            this._screenElement.ownerDocument && (this._screenElement.ownerDocument.addEventListener("mousemove", this._mouseMoveListener), this._screenElement.ownerDocument.addEventListener("mouseup", this._mouseUpListener)), this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), 50)
                        }
                        _removeMouseDownListeners() {
                            this._screenElement.ownerDocument && (this._screenElement.ownerDocument.removeEventListener("mousemove", this._mouseMoveListener), this._screenElement.ownerDocument.removeEventListener("mouseup", this._mouseUpListener)), this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer), this._dragScrollIntervalTimer = void 0
                        }
                        _handleIncrementalClick(S) {
                            this._model.selectionStart && (this._model.selectionEnd = this._getMouseBufferCoords(S))
                        }
                        _handleSingleClick(S) {
                            if (this._model.selectionStartLength = 0, this._model.isSelectAllActive = !1, this._activeSelectionMode = this.shouldColumnSelect(S) ? 3 : 0, this._model.selectionStart = this._getMouseBufferCoords(S), !this._model.selectionStart) return;
                            this._model.selectionEnd = void 0;
                            const L = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);
                            L && L.length !== this._model.selectionStart[0] && L.hasWidth(this._model.selectionStart[0]) === 0 && this._model.selectionStart[0]++
                        }
                        _handleDoubleClick(S) {
                            this._selectWordAtCursor(S, !0) && (this._activeSelectionMode = 1)
                        }
                        _handleTripleClick(S) {
                            const L = this._getMouseBufferCoords(S);
                            L && (this._activeSelectionMode = 2, this._selectLineAt(L[1]))
                        }
                        shouldColumnSelect(S) {
                            return S.altKey && !(o.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection)
                        }
                        _handleMouseMove(S) {
                            if (S.stopImmediatePropagation(), !this._model.selectionStart) return;
                            const L = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;
                            if (this._model.selectionEnd = this._getMouseBufferCoords(S), !this._model.selectionEnd) return void this.refresh(!0);
                            this._activeSelectionMode === 2 ? this._model.selectionEnd[1] < this._model.selectionStart[1] ? this._model.selectionEnd[0] = 0 : this._model.selectionEnd[0] = this._bufferService.cols : this._activeSelectionMode === 1 && this._selectToWordAt(this._model.selectionEnd), this._dragScrollAmount = this._getMouseEventScrollAmount(S), this._activeSelectionMode !== 3 && (this._dragScrollAmount > 0 ? this._model.selectionEnd[0] = this._bufferService.cols : this._dragScrollAmount < 0 && (this._model.selectionEnd[0] = 0));
                            const z = this._bufferService.buffer;
                            if (this._model.selectionEnd[1] < z.lines.length) {
                                const G = z.lines.get(this._model.selectionEnd[1]);
                                G && G.hasWidth(this._model.selectionEnd[0]) === 0 && this._model.selectionEnd[0] < this._bufferService.cols && this._model.selectionEnd[0]++
                            }
                            L && L[0] === this._model.selectionEnd[0] && L[1] === this._model.selectionEnd[1] || this.refresh(!0)
                        }
                        _dragScroll() {
                            if (this._model.selectionEnd && this._model.selectionStart && this._dragScrollAmount) {
                                this._onRequestScrollLines.fire({
                                    amount: this._dragScrollAmount,
                                    suppressScrollEvent: !1
                                });
                                const S = this._bufferService.buffer;
                                this._dragScrollAmount > 0 ? (this._activeSelectionMode !== 3 && (this._model.selectionEnd[0] = this._bufferService.cols), this._model.selectionEnd[1] = Math.min(S.ydisp + this._bufferService.rows, S.lines.length - 1)) : (this._activeSelectionMode !== 3 && (this._model.selectionEnd[0] = 0), this._model.selectionEnd[1] = S.ydisp), this.refresh()
                            }
                        }
                        _handleMouseUp(S) {
                            const L = S.timeStamp - this._mouseDownTimeStamp;
                            if (this._removeMouseDownListeners(), this.selectionText.length <= 1 && L < 500 && S.altKey && this._optionsService.rawOptions.altClickMovesCursor) {
                                if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {
                                    const z = this._mouseService.getCoords(S, this._element, this._bufferService.cols, this._bufferService.rows, !1);
                                    if (z && z[0] !== void 0 && z[1] !== void 0) {
                                        const G = (0, _.moveToCellSequence)(z[0] - 1, z[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);
                                        this._coreService.triggerDataEvent(G, !0)
                                    }
                                }
                            } else this._fireEventIfSelectionChanged()
                        }
                        _fireEventIfSelectionChanged() {
                            const S = this._model.finalSelectionStart,
                                L = this._model.finalSelectionEnd,
                                z = !(!S || !L || S[0] === L[0] && S[1] === L[1]);
                            z ? S && L && (this._oldSelectionStart && this._oldSelectionEnd && S[0] === this._oldSelectionStart[0] && S[1] === this._oldSelectionStart[1] && L[0] === this._oldSelectionEnd[0] && L[1] === this._oldSelectionEnd[1] || this._fireOnSelectionChange(S, L, z)) : this._oldHasSelection && this._fireOnSelectionChange(S, L, z)
                        }
                        _fireOnSelectionChange(S, L, z) {
                            this._oldSelectionStart = S, this._oldSelectionEnd = L, this._oldHasSelection = z, this._onSelectionChange.fire()
                        }
                        _handleBufferActivate(S) {
                            this.clearSelection(), this._trimListener.dispose(), this._trimListener = S.activeBuffer.lines.onTrim(L => this._handleTrim(L))
                        }
                        _convertViewportColToCharacterIndex(S, L) {
                            let z = L;
                            for (let G = 0; L >= G; G++) {
                                const K = S.loadCell(G, this._workCell).getChars().length;
                                this._workCell.getWidth() === 0 ? z-- : K > 1 && L !== G && (z += K - 1)
                            }
                            return z
                        }
                        setSelection(S, L, z) {
                            this._model.clearSelection(), this._removeMouseDownListeners(), this._model.selectionStart = [S, L], this._model.selectionStartLength = z, this.refresh(), this._fireEventIfSelectionChanged()
                        }
                        rightClickSelect(S) {
                            this._isClickInSelection(S) || (this._selectWordAtCursor(S, !1) && this.refresh(!0), this._fireEventIfSelectionChanged())
                        }
                        _getWordAt(S, L, z = !0, G = !0) {
                            if (S[0] >= this._bufferService.cols) return;
                            const K = this._bufferService.buffer,
                                U = K.lines.get(S[1]);
                            if (!U) return;
                            const te = K.translateBufferLineToString(S[1], !1);
                            let fe = this._convertViewportColToCharacterIndex(U, S[0]),
                                ye = fe;
                            const Fe = S[0] - fe;
                            let ge = 0,
                                O = 0,
                                Z = 0,
                                q = 0;
                            if (te.charAt(fe) === " ") {
                                for (; fe > 0 && te.charAt(fe - 1) === " ";) fe--;
                                for (; ye < te.length && te.charAt(ye + 1) === " ";) ye++
                            } else {
                                let Ee = S[0],
                                    je = S[0];
                                U.getWidth(Ee) === 0 && (ge++, Ee--), U.getWidth(je) === 2 && (O++, je++);
                                const ze = U.getString(je).length;
                                for (ze > 1 && (q += ze - 1, ye += ze - 1); Ee > 0 && fe > 0 && !this._isCharWordSeparator(U.loadCell(Ee - 1, this._workCell));) {
                                    U.loadCell(Ee - 1, this._workCell);
                                    const oe = this._workCell.getChars().length;
                                    this._workCell.getWidth() === 0 ? (ge++, Ee--) : oe > 1 && (Z += oe - 1, fe -= oe - 1), fe--, Ee--
                                }
                                for (; je < U.length && ye + 1 < te.length && !this._isCharWordSeparator(U.loadCell(je + 1, this._workCell));) {
                                    U.loadCell(je + 1, this._workCell);
                                    const oe = this._workCell.getChars().length;
                                    this._workCell.getWidth() === 2 ? (O++, je++) : oe > 1 && (q += oe - 1, ye += oe - 1), ye++, je++
                                }
                            }
                            ye++;
                            let re = fe + Fe - ge + Z,
                                we = Math.min(this._bufferService.cols, ye - fe + ge + O - Z - q);
                            if (L || te.slice(fe, ye).trim() !== "") {
                                if (z && re === 0 && U.getCodePoint(0) !== 32) {
                                    const Ee = K.lines.get(S[1] - 1);
                                    if (Ee && U.isWrapped && Ee.getCodePoint(this._bufferService.cols - 1) !== 32) {
                                        const je = this._getWordAt([this._bufferService.cols - 1, S[1] - 1], !1, !0, !1);
                                        if (je) {
                                            const ze = this._bufferService.cols - je.start;
                                            re -= ze, we += ze
                                        }
                                    }
                                }
                                if (G && re + we === this._bufferService.cols && U.getCodePoint(this._bufferService.cols - 1) !== 32) {
                                    const Ee = K.lines.get(S[1] + 1);
                                    if (Ee != null && Ee.isWrapped && Ee.getCodePoint(0) !== 32) {
                                        const je = this._getWordAt([0, S[1] + 1], !1, !1, !0);
                                        je && (we += je.length)
                                    }
                                }
                                return {
                                    start: re,
                                    length: we
                                }
                            }
                        }
                        _selectWordAt(S, L) {
                            const z = this._getWordAt(S, L);
                            if (z) {
                                for (; z.start < 0;) z.start += this._bufferService.cols, S[1]--;
                                this._model.selectionStart = [z.start, S[1]], this._model.selectionStartLength = z.length
                            }
                        }
                        _selectToWordAt(S) {
                            const L = this._getWordAt(S, !0);
                            if (L) {
                                let z = S[1];
                                for (; L.start < 0;) L.start += this._bufferService.cols, z--;
                                if (!this._model.areSelectionValuesReversed())
                                    for (; L.start + L.length > this._bufferService.cols;) L.length -= this._bufferService.cols, z++;
                                this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? L.start : L.start + L.length, z]
                            }
                        }
                        _isCharWordSeparator(S) {
                            return S.getWidth() !== 0 && this._optionsService.rawOptions.wordSeparator.indexOf(S.getChars()) >= 0
                        }
                        _selectLineAt(S) {
                            const L = this._bufferService.buffer.getWrappedRangeForLine(S),
                                z = {
                                    start: {
                                        x: 0,
                                        y: L.first
                                    },
                                    end: {
                                        x: this._bufferService.cols - 1,
                                        y: L.last
                                    }
                                };
                            this._model.selectionStart = [0, L.first], this._model.selectionEnd = void 0, this._model.selectionStartLength = (0, i.getRangeLength)(z, this._bufferService.cols)
                        }
                    };
                    r.SelectionService = T = c([g(3, b.IBufferService), g(4, b.ICoreService), g(5, D.IMouseService), g(6, b.IOptionsService), g(7, D.IRenderService), g(8, D.ICoreBrowserService)], T)
                },
                4725: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.ILinkProviderService = r.IThemeService = r.ICharacterJoinerService = r.ISelectionService = r.IRenderService = r.IMouseService = r.ICoreBrowserService = r.ICharSizeService = void 0;
                    const c = s(8343);
                    r.ICharSizeService = (0, c.createDecorator)("CharSizeService"), r.ICoreBrowserService = (0, c.createDecorator)("CoreBrowserService"), r.IMouseService = (0, c.createDecorator)("MouseService"), r.IRenderService = (0, c.createDecorator)("RenderService"), r.ISelectionService = (0, c.createDecorator)("SelectionService"), r.ICharacterJoinerService = (0, c.createDecorator)("CharacterJoinerService"), r.IThemeService = (0, c.createDecorator)("ThemeService"), r.ILinkProviderService = (0, c.createDecorator)("LinkProviderService")
                },
                6731: function(C, r, s) {
                    var c = this && this.__decorate || function(T, S, L, z) {
                            var G, K = arguments.length,
                                U = K < 3 ? S : z === null ? z = Object.getOwnPropertyDescriptor(S, L) : z;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") U = Reflect.decorate(T, S, L, z);
                            else
                                for (var te = T.length - 1; te >= 0; te--)(G = T[te]) && (U = (K < 3 ? G(U) : K > 3 ? G(S, L, U) : G(S, L)) || U);
                            return K > 3 && U && Object.defineProperty(S, L, U), U
                        },
                        g = this && this.__param || function(T, S) {
                            return function(L, z) {
                                S(L, z, T)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.ThemeService = r.DEFAULT_ANSI_COLORS = void 0;
                    const u = s(7239),
                        _ = s(8055),
                        v = s(8460),
                        D = s(844),
                        d = s(2585),
                        a = _.css.toColor("#ffffff"),
                        o = _.css.toColor("#000000"),
                        i = _.css.toColor("#ffffff"),
                        l = _.css.toColor("#000000"),
                        b = {
                            css: "rgba(255, 255, 255, 0.3)",
                            rgba: 4294967117
                        };
                    r.DEFAULT_ANSI_COLORS = Object.freeze((() => {
                        const T = [_.css.toColor("#2e3436"), _.css.toColor("#cc0000"), _.css.toColor("#4e9a06"), _.css.toColor("#c4a000"), _.css.toColor("#3465a4"), _.css.toColor("#75507b"), _.css.toColor("#06989a"), _.css.toColor("#d3d7cf"), _.css.toColor("#555753"), _.css.toColor("#ef2929"), _.css.toColor("#8ae234"), _.css.toColor("#fce94f"), _.css.toColor("#729fcf"), _.css.toColor("#ad7fa8"), _.css.toColor("#34e2e2"), _.css.toColor("#eeeeec")],
                            S = [0, 95, 135, 175, 215, 255];
                        for (let L = 0; L < 216; L++) {
                            const z = S[L / 36 % 6 | 0],
                                G = S[L / 6 % 6 | 0],
                                K = S[L % 6];
                            T.push({
                                css: _.channels.toCss(z, G, K),
                                rgba: _.channels.toRgba(z, G, K)
                            })
                        }
                        for (let L = 0; L < 24; L++) {
                            const z = 8 + 10 * L;
                            T.push({
                                css: _.channels.toCss(z, z, z),
                                rgba: _.channels.toRgba(z, z, z)
                            })
                        }
                        return T
                    })());
                    let A = r.ThemeService = class extends D.Disposable {
                        get colors() {
                            return this._colors
                        }
                        constructor(T) {
                            super(), this._optionsService = T, this._contrastCache = new u.ColorContrastCache, this._halfContrastCache = new u.ColorContrastCache, this._onChangeColors = this.register(new v.EventEmitter), this.onChangeColors = this._onChangeColors.event, this._colors = {
                                foreground: a,
                                background: o,
                                cursor: i,
                                cursorAccent: l,
                                selectionForeground: void 0,
                                selectionBackgroundTransparent: b,
                                selectionBackgroundOpaque: _.color.blend(o, b),
                                selectionInactiveBackgroundTransparent: b,
                                selectionInactiveBackgroundOpaque: _.color.blend(o, b),
                                ansi: r.DEFAULT_ANSI_COLORS.slice(),
                                contrastCache: this._contrastCache,
                                halfContrastCache: this._halfContrastCache
                            }, this._updateRestoreColors(), this._setTheme(this._optionsService.rawOptions.theme), this.register(this._optionsService.onSpecificOptionChange("minimumContrastRatio", () => this._contrastCache.clear())), this.register(this._optionsService.onSpecificOptionChange("theme", () => this._setTheme(this._optionsService.rawOptions.theme)))
                        }
                        _setTheme(T = {}) {
                            const S = this._colors;
                            if (S.foreground = n(T.foreground, a), S.background = n(T.background, o), S.cursor = n(T.cursor, i), S.cursorAccent = n(T.cursorAccent, l), S.selectionBackgroundTransparent = n(T.selectionBackground, b), S.selectionBackgroundOpaque = _.color.blend(S.background, S.selectionBackgroundTransparent), S.selectionInactiveBackgroundTransparent = n(T.selectionInactiveBackground, S.selectionBackgroundTransparent), S.selectionInactiveBackgroundOpaque = _.color.blend(S.background, S.selectionInactiveBackgroundTransparent), S.selectionForeground = T.selectionForeground ? n(T.selectionForeground, _.NULL_COLOR) : void 0, S.selectionForeground === _.NULL_COLOR && (S.selectionForeground = void 0), _.color.isOpaque(S.selectionBackgroundTransparent) && (S.selectionBackgroundTransparent = _.color.opacity(S.selectionBackgroundTransparent, .3)), _.color.isOpaque(S.selectionInactiveBackgroundTransparent) && (S.selectionInactiveBackgroundTransparent = _.color.opacity(S.selectionInactiveBackgroundTransparent, .3)), S.ansi = r.DEFAULT_ANSI_COLORS.slice(), S.ansi[0] = n(T.black, r.DEFAULT_ANSI_COLORS[0]), S.ansi[1] = n(T.red, r.DEFAULT_ANSI_COLORS[1]), S.ansi[2] = n(T.green, r.DEFAULT_ANSI_COLORS[2]), S.ansi[3] = n(T.yellow, r.DEFAULT_ANSI_COLORS[3]), S.ansi[4] = n(T.blue, r.DEFAULT_ANSI_COLORS[4]), S.ansi[5] = n(T.magenta, r.DEFAULT_ANSI_COLORS[5]), S.ansi[6] = n(T.cyan, r.DEFAULT_ANSI_COLORS[6]), S.ansi[7] = n(T.white, r.DEFAULT_ANSI_COLORS[7]), S.ansi[8] = n(T.brightBlack, r.DEFAULT_ANSI_COLORS[8]), S.ansi[9] = n(T.brightRed, r.DEFAULT_ANSI_COLORS[9]), S.ansi[10] = n(T.brightGreen, r.DEFAULT_ANSI_COLORS[10]), S.ansi[11] = n(T.brightYellow, r.DEFAULT_ANSI_COLORS[11]), S.ansi[12] = n(T.brightBlue, r.DEFAULT_ANSI_COLORS[12]), S.ansi[13] = n(T.brightMagenta, r.DEFAULT_ANSI_COLORS[13]), S.ansi[14] = n(T.brightCyan, r.DEFAULT_ANSI_COLORS[14]), S.ansi[15] = n(T.brightWhite, r.DEFAULT_ANSI_COLORS[15]), T.extendedAnsi) {
                                const L = Math.min(S.ansi.length - 16, T.extendedAnsi.length);
                                for (let z = 0; z < L; z++) S.ansi[z + 16] = n(T.extendedAnsi[z], r.DEFAULT_ANSI_COLORS[z + 16])
                            }
                            this._contrastCache.clear(), this._halfContrastCache.clear(), this._updateRestoreColors(), this._onChangeColors.fire(this.colors)
                        }
                        restoreColor(T) {
                            this._restoreColor(T), this._onChangeColors.fire(this.colors)
                        }
                        _restoreColor(T) {
                            if (T !== void 0) switch (T) {
                                case 256:
                                    this._colors.foreground = this._restoreColors.foreground;
                                    break;
                                case 257:
                                    this._colors.background = this._restoreColors.background;
                                    break;
                                case 258:
                                    this._colors.cursor = this._restoreColors.cursor;
                                    break;
                                default:
                                    this._colors.ansi[T] = this._restoreColors.ansi[T]
                            } else
                                for (let S = 0; S < this._restoreColors.ansi.length; ++S) this._colors.ansi[S] = this._restoreColors.ansi[S]
                        }
                        modifyColors(T) {
                            T(this._colors), this._onChangeColors.fire(this.colors)
                        }
                        _updateRestoreColors() {
                            this._restoreColors = {
                                foreground: this._colors.foreground,
                                background: this._colors.background,
                                cursor: this._colors.cursor,
                                ansi: this._colors.ansi.slice()
                            }
                        }
                    };

                    function n(T, S) {
                        if (T !== void 0) try {
                            return _.css.toColor(T)
                        } catch {}
                        return S
                    }
                    r.ThemeService = A = c([g(0, d.IOptionsService)], A)
                },
                6349: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.CircularList = void 0;
                    const c = s(8460),
                        g = s(844);
                    class u extends g.Disposable {
                        constructor(v) {
                            super(), this._maxLength = v, this.onDeleteEmitter = this.register(new c.EventEmitter), this.onDelete = this.onDeleteEmitter.event, this.onInsertEmitter = this.register(new c.EventEmitter), this.onInsert = this.onInsertEmitter.event, this.onTrimEmitter = this.register(new c.EventEmitter), this.onTrim = this.onTrimEmitter.event, this._array = new Array(this._maxLength), this._startIndex = 0, this._length = 0
                        }
                        get maxLength() {
                            return this._maxLength
                        }
                        set maxLength(v) {
                            if (this._maxLength === v) return;
                            const D = new Array(v);
                            for (let d = 0; d < Math.min(v, this.length); d++) D[d] = this._array[this._getCyclicIndex(d)];
                            this._array = D, this._maxLength = v, this._startIndex = 0
                        }
                        get length() {
                            return this._length
                        }
                        set length(v) {
                            if (v > this._length)
                                for (let D = this._length; D < v; D++) this._array[D] = void 0;
                            this._length = v
                        }
                        get(v) {
                            return this._array[this._getCyclicIndex(v)]
                        }
                        set(v, D) {
                            this._array[this._getCyclicIndex(v)] = D
                        }
                        push(v) {
                            this._array[this._getCyclicIndex(this._length)] = v, this._length === this._maxLength ? (this._startIndex = ++this._startIndex % this._maxLength, this.onTrimEmitter.fire(1)) : this._length++
                        }
                        recycle() {
                            if (this._length !== this._maxLength) throw new Error("Can only recycle when the buffer is full");
                            return this._startIndex = ++this._startIndex % this._maxLength, this.onTrimEmitter.fire(1), this._array[this._getCyclicIndex(this._length - 1)]
                        }
                        get isFull() {
                            return this._length === this._maxLength
                        }
                        pop() {
                            return this._array[this._getCyclicIndex(this._length-- - 1)]
                        }
                        splice(v, D, ...d) {
                            if (D) {
                                for (let a = v; a < this._length - D; a++) this._array[this._getCyclicIndex(a)] = this._array[this._getCyclicIndex(a + D)];
                                this._length -= D, this.onDeleteEmitter.fire({
                                    index: v,
                                    amount: D
                                })
                            }
                            for (let a = this._length - 1; a >= v; a--) this._array[this._getCyclicIndex(a + d.length)] = this._array[this._getCyclicIndex(a)];
                            for (let a = 0; a < d.length; a++) this._array[this._getCyclicIndex(v + a)] = d[a];
                            if (d.length && this.onInsertEmitter.fire({
                                    index: v,
                                    amount: d.length
                                }), this._length + d.length > this._maxLength) {
                                const a = this._length + d.length - this._maxLength;
                                this._startIndex += a, this._length = this._maxLength, this.onTrimEmitter.fire(a)
                            } else this._length += d.length
                        }
                        trimStart(v) {
                            v > this._length && (v = this._length), this._startIndex += v, this._length -= v, this.onTrimEmitter.fire(v)
                        }
                        shiftElements(v, D, d) {
                            if (!(D <= 0)) {
                                if (v < 0 || v >= this._length) throw new Error("start argument out of range");
                                if (v + d < 0) throw new Error("Cannot shift elements in list beyond index 0");
                                if (d > 0) {
                                    for (let o = D - 1; o >= 0; o--) this.set(v + o + d, this.get(v + o));
                                    const a = v + D + d - this._length;
                                    if (a > 0)
                                        for (this._length += a; this._length > this._maxLength;) this._length--, this._startIndex++, this.onTrimEmitter.fire(1)
                                } else
                                    for (let a = 0; a < D; a++) this.set(v + a + d, this.get(v + a))
                            }
                        }
                        _getCyclicIndex(v) {
                            return (this._startIndex + v) % this._maxLength
                        }
                    }
                    r.CircularList = u
                },
                1439: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.clone = void 0, r.clone = function s(c, g = 5) {
                        if (typeof c != "object") return c;
                        const u = Array.isArray(c) ? [] : {};
                        for (const _ in c) u[_] = g <= 1 ? c[_] : c[_] && s(c[_], g - 1);
                        return u
                    }
                },
                8055: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.contrastRatio = r.toPaddedHex = r.rgba = r.rgb = r.css = r.color = r.channels = r.NULL_COLOR = void 0;
                    let s = 0,
                        c = 0,
                        g = 0,
                        u = 0;
                    var _, v, D, d, a;

                    function o(l) {
                        const b = l.toString(16);
                        return b.length < 2 ? "0" + b : b
                    }

                    function i(l, b) {
                        return l < b ? (b + .05) / (l + .05) : (l + .05) / (b + .05)
                    }
                    r.NULL_COLOR = {
                            css: "#00000000",
                            rgba: 0
                        },
                        function(l) {
                            l.toCss = function(b, A, n, T) {
                                return T !== void 0 ? `#${o(b)}${o(A)}${o(n)}${o(T)}` : `#${o(b)}${o(A)}${o(n)}`
                            }, l.toRgba = function(b, A, n, T = 255) {
                                return (b << 24 | A << 16 | n << 8 | T) >>> 0
                            }, l.toColor = function(b, A, n, T) {
                                return {
                                    css: l.toCss(b, A, n, T),
                                    rgba: l.toRgba(b, A, n, T)
                                }
                            }
                        }(_ || (r.channels = _ = {})),
                        function(l) {
                            function b(A, n) {
                                return u = Math.round(255 * n), [s, c, g] = a.toChannels(A.rgba), {
                                    css: _.toCss(s, c, g, u),
                                    rgba: _.toRgba(s, c, g, u)
                                }
                            }
                            l.blend = function(A, n) {
                                if (u = (255 & n.rgba) / 255, u === 1) return {
                                    css: n.css,
                                    rgba: n.rgba
                                };
                                const T = n.rgba >> 24 & 255,
                                    S = n.rgba >> 16 & 255,
                                    L = n.rgba >> 8 & 255,
                                    z = A.rgba >> 24 & 255,
                                    G = A.rgba >> 16 & 255,
                                    K = A.rgba >> 8 & 255;
                                return s = z + Math.round((T - z) * u), c = G + Math.round((S - G) * u), g = K + Math.round((L - K) * u), {
                                    css: _.toCss(s, c, g),
                                    rgba: _.toRgba(s, c, g)
                                }
                            }, l.isOpaque = function(A) {
                                return (255 & A.rgba) == 255
                            }, l.ensureContrastRatio = function(A, n, T) {
                                const S = a.ensureContrastRatio(A.rgba, n.rgba, T);
                                if (S) return _.toColor(S >> 24 & 255, S >> 16 & 255, S >> 8 & 255)
                            }, l.opaque = function(A) {
                                const n = (255 | A.rgba) >>> 0;
                                return [s, c, g] = a.toChannels(n), {
                                    css: _.toCss(s, c, g),
                                    rgba: n
                                }
                            }, l.opacity = b, l.multiplyOpacity = function(A, n) {
                                return u = 255 & A.rgba, b(A, u * n / 255)
                            }, l.toColorRGB = function(A) {
                                return [A.rgba >> 24 & 255, A.rgba >> 16 & 255, A.rgba >> 8 & 255]
                            }
                        }(v || (r.color = v = {})),
                        function(l) {
                            let b, A;
                            try {
                                const n = document.createElement("canvas");
                                n.width = 1, n.height = 1;
                                const T = n.getContext("2d", {
                                    willReadFrequently: !0
                                });
                                T && (b = T, b.globalCompositeOperation = "copy", A = b.createLinearGradient(0, 0, 1, 1))
                            } catch {}
                            l.toColor = function(n) {
                                if (n.match(/#[\da-f]{3,8}/i)) switch (n.length) {
                                    case 4:
                                        return s = parseInt(n.slice(1, 2).repeat(2), 16), c = parseInt(n.slice(2, 3).repeat(2), 16), g = parseInt(n.slice(3, 4).repeat(2), 16), _.toColor(s, c, g);
                                    case 5:
                                        return s = parseInt(n.slice(1, 2).repeat(2), 16), c = parseInt(n.slice(2, 3).repeat(2), 16), g = parseInt(n.slice(3, 4).repeat(2), 16), u = parseInt(n.slice(4, 5).repeat(2), 16), _.toColor(s, c, g, u);
                                    case 7:
                                        return {
                                            css: n, rgba: (parseInt(n.slice(1), 16) << 8 | 255) >>> 0
                                        };
                                    case 9:
                                        return {
                                            css: n, rgba: parseInt(n.slice(1), 16) >>> 0
                                        }
                                }
                                const T = n.match(/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(,\s*(0|1|\d?\.(\d+))\s*)?\)/);
                                if (T) return s = parseInt(T[1]), c = parseInt(T[2]), g = parseInt(T[3]), u = Math.round(255 * (T[5] === void 0 ? 1 : parseFloat(T[5]))), _.toColor(s, c, g, u);
                                if (!b || !A) throw new Error("css.toColor: Unsupported css format");
                                if (b.fillStyle = A, b.fillStyle = n, typeof b.fillStyle != "string") throw new Error("css.toColor: Unsupported css format");
                                if (b.fillRect(0, 0, 1, 1), [s, c, g, u] = b.getImageData(0, 0, 1, 1).data, u !== 255) throw new Error("css.toColor: Unsupported css format");
                                return {
                                    rgba: _.toRgba(s, c, g, u),
                                    css: n
                                }
                            }
                        }(D || (r.css = D = {})),
                        function(l) {
                            function b(A, n, T) {
                                const S = A / 255,
                                    L = n / 255,
                                    z = T / 255;
                                return .2126 * (S <= .03928 ? S / 12.92 : Math.pow((S + .055) / 1.055, 2.4)) + .7152 * (L <= .03928 ? L / 12.92 : Math.pow((L + .055) / 1.055, 2.4)) + .0722 * (z <= .03928 ? z / 12.92 : Math.pow((z + .055) / 1.055, 2.4))
                            }
                            l.relativeLuminance = function(A) {
                                return b(A >> 16 & 255, A >> 8 & 255, 255 & A)
                            }, l.relativeLuminance2 = b
                        }(d || (r.rgb = d = {})),
                        function(l) {
                            function b(n, T, S) {
                                const L = n >> 24 & 255,
                                    z = n >> 16 & 255,
                                    G = n >> 8 & 255;
                                let K = T >> 24 & 255,
                                    U = T >> 16 & 255,
                                    te = T >> 8 & 255,
                                    fe = i(d.relativeLuminance2(K, U, te), d.relativeLuminance2(L, z, G));
                                for (; fe < S && (K > 0 || U > 0 || te > 0);) K -= Math.max(0, Math.ceil(.1 * K)), U -= Math.max(0, Math.ceil(.1 * U)), te -= Math.max(0, Math.ceil(.1 * te)), fe = i(d.relativeLuminance2(K, U, te), d.relativeLuminance2(L, z, G));
                                return (K << 24 | U << 16 | te << 8 | 255) >>> 0
                            }

                            function A(n, T, S) {
                                const L = n >> 24 & 255,
                                    z = n >> 16 & 255,
                                    G = n >> 8 & 255;
                                let K = T >> 24 & 255,
                                    U = T >> 16 & 255,
                                    te = T >> 8 & 255,
                                    fe = i(d.relativeLuminance2(K, U, te), d.relativeLuminance2(L, z, G));
                                for (; fe < S && (K < 255 || U < 255 || te < 255);) K = Math.min(255, K + Math.ceil(.1 * (255 - K))), U = Math.min(255, U + Math.ceil(.1 * (255 - U))), te = Math.min(255, te + Math.ceil(.1 * (255 - te))), fe = i(d.relativeLuminance2(K, U, te), d.relativeLuminance2(L, z, G));
                                return (K << 24 | U << 16 | te << 8 | 255) >>> 0
                            }
                            l.blend = function(n, T) {
                                if (u = (255 & T) / 255, u === 1) return T;
                                const S = T >> 24 & 255,
                                    L = T >> 16 & 255,
                                    z = T >> 8 & 255,
                                    G = n >> 24 & 255,
                                    K = n >> 16 & 255,
                                    U = n >> 8 & 255;
                                return s = G + Math.round((S - G) * u), c = K + Math.round((L - K) * u), g = U + Math.round((z - U) * u), _.toRgba(s, c, g)
                            }, l.ensureContrastRatio = function(n, T, S) {
                                const L = d.relativeLuminance(n >> 8),
                                    z = d.relativeLuminance(T >> 8);
                                if (i(L, z) < S) {
                                    if (z < L) {
                                        const U = b(n, T, S),
                                            te = i(L, d.relativeLuminance(U >> 8));
                                        if (te < S) {
                                            const fe = A(n, T, S);
                                            return te > i(L, d.relativeLuminance(fe >> 8)) ? U : fe
                                        }
                                        return U
                                    }
                                    const G = A(n, T, S),
                                        K = i(L, d.relativeLuminance(G >> 8));
                                    if (K < S) {
                                        const U = b(n, T, S);
                                        return K > i(L, d.relativeLuminance(U >> 8)) ? G : U
                                    }
                                    return G
                                }
                            }, l.reduceLuminance = b, l.increaseLuminance = A, l.toChannels = function(n) {
                                return [n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n]
                            }
                        }(a || (r.rgba = a = {})), r.toPaddedHex = o, r.contrastRatio = i
                },
                8969: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.CoreTerminal = void 0;
                    const c = s(844),
                        g = s(2585),
                        u = s(4348),
                        _ = s(7866),
                        v = s(744),
                        D = s(7302),
                        d = s(6975),
                        a = s(8460),
                        o = s(1753),
                        i = s(1480),
                        l = s(7994),
                        b = s(9282),
                        A = s(5435),
                        n = s(5981),
                        T = s(2660);
                    let S = !1;
                    class L extends c.Disposable {
                        get onScroll() {
                            return this._onScrollApi || (this._onScrollApi = this.register(new a.EventEmitter), this._onScroll.event(G => {
                                var K;
                                (K = this._onScrollApi) == null || K.fire(G.position)
                            })), this._onScrollApi.event
                        }
                        get cols() {
                            return this._bufferService.cols
                        }
                        get rows() {
                            return this._bufferService.rows
                        }
                        get buffers() {
                            return this._bufferService.buffers
                        }
                        get options() {
                            return this.optionsService.options
                        }
                        set options(G) {
                            for (const K in G) this.optionsService.options[K] = G[K]
                        }
                        constructor(G) {
                            super(), this._windowsWrappingHeuristics = this.register(new c.MutableDisposable), this._onBinary = this.register(new a.EventEmitter), this.onBinary = this._onBinary.event, this._onData = this.register(new a.EventEmitter), this.onData = this._onData.event, this._onLineFeed = this.register(new a.EventEmitter), this.onLineFeed = this._onLineFeed.event, this._onResize = this.register(new a.EventEmitter), this.onResize = this._onResize.event, this._onWriteParsed = this.register(new a.EventEmitter), this.onWriteParsed = this._onWriteParsed.event, this._onScroll = this.register(new a.EventEmitter), this._instantiationService = new u.InstantiationService, this.optionsService = this.register(new D.OptionsService(G)), this._instantiationService.setService(g.IOptionsService, this.optionsService), this._bufferService = this.register(this._instantiationService.createInstance(v.BufferService)), this._instantiationService.setService(g.IBufferService, this._bufferService), this._logService = this.register(this._instantiationService.createInstance(_.LogService)), this._instantiationService.setService(g.ILogService, this._logService), this.coreService = this.register(this._instantiationService.createInstance(d.CoreService)), this._instantiationService.setService(g.ICoreService, this.coreService), this.coreMouseService = this.register(this._instantiationService.createInstance(o.CoreMouseService)), this._instantiationService.setService(g.ICoreMouseService, this.coreMouseService), this.unicodeService = this.register(this._instantiationService.createInstance(i.UnicodeService)), this._instantiationService.setService(g.IUnicodeService, this.unicodeService), this._charsetService = this._instantiationService.createInstance(l.CharsetService), this._instantiationService.setService(g.ICharsetService, this._charsetService), this._oscLinkService = this._instantiationService.createInstance(T.OscLinkService), this._instantiationService.setService(g.IOscLinkService, this._oscLinkService), this._inputHandler = this.register(new A.InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService)), this.register((0, a.forwardEvent)(this._inputHandler.onLineFeed, this._onLineFeed)), this.register(this._inputHandler), this.register((0, a.forwardEvent)(this._bufferService.onResize, this._onResize)), this.register((0, a.forwardEvent)(this.coreService.onData, this._onData)), this.register((0, a.forwardEvent)(this.coreService.onBinary, this._onBinary)), this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom())), this.register(this.coreService.onUserInput(() => this._writeBuffer.handleUserInput())), this.register(this.optionsService.onMultipleOptionChange(["windowsMode", "windowsPty"], () => this._handleWindowsPtyOptionChange())), this.register(this._bufferService.onScroll(K => {
                                this._onScroll.fire({
                                    position: this._bufferService.buffer.ydisp,
                                    source: 0
                                }), this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom)
                            })), this.register(this._inputHandler.onScroll(K => {
                                this._onScroll.fire({
                                    position: this._bufferService.buffer.ydisp,
                                    source: 0
                                }), this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom)
                            })), this._writeBuffer = this.register(new n.WriteBuffer((K, U) => this._inputHandler.parse(K, U))), this.register((0, a.forwardEvent)(this._writeBuffer.onWriteParsed, this._onWriteParsed))
                        }
                        write(G, K) {
                            this._writeBuffer.write(G, K)
                        }
                        writeSync(G, K) {
                            this._logService.logLevel <= g.LogLevelEnum.WARN && !S && (this._logService.warn("writeSync is unreliable and will be removed soon."), S = !0), this._writeBuffer.writeSync(G, K)
                        }
                        input(G, K = !0) {
                            this.coreService.triggerDataEvent(G, K)
                        }
                        resize(G, K) {
                            isNaN(G) || isNaN(K) || (G = Math.max(G, v.MINIMUM_COLS), K = Math.max(K, v.MINIMUM_ROWS), this._bufferService.resize(G, K))
                        }
                        scroll(G, K = !1) {
                            this._bufferService.scroll(G, K)
                        }
                        scrollLines(G, K, U) {
                            this._bufferService.scrollLines(G, K, U)
                        }
                        scrollPages(G) {
                            this.scrollLines(G * (this.rows - 1))
                        }
                        scrollToTop() {
                            this.scrollLines(-this._bufferService.buffer.ydisp)
                        }
                        scrollToBottom() {
                            this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp)
                        }
                        scrollToLine(G) {
                            const K = G - this._bufferService.buffer.ydisp;
                            K !== 0 && this.scrollLines(K)
                        }
                        registerEscHandler(G, K) {
                            return this._inputHandler.registerEscHandler(G, K)
                        }
                        registerDcsHandler(G, K) {
                            return this._inputHandler.registerDcsHandler(G, K)
                        }
                        registerCsiHandler(G, K) {
                            return this._inputHandler.registerCsiHandler(G, K)
                        }
                        registerOscHandler(G, K) {
                            return this._inputHandler.registerOscHandler(G, K)
                        }
                        _setup() {
                            this._handleWindowsPtyOptionChange()
                        }
                        reset() {
                            this._inputHandler.reset(), this._bufferService.reset(), this._charsetService.reset(), this.coreService.reset(), this.coreMouseService.reset()
                        }
                        _handleWindowsPtyOptionChange() {
                            let G = !1;
                            const K = this.optionsService.rawOptions.windowsPty;
                            K && K.buildNumber !== void 0 && K.buildNumber !== void 0 ? G = K.backend === "conpty" && K.buildNumber < 21376 : this.optionsService.rawOptions.windowsMode && (G = !0), G ? this._enableWindowsWrappingHeuristics() : this._windowsWrappingHeuristics.clear()
                        }
                        _enableWindowsWrappingHeuristics() {
                            if (!this._windowsWrappingHeuristics.value) {
                                const G = [];
                                G.push(this.onLineFeed(b.updateWindowsModeWrappedState.bind(null, this._bufferService))), G.push(this.registerCsiHandler({
                                    final: "H"
                                }, () => ((0, b.updateWindowsModeWrappedState)(this._bufferService), !1))), this._windowsWrappingHeuristics.value = (0, c.toDisposable)(() => {
                                    for (const K of G) K.dispose()
                                })
                            }
                        }
                    }
                    r.CoreTerminal = L
                },
                8460: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.runAndSubscribe = r.forwardEvent = r.EventEmitter = void 0, r.EventEmitter = class {
                        constructor() {
                            this._listeners = [], this._disposed = !1
                        }
                        get event() {
                            return this._event || (this._event = s => (this._listeners.push(s), {
                                dispose: () => {
                                    if (!this._disposed) {
                                        for (let c = 0; c < this._listeners.length; c++)
                                            if (this._listeners[c] === s) return void this._listeners.splice(c, 1)
                                    }
                                }
                            })), this._event
                        }
                        fire(s, c) {
                            const g = [];
                            for (let u = 0; u < this._listeners.length; u++) g.push(this._listeners[u]);
                            for (let u = 0; u < g.length; u++) g[u].call(void 0, s, c)
                        }
                        dispose() {
                            this.clearListeners(), this._disposed = !0
                        }
                        clearListeners() {
                            this._listeners && (this._listeners.length = 0)
                        }
                    }, r.forwardEvent = function(s, c) {
                        return s(g => c.fire(g))
                    }, r.runAndSubscribe = function(s, c) {
                        return c(void 0), s(g => c(g))
                    }
                },
                5435: function(C, r, s) {
                    var c = this && this.__decorate || function(ge, O, Z, q) {
                            var re, we = arguments.length,
                                Ee = we < 3 ? O : q === null ? q = Object.getOwnPropertyDescriptor(O, Z) : q;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") Ee = Reflect.decorate(ge, O, Z, q);
                            else
                                for (var je = ge.length - 1; je >= 0; je--)(re = ge[je]) && (Ee = (we < 3 ? re(Ee) : we > 3 ? re(O, Z, Ee) : re(O, Z)) || Ee);
                            return we > 3 && Ee && Object.defineProperty(O, Z, Ee), Ee
                        },
                        g = this && this.__param || function(ge, O) {
                            return function(Z, q) {
                                O(Z, q, ge)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.InputHandler = r.WindowsOptionsReportType = void 0;
                    const u = s(2584),
                        _ = s(7116),
                        v = s(2015),
                        D = s(844),
                        d = s(482),
                        a = s(8437),
                        o = s(8460),
                        i = s(643),
                        l = s(511),
                        b = s(3734),
                        A = s(2585),
                        n = s(1480),
                        T = s(6242),
                        S = s(6351),
                        L = s(5941),
                        z = {
                            "(": 0,
                            ")": 1,
                            "*": 2,
                            "+": 3,
                            "-": 1,
                            ".": 2
                        },
                        G = 131072;

                    function K(ge, O) {
                        if (ge > 24) return O.setWinLines || !1;
                        switch (ge) {
                            case 1:
                                return !!O.restoreWin;
                            case 2:
                                return !!O.minimizeWin;
                            case 3:
                                return !!O.setWinPosition;
                            case 4:
                                return !!O.setWinSizePixels;
                            case 5:
                                return !!O.raiseWin;
                            case 6:
                                return !!O.lowerWin;
                            case 7:
                                return !!O.refreshWin;
                            case 8:
                                return !!O.setWinSizeChars;
                            case 9:
                                return !!O.maximizeWin;
                            case 10:
                                return !!O.fullscreenWin;
                            case 11:
                                return !!O.getWinState;
                            case 13:
                                return !!O.getWinPosition;
                            case 14:
                                return !!O.getWinSizePixels;
                            case 15:
                                return !!O.getScreenSizePixels;
                            case 16:
                                return !!O.getCellSizePixels;
                            case 18:
                                return !!O.getWinSizeChars;
                            case 19:
                                return !!O.getScreenSizeChars;
                            case 20:
                                return !!O.getIconTitle;
                            case 21:
                                return !!O.getWinTitle;
                            case 22:
                                return !!O.pushTitle;
                            case 23:
                                return !!O.popTitle;
                            case 24:
                                return !!O.setWinLines
                        }
                        return !1
                    }
                    var U;
                    (function(ge) {
                        ge[ge.GET_WIN_SIZE_PIXELS = 0] = "GET_WIN_SIZE_PIXELS", ge[ge.GET_CELL_SIZE_PIXELS = 1] = "GET_CELL_SIZE_PIXELS"
                    })(U || (r.WindowsOptionsReportType = U = {}));
                    let te = 0;
                    class fe extends D.Disposable {
                        getAttrData() {
                            return this._curAttrData
                        }
                        constructor(O, Z, q, re, we, Ee, je, ze, oe = new v.EscapeSequenceParser) {
                            super(), this._bufferService = O, this._charsetService = Z, this._coreService = q, this._logService = re, this._optionsService = we, this._oscLinkService = Ee, this._coreMouseService = je, this._unicodeService = ze, this._parser = oe, this._parseBuffer = new Uint32Array(4096), this._stringDecoder = new d.StringToUtf32, this._utf8Decoder = new d.Utf8ToUtf32, this._workCell = new l.CellData, this._windowTitle = "", this._iconName = "", this._windowTitleStack = [], this._iconNameStack = [], this._curAttrData = a.DEFAULT_ATTR_DATA.clone(), this._eraseAttrDataInternal = a.DEFAULT_ATTR_DATA.clone(), this._onRequestBell = this.register(new o.EventEmitter), this.onRequestBell = this._onRequestBell.event, this._onRequestRefreshRows = this.register(new o.EventEmitter), this.onRequestRefreshRows = this._onRequestRefreshRows.event, this._onRequestReset = this.register(new o.EventEmitter), this.onRequestReset = this._onRequestReset.event, this._onRequestSendFocus = this.register(new o.EventEmitter), this.onRequestSendFocus = this._onRequestSendFocus.event, this._onRequestSyncScrollBar = this.register(new o.EventEmitter), this.onRequestSyncScrollBar = this._onRequestSyncScrollBar.event, this._onRequestWindowsOptionsReport = this.register(new o.EventEmitter), this.onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event, this._onA11yChar = this.register(new o.EventEmitter), this.onA11yChar = this._onA11yChar.event, this._onA11yTab = this.register(new o.EventEmitter), this.onA11yTab = this._onA11yTab.event, this._onCursorMove = this.register(new o.EventEmitter), this.onCursorMove = this._onCursorMove.event, this._onLineFeed = this.register(new o.EventEmitter), this.onLineFeed = this._onLineFeed.event, this._onScroll = this.register(new o.EventEmitter), this.onScroll = this._onScroll.event, this._onTitleChange = this.register(new o.EventEmitter), this.onTitleChange = this._onTitleChange.event, this._onColor = this.register(new o.EventEmitter), this.onColor = this._onColor.event, this._parseStack = {
                                paused: !1,
                                cursorStartX: 0,
                                cursorStartY: 0,
                                decodedLength: 0,
                                position: 0
                            }, this._specialColors = [256, 257, 258], this.register(this._parser), this._dirtyRowTracker = new ye(this._bufferService), this._activeBuffer = this._bufferService.buffer, this.register(this._bufferService.buffers.onBufferActivate(W => this._activeBuffer = W.activeBuffer)), this._parser.setCsiHandlerFallback((W, Ce) => {
                                this._logService.debug("Unknown CSI code: ", {
                                    identifier: this._parser.identToString(W),
                                    params: Ce.toArray()
                                })
                            }), this._parser.setEscHandlerFallback(W => {
                                this._logService.debug("Unknown ESC code: ", {
                                    identifier: this._parser.identToString(W)
                                })
                            }), this._parser.setExecuteHandlerFallback(W => {
                                this._logService.debug("Unknown EXECUTE code: ", {
                                    code: W
                                })
                            }), this._parser.setOscHandlerFallback((W, Ce, pe) => {
                                this._logService.debug("Unknown OSC code: ", {
                                    identifier: W,
                                    action: Ce,
                                    data: pe
                                })
                            }), this._parser.setDcsHandlerFallback((W, Ce, pe) => {
                                Ce === "HOOK" && (pe = pe.toArray()), this._logService.debug("Unknown DCS code: ", {
                                    identifier: this._parser.identToString(W),
                                    action: Ce,
                                    payload: pe
                                })
                            }), this._parser.setPrintHandler((W, Ce, pe) => this.print(W, Ce, pe)), this._parser.registerCsiHandler({
                                final: "@"
                            }, W => this.insertChars(W)), this._parser.registerCsiHandler({
                                intermediates: " ",
                                final: "@"
                            }, W => this.scrollLeft(W)), this._parser.registerCsiHandler({
                                final: "A"
                            }, W => this.cursorUp(W)), this._parser.registerCsiHandler({
                                intermediates: " ",
                                final: "A"
                            }, W => this.scrollRight(W)), this._parser.registerCsiHandler({
                                final: "B"
                            }, W => this.cursorDown(W)), this._parser.registerCsiHandler({
                                final: "C"
                            }, W => this.cursorForward(W)), this._parser.registerCsiHandler({
                                final: "D"
                            }, W => this.cursorBackward(W)), this._parser.registerCsiHandler({
                                final: "E"
                            }, W => this.cursorNextLine(W)), this._parser.registerCsiHandler({
                                final: "F"
                            }, W => this.cursorPrecedingLine(W)), this._parser.registerCsiHandler({
                                final: "G"
                            }, W => this.cursorCharAbsolute(W)), this._parser.registerCsiHandler({
                                final: "H"
                            }, W => this.cursorPosition(W)), this._parser.registerCsiHandler({
                                final: "I"
                            }, W => this.cursorForwardTab(W)), this._parser.registerCsiHandler({
                                final: "J"
                            }, W => this.eraseInDisplay(W, !1)), this._parser.registerCsiHandler({
                                prefix: "?",
                                final: "J"
                            }, W => this.eraseInDisplay(W, !0)), this._parser.registerCsiHandler({
                                final: "K"
                            }, W => this.eraseInLine(W, !1)), this._parser.registerCsiHandler({
                                prefix: "?",
                                final: "K"
                            }, W => this.eraseInLine(W, !0)), this._parser.registerCsiHandler({
                                final: "L"
                            }, W => this.insertLines(W)), this._parser.registerCsiHandler({
                                final: "M"
                            }, W => this.deleteLines(W)), this._parser.registerCsiHandler({
                                final: "P"
                            }, W => this.deleteChars(W)), this._parser.registerCsiHandler({
                                final: "S"
                            }, W => this.scrollUp(W)), this._parser.registerCsiHandler({
                                final: "T"
                            }, W => this.scrollDown(W)), this._parser.registerCsiHandler({
                                final: "X"
                            }, W => this.eraseChars(W)), this._parser.registerCsiHandler({
                                final: "Z"
                            }, W => this.cursorBackwardTab(W)), this._parser.registerCsiHandler({
                                final: "`"
                            }, W => this.charPosAbsolute(W)), this._parser.registerCsiHandler({
                                final: "a"
                            }, W => this.hPositionRelative(W)), this._parser.registerCsiHandler({
                                final: "b"
                            }, W => this.repeatPrecedingCharacter(W)), this._parser.registerCsiHandler({
                                final: "c"
                            }, W => this.sendDeviceAttributesPrimary(W)), this._parser.registerCsiHandler({
                                prefix: ">",
                                final: "c"
                            }, W => this.sendDeviceAttributesSecondary(W)), this._parser.registerCsiHandler({
                                final: "d"
                            }, W => this.linePosAbsolute(W)), this._parser.registerCsiHandler({
                                final: "e"
                            }, W => this.vPositionRelative(W)), this._parser.registerCsiHandler({
                                final: "f"
                            }, W => this.hVPosition(W)), this._parser.registerCsiHandler({
                                final: "g"
                            }, W => this.tabClear(W)), this._parser.registerCsiHandler({
                                final: "h"
                            }, W => this.setMode(W)), this._parser.registerCsiHandler({
                                prefix: "?",
                                final: "h"
                            }, W => this.setModePrivate(W)), this._parser.registerCsiHandler({
                                final: "l"
                            }, W => this.resetMode(W)), this._parser.registerCsiHandler({
                                prefix: "?",
                                final: "l"
                            }, W => this.resetModePrivate(W)), this._parser.registerCsiHandler({
                                final: "m"
                            }, W => this.charAttributes(W)), this._parser.registerCsiHandler({
                                final: "n"
                            }, W => this.deviceStatus(W)), this._parser.registerCsiHandler({
                                prefix: "?",
                                final: "n"
                            }, W => this.deviceStatusPrivate(W)), this._parser.registerCsiHandler({
                                intermediates: "!",
                                final: "p"
                            }, W => this.softReset(W)), this._parser.registerCsiHandler({
                                intermediates: " ",
                                final: "q"
                            }, W => this.setCursorStyle(W)), this._parser.registerCsiHandler({
                                final: "r"
                            }, W => this.setScrollRegion(W)), this._parser.registerCsiHandler({
                                final: "s"
                            }, W => this.saveCursor(W)), this._parser.registerCsiHandler({
                                final: "t"
                            }, W => this.windowOptions(W)), this._parser.registerCsiHandler({
                                final: "u"
                            }, W => this.restoreCursor(W)), this._parser.registerCsiHandler({
                                intermediates: "'",
                                final: "}"
                            }, W => this.insertColumns(W)), this._parser.registerCsiHandler({
                                intermediates: "'",
                                final: "~"
                            }, W => this.deleteColumns(W)), this._parser.registerCsiHandler({
                                intermediates: '"',
                                final: "q"
                            }, W => this.selectProtected(W)), this._parser.registerCsiHandler({
                                intermediates: "$",
                                final: "p"
                            }, W => this.requestMode(W, !0)), this._parser.registerCsiHandler({
                                prefix: "?",
                                intermediates: "$",
                                final: "p"
                            }, W => this.requestMode(W, !1)), this._parser.setExecuteHandler(u.C0.BEL, () => this.bell()), this._parser.setExecuteHandler(u.C0.LF, () => this.lineFeed()), this._parser.setExecuteHandler(u.C0.VT, () => this.lineFeed()), this._parser.setExecuteHandler(u.C0.FF, () => this.lineFeed()), this._parser.setExecuteHandler(u.C0.CR, () => this.carriageReturn()), this._parser.setExecuteHandler(u.C0.BS, () => this.backspace()), this._parser.setExecuteHandler(u.C0.HT, () => this.tab()), this._parser.setExecuteHandler(u.C0.SO, () => this.shiftOut()), this._parser.setExecuteHandler(u.C0.SI, () => this.shiftIn()), this._parser.setExecuteHandler(u.C1.IND, () => this.index()), this._parser.setExecuteHandler(u.C1.NEL, () => this.nextLine()), this._parser.setExecuteHandler(u.C1.HTS, () => this.tabSet()), this._parser.registerOscHandler(0, new T.OscHandler(W => (this.setTitle(W), this.setIconName(W), !0))), this._parser.registerOscHandler(1, new T.OscHandler(W => this.setIconName(W))), this._parser.registerOscHandler(2, new T.OscHandler(W => this.setTitle(W))), this._parser.registerOscHandler(4, new T.OscHandler(W => this.setOrReportIndexedColor(W))), this._parser.registerOscHandler(8, new T.OscHandler(W => this.setHyperlink(W))), this._parser.registerOscHandler(10, new T.OscHandler(W => this.setOrReportFgColor(W))), this._parser.registerOscHandler(11, new T.OscHandler(W => this.setOrReportBgColor(W))), this._parser.registerOscHandler(12, new T.OscHandler(W => this.setOrReportCursorColor(W))), this._parser.registerOscHandler(104, new T.OscHandler(W => this.restoreIndexedColor(W))), this._parser.registerOscHandler(110, new T.OscHandler(W => this.restoreFgColor(W))), this._parser.registerOscHandler(111, new T.OscHandler(W => this.restoreBgColor(W))), this._parser.registerOscHandler(112, new T.OscHandler(W => this.restoreCursorColor(W))), this._parser.registerEscHandler({
                                final: "7"
                            }, () => this.saveCursor()), this._parser.registerEscHandler({
                                final: "8"
                            }, () => this.restoreCursor()), this._parser.registerEscHandler({
                                final: "D"
                            }, () => this.index()), this._parser.registerEscHandler({
                                final: "E"
                            }, () => this.nextLine()), this._parser.registerEscHandler({
                                final: "H"
                            }, () => this.tabSet()), this._parser.registerEscHandler({
                                final: "M"
                            }, () => this.reverseIndex()), this._parser.registerEscHandler({
                                final: "="
                            }, () => this.keypadApplicationMode()), this._parser.registerEscHandler({
                                final: ">"
                            }, () => this.keypadNumericMode()), this._parser.registerEscHandler({
                                final: "c"
                            }, () => this.fullReset()), this._parser.registerEscHandler({
                                final: "n"
                            }, () => this.setgLevel(2)), this._parser.registerEscHandler({
                                final: "o"
                            }, () => this.setgLevel(3)), this._parser.registerEscHandler({
                                final: "|"
                            }, () => this.setgLevel(3)), this._parser.registerEscHandler({
                                final: "}"
                            }, () => this.setgLevel(2)), this._parser.registerEscHandler({
                                final: "~"
                            }, () => this.setgLevel(1)), this._parser.registerEscHandler({
                                intermediates: "%",
                                final: "@"
                            }, () => this.selectDefaultCharset()), this._parser.registerEscHandler({
                                intermediates: "%",
                                final: "G"
                            }, () => this.selectDefaultCharset());
                            for (const W in _.CHARSETS) this._parser.registerEscHandler({
                                intermediates: "(",
                                final: W
                            }, () => this.selectCharset("(" + W)), this._parser.registerEscHandler({
                                intermediates: ")",
                                final: W
                            }, () => this.selectCharset(")" + W)), this._parser.registerEscHandler({
                                intermediates: "*",
                                final: W
                            }, () => this.selectCharset("*" + W)), this._parser.registerEscHandler({
                                intermediates: "+",
                                final: W
                            }, () => this.selectCharset("+" + W)), this._parser.registerEscHandler({
                                intermediates: "-",
                                final: W
                            }, () => this.selectCharset("-" + W)), this._parser.registerEscHandler({
                                intermediates: ".",
                                final: W
                            }, () => this.selectCharset("." + W)), this._parser.registerEscHandler({
                                intermediates: "/",
                                final: W
                            }, () => this.selectCharset("/" + W));
                            this._parser.registerEscHandler({
                                intermediates: "#",
                                final: "8"
                            }, () => this.screenAlignmentPattern()), this._parser.setErrorHandler(W => (this._logService.error("Parsing error: ", W), W)), this._parser.registerDcsHandler({
                                intermediates: "$",
                                final: "q"
                            }, new S.DcsHandler((W, Ce) => this.requestStatusString(W, Ce)))
                        }
                        _preserveStack(O, Z, q, re) {
                            this._parseStack.paused = !0, this._parseStack.cursorStartX = O, this._parseStack.cursorStartY = Z, this._parseStack.decodedLength = q, this._parseStack.position = re
                        }
                        _logSlowResolvingAsync(O) {
                            this._logService.logLevel <= A.LogLevelEnum.WARN && Promise.race([O, new Promise((Z, q) => setTimeout(() => q("#SLOW_TIMEOUT"), 5e3))]).catch(Z => {
                                if (Z !== "#SLOW_TIMEOUT") throw Z;
                                console.warn("async parser handler taking longer than 5000 ms")
                            })
                        }
                        _getCurrentLinkId() {
                            return this._curAttrData.extended.urlId
                        }
                        parse(O, Z) {
                            let q, re = this._activeBuffer.x,
                                we = this._activeBuffer.y,
                                Ee = 0;
                            const je = this._parseStack.paused;
                            if (je) {
                                if (q = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, Z)) return this._logSlowResolvingAsync(q), q;
                                re = this._parseStack.cursorStartX, we = this._parseStack.cursorStartY, this._parseStack.paused = !1, O.length > G && (Ee = this._parseStack.position + G)
                            }
                            if (this._logService.logLevel <= A.LogLevelEnum.DEBUG && this._logService.debug("parsing data" + (typeof O == "string" ? ` "${O}"` : ` "${Array.prototype.map.call(O,W=>String.fromCharCode(W)).join("")}"`), typeof O == "string" ? O.split("").map(W => W.charCodeAt(0)) : O), this._parseBuffer.length < O.length && this._parseBuffer.length < G && (this._parseBuffer = new Uint32Array(Math.min(O.length, G))), je || this._dirtyRowTracker.clearRange(), O.length > G)
                                for (let W = Ee; W < O.length; W += G) {
                                    const Ce = W + G < O.length ? W + G : O.length,
                                        pe = typeof O == "string" ? this._stringDecoder.decode(O.substring(W, Ce), this._parseBuffer) : this._utf8Decoder.decode(O.subarray(W, Ce), this._parseBuffer);
                                    if (q = this._parser.parse(this._parseBuffer, pe)) return this._preserveStack(re, we, pe, W), this._logSlowResolvingAsync(q), q
                                } else if (!je) {
                                    const W = typeof O == "string" ? this._stringDecoder.decode(O, this._parseBuffer) : this._utf8Decoder.decode(O, this._parseBuffer);
                                    if (q = this._parser.parse(this._parseBuffer, W)) return this._preserveStack(re, we, W, 0), this._logSlowResolvingAsync(q), q
                                } this._activeBuffer.x === re && this._activeBuffer.y === we || this._onCursorMove.fire();
                            const ze = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp),
                                oe = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);
                            oe < this._bufferService.rows && this._onRequestRefreshRows.fire(Math.min(oe, this._bufferService.rows - 1), Math.min(ze, this._bufferService.rows - 1))
                        }
                        print(O, Z, q) {
                            let re, we;
                            const Ee = this._charsetService.charset,
                                je = this._optionsService.rawOptions.screenReaderMode,
                                ze = this._bufferService.cols,
                                oe = this._coreService.decPrivateModes.wraparound,
                                W = this._coreService.modes.insertMode,
                                Ce = this._curAttrData;
                            let pe = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                            this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._activeBuffer.x && q - Z > 0 && pe.getWidth(this._activeBuffer.x - 1) === 2 && pe.setCellFromCodepoint(this._activeBuffer.x - 1, 0, 1, Ce);
                            let Ne = this._parser.precedingJoinState;
                            for (let Pe = Z; Pe < q; ++Pe) {
                                if (re = O[Pe], re < 127 && Ee) {
                                    const $e = Ee[String.fromCharCode(re)];
                                    $e && (re = $e.charCodeAt(0))
                                }
                                const Xe = this._unicodeService.charProperties(re, Ne);
                                we = n.UnicodeService.extractWidth(Xe);
                                const ut = n.UnicodeService.extractShouldJoin(Xe),
                                    ct = ut ? n.UnicodeService.extractWidth(Ne) : 0;
                                if (Ne = Xe, je && this._onA11yChar.fire((0, d.stringFromCodePoint)(re)), this._getCurrentLinkId() && this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y), this._activeBuffer.x + we - ct > ze) {
                                    if (oe) {
                                        const $e = pe;
                                        let Ve = this._activeBuffer.x - ct;
                                        for (this._activeBuffer.x = ct, this._activeBuffer.y++, this._activeBuffer.y === this._activeBuffer.scrollBottom + 1 ? (this._activeBuffer.y--, this._bufferService.scroll(this._eraseAttrData(), !0)) : (this._activeBuffer.y >= this._bufferService.rows && (this._activeBuffer.y = this._bufferService.rows - 1), this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).isWrapped = !0), pe = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y), ct > 0 && pe instanceof a.BufferLine && pe.copyCellsFrom($e, Ve, 0, ct, !1); Ve < ze;) $e.setCellFromCodepoint(Ve++, 0, 1, Ce)
                                    } else if (this._activeBuffer.x = ze - 1, we === 2) continue
                                }
                                if (ut && this._activeBuffer.x) {
                                    const $e = pe.getWidth(this._activeBuffer.x - 1) ? 1 : 2;
                                    pe.addCodepointToCell(this._activeBuffer.x - $e, re, we);
                                    for (let Ve = we - ct; --Ve >= 0;) pe.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, Ce)
                                } else if (W && (pe.insertCells(this._activeBuffer.x, we - ct, this._activeBuffer.getNullCell(Ce)), pe.getWidth(ze - 1) === 2 && pe.setCellFromCodepoint(ze - 1, i.NULL_CELL_CODE, i.NULL_CELL_WIDTH, Ce)), pe.setCellFromCodepoint(this._activeBuffer.x++, re, we, Ce), we > 0)
                                    for (; --we;) pe.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, Ce)
                            }
                            this._parser.precedingJoinState = Ne, this._activeBuffer.x < ze && q - Z > 0 && pe.getWidth(this._activeBuffer.x) === 0 && !pe.hasContent(this._activeBuffer.x) && pe.setCellFromCodepoint(this._activeBuffer.x, 0, 1, Ce), this._dirtyRowTracker.markDirty(this._activeBuffer.y)
                        }
                        registerCsiHandler(O, Z) {
                            return O.final !== "t" || O.prefix || O.intermediates ? this._parser.registerCsiHandler(O, Z) : this._parser.registerCsiHandler(O, q => !K(q.params[0], this._optionsService.rawOptions.windowOptions) || Z(q))
                        }
                        registerDcsHandler(O, Z) {
                            return this._parser.registerDcsHandler(O, new S.DcsHandler(Z))
                        }
                        registerEscHandler(O, Z) {
                            return this._parser.registerEscHandler(O, Z)
                        }
                        registerOscHandler(O, Z) {
                            return this._parser.registerOscHandler(O, new T.OscHandler(Z))
                        }
                        bell() {
                            return this._onRequestBell.fire(), !0
                        }
                        lineFeed() {
                            return this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._optionsService.rawOptions.convertEol && (this._activeBuffer.x = 0), this._activeBuffer.y++, this._activeBuffer.y === this._activeBuffer.scrollBottom + 1 ? (this._activeBuffer.y--, this._bufferService.scroll(this._eraseAttrData())) : this._activeBuffer.y >= this._bufferService.rows ? this._activeBuffer.y = this._bufferService.rows - 1 : this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).isWrapped = !1, this._activeBuffer.x >= this._bufferService.cols && this._activeBuffer.x--, this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._onLineFeed.fire(), !0
                        }
                        carriageReturn() {
                            return this._activeBuffer.x = 0, !0
                        }
                        backspace() {
                            var O;
                            if (!this._coreService.decPrivateModes.reverseWraparound) return this._restrictCursor(), this._activeBuffer.x > 0 && this._activeBuffer.x--, !0;
                            if (this._restrictCursor(this._bufferService.cols), this._activeBuffer.x > 0) this._activeBuffer.x--;
                            else if (this._activeBuffer.x === 0 && this._activeBuffer.y > this._activeBuffer.scrollTop && this._activeBuffer.y <= this._activeBuffer.scrollBottom && ((O = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)) != null && O.isWrapped)) {
                                this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).isWrapped = !1, this._activeBuffer.y--, this._activeBuffer.x = this._bufferService.cols - 1;
                                const Z = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                                Z.hasWidth(this._activeBuffer.x) && !Z.hasContent(this._activeBuffer.x) && this._activeBuffer.x--
                            }
                            return this._restrictCursor(), !0
                        }
                        tab() {
                            if (this._activeBuffer.x >= this._bufferService.cols) return !0;
                            const O = this._activeBuffer.x;
                            return this._activeBuffer.x = this._activeBuffer.nextStop(), this._optionsService.rawOptions.screenReaderMode && this._onA11yTab.fire(this._activeBuffer.x - O), !0
                        }
                        shiftOut() {
                            return this._charsetService.setgLevel(1), !0
                        }
                        shiftIn() {
                            return this._charsetService.setgLevel(0), !0
                        }
                        _restrictCursor(O = this._bufferService.cols - 1) {
                            this._activeBuffer.x = Math.min(O, Math.max(0, this._activeBuffer.x)), this._activeBuffer.y = this._coreService.decPrivateModes.origin ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y)) : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y)), this._dirtyRowTracker.markDirty(this._activeBuffer.y)
                        }
                        _setCursor(O, Z) {
                            this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._coreService.decPrivateModes.origin ? (this._activeBuffer.x = O, this._activeBuffer.y = this._activeBuffer.scrollTop + Z) : (this._activeBuffer.x = O, this._activeBuffer.y = Z), this._restrictCursor(), this._dirtyRowTracker.markDirty(this._activeBuffer.y)
                        }
                        _moveCursor(O, Z) {
                            this._restrictCursor(), this._setCursor(this._activeBuffer.x + O, this._activeBuffer.y + Z)
                        }
                        cursorUp(O) {
                            const Z = this._activeBuffer.y - this._activeBuffer.scrollTop;
                            return Z >= 0 ? this._moveCursor(0, -Math.min(Z, O.params[0] || 1)) : this._moveCursor(0, -(O.params[0] || 1)), !0
                        }
                        cursorDown(O) {
                            const Z = this._activeBuffer.scrollBottom - this._activeBuffer.y;
                            return Z >= 0 ? this._moveCursor(0, Math.min(Z, O.params[0] || 1)) : this._moveCursor(0, O.params[0] || 1), !0
                        }
                        cursorForward(O) {
                            return this._moveCursor(O.params[0] || 1, 0), !0
                        }
                        cursorBackward(O) {
                            return this._moveCursor(-(O.params[0] || 1), 0), !0
                        }
                        cursorNextLine(O) {
                            return this.cursorDown(O), this._activeBuffer.x = 0, !0
                        }
                        cursorPrecedingLine(O) {
                            return this.cursorUp(O), this._activeBuffer.x = 0, !0
                        }
                        cursorCharAbsolute(O) {
                            return this._setCursor((O.params[0] || 1) - 1, this._activeBuffer.y), !0
                        }
                        cursorPosition(O) {
                            return this._setCursor(O.length >= 2 ? (O.params[1] || 1) - 1 : 0, (O.params[0] || 1) - 1), !0
                        }
                        charPosAbsolute(O) {
                            return this._setCursor((O.params[0] || 1) - 1, this._activeBuffer.y), !0
                        }
                        hPositionRelative(O) {
                            return this._moveCursor(O.params[0] || 1, 0), !0
                        }
                        linePosAbsolute(O) {
                            return this._setCursor(this._activeBuffer.x, (O.params[0] || 1) - 1), !0
                        }
                        vPositionRelative(O) {
                            return this._moveCursor(0, O.params[0] || 1), !0
                        }
                        hVPosition(O) {
                            return this.cursorPosition(O), !0
                        }
                        tabClear(O) {
                            const Z = O.params[0];
                            return Z === 0 ? delete this._activeBuffer.tabs[this._activeBuffer.x] : Z === 3 && (this._activeBuffer.tabs = {}), !0
                        }
                        cursorForwardTab(O) {
                            if (this._activeBuffer.x >= this._bufferService.cols) return !0;
                            let Z = O.params[0] || 1;
                            for (; Z--;) this._activeBuffer.x = this._activeBuffer.nextStop();
                            return !0
                        }
                        cursorBackwardTab(O) {
                            if (this._activeBuffer.x >= this._bufferService.cols) return !0;
                            let Z = O.params[0] || 1;
                            for (; Z--;) this._activeBuffer.x = this._activeBuffer.prevStop();
                            return !0
                        }
                        selectProtected(O) {
                            const Z = O.params[0];
                            return Z === 1 && (this._curAttrData.bg |= 536870912), Z !== 2 && Z !== 0 || (this._curAttrData.bg &= -536870913), !0
                        }
                        _eraseInBufferLine(O, Z, q, re = !1, we = !1) {
                            const Ee = this._activeBuffer.lines.get(this._activeBuffer.ybase + O);
                            Ee.replaceCells(Z, q, this._activeBuffer.getNullCell(this._eraseAttrData()), we), re && (Ee.isWrapped = !1)
                        }
                        _resetBufferLine(O, Z = !1) {
                            const q = this._activeBuffer.lines.get(this._activeBuffer.ybase + O);
                            q && (q.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), Z), this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + O), q.isWrapped = !1)
                        }
                        eraseInDisplay(O, Z = !1) {
                            let q;
                            switch (this._restrictCursor(this._bufferService.cols), O.params[0]) {
                                case 0:
                                    for (q = this._activeBuffer.y, this._dirtyRowTracker.markDirty(q), this._eraseInBufferLine(q++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, Z); q < this._bufferService.rows; q++) this._resetBufferLine(q, Z);
                                    this._dirtyRowTracker.markDirty(q);
                                    break;
                                case 1:
                                    for (q = this._activeBuffer.y, this._dirtyRowTracker.markDirty(q), this._eraseInBufferLine(q, 0, this._activeBuffer.x + 1, !0, Z), this._activeBuffer.x + 1 >= this._bufferService.cols && (this._activeBuffer.lines.get(q + 1).isWrapped = !1); q--;) this._resetBufferLine(q, Z);
                                    this._dirtyRowTracker.markDirty(0);
                                    break;
                                case 2:
                                    for (q = this._bufferService.rows, this._dirtyRowTracker.markDirty(q - 1); q--;) this._resetBufferLine(q, Z);
                                    this._dirtyRowTracker.markDirty(0);
                                    break;
                                case 3:
                                    const re = this._activeBuffer.lines.length - this._bufferService.rows;
                                    re > 0 && (this._activeBuffer.lines.trimStart(re), this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - re, 0), this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - re, 0), this._onScroll.fire(0))
                            }
                            return !0
                        }
                        eraseInLine(O, Z = !1) {
                            switch (this._restrictCursor(this._bufferService.cols), O.params[0]) {
                                case 0:
                                    this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, Z);
                                    break;
                                case 1:
                                    this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, !1, Z);
                                    break;
                                case 2:
                                    this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, !0, Z)
                            }
                            return this._dirtyRowTracker.markDirty(this._activeBuffer.y), !0
                        }
                        insertLines(O) {
                            this._restrictCursor();
                            let Z = O.params[0] || 1;
                            if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                            const q = this._activeBuffer.ybase + this._activeBuffer.y,
                                re = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom,
                                we = this._bufferService.rows - 1 + this._activeBuffer.ybase - re + 1;
                            for (; Z--;) this._activeBuffer.lines.splice(we - 1, 1), this._activeBuffer.lines.splice(q, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));
                            return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom), this._activeBuffer.x = 0, !0
                        }
                        deleteLines(O) {
                            this._restrictCursor();
                            let Z = O.params[0] || 1;
                            if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                            const q = this._activeBuffer.ybase + this._activeBuffer.y;
                            let re;
                            for (re = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom, re = this._bufferService.rows - 1 + this._activeBuffer.ybase - re; Z--;) this._activeBuffer.lines.splice(q, 1), this._activeBuffer.lines.splice(re, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));
                            return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom), this._activeBuffer.x = 0, !0
                        }
                        insertChars(O) {
                            this._restrictCursor();
                            const Z = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                            return Z && (Z.insertCells(this._activeBuffer.x, O.params[0] || 1, this._activeBuffer.getNullCell(this._eraseAttrData())), this._dirtyRowTracker.markDirty(this._activeBuffer.y)), !0
                        }
                        deleteChars(O) {
                            this._restrictCursor();
                            const Z = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                            return Z && (Z.deleteCells(this._activeBuffer.x, O.params[0] || 1, this._activeBuffer.getNullCell(this._eraseAttrData())), this._dirtyRowTracker.markDirty(this._activeBuffer.y)), !0
                        }
                        scrollUp(O) {
                            let Z = O.params[0] || 1;
                            for (; Z--;) this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1), this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));
                            return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                        }
                        scrollDown(O) {
                            let Z = O.params[0] || 1;
                            for (; Z--;) this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1), this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(a.DEFAULT_ATTR_DATA));
                            return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                        }
                        scrollLeft(O) {
                            if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                            const Z = O.params[0] || 1;
                            for (let q = this._activeBuffer.scrollTop; q <= this._activeBuffer.scrollBottom; ++q) {
                                const re = this._activeBuffer.lines.get(this._activeBuffer.ybase + q);
                                re.deleteCells(0, Z, this._activeBuffer.getNullCell(this._eraseAttrData())), re.isWrapped = !1
                            }
                            return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                        }
                        scrollRight(O) {
                            if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                            const Z = O.params[0] || 1;
                            for (let q = this._activeBuffer.scrollTop; q <= this._activeBuffer.scrollBottom; ++q) {
                                const re = this._activeBuffer.lines.get(this._activeBuffer.ybase + q);
                                re.insertCells(0, Z, this._activeBuffer.getNullCell(this._eraseAttrData())), re.isWrapped = !1
                            }
                            return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                        }
                        insertColumns(O) {
                            if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                            const Z = O.params[0] || 1;
                            for (let q = this._activeBuffer.scrollTop; q <= this._activeBuffer.scrollBottom; ++q) {
                                const re = this._activeBuffer.lines.get(this._activeBuffer.ybase + q);
                                re.insertCells(this._activeBuffer.x, Z, this._activeBuffer.getNullCell(this._eraseAttrData())), re.isWrapped = !1
                            }
                            return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                        }
                        deleteColumns(O) {
                            if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                            const Z = O.params[0] || 1;
                            for (let q = this._activeBuffer.scrollTop; q <= this._activeBuffer.scrollBottom; ++q) {
                                const re = this._activeBuffer.lines.get(this._activeBuffer.ybase + q);
                                re.deleteCells(this._activeBuffer.x, Z, this._activeBuffer.getNullCell(this._eraseAttrData())), re.isWrapped = !1
                            }
                            return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                        }
                        eraseChars(O) {
                            this._restrictCursor();
                            const Z = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                            return Z && (Z.replaceCells(this._activeBuffer.x, this._activeBuffer.x + (O.params[0] || 1), this._activeBuffer.getNullCell(this._eraseAttrData())), this._dirtyRowTracker.markDirty(this._activeBuffer.y)), !0
                        }
                        repeatPrecedingCharacter(O) {
                            const Z = this._parser.precedingJoinState;
                            if (!Z) return !0;
                            const q = O.params[0] || 1,
                                re = n.UnicodeService.extractWidth(Z),
                                we = this._activeBuffer.x - re,
                                Ee = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).getString(we),
                                je = new Uint32Array(Ee.length * q);
                            let ze = 0;
                            for (let W = 0; W < Ee.length;) {
                                const Ce = Ee.codePointAt(W) || 0;
                                je[ze++] = Ce, W += Ce > 65535 ? 2 : 1
                            }
                            let oe = ze;
                            for (let W = 1; W < q; ++W) je.copyWithin(oe, 0, ze), oe += ze;
                            return this.print(je, 0, oe), !0
                        }
                        sendDeviceAttributesPrimary(O) {
                            return O.params[0] > 0 || (this._is("xterm") || this._is("rxvt-unicode") || this._is("screen") ? this._coreService.triggerDataEvent(u.C0.ESC + "[?1;2c") : this._is("linux") && this._coreService.triggerDataEvent(u.C0.ESC + "[?6c")), !0
                        }
                        sendDeviceAttributesSecondary(O) {
                            return O.params[0] > 0 || (this._is("xterm") ? this._coreService.triggerDataEvent(u.C0.ESC + "[>0;276;0c") : this._is("rxvt-unicode") ? this._coreService.triggerDataEvent(u.C0.ESC + "[>85;95;0c") : this._is("linux") ? this._coreService.triggerDataEvent(O.params[0] + "c") : this._is("screen") && this._coreService.triggerDataEvent(u.C0.ESC + "[>83;40003;0c")), !0
                        }
                        _is(O) {
                            return (this._optionsService.rawOptions.termName + "").indexOf(O) === 0
                        }
                        setMode(O) {
                            for (let Z = 0; Z < O.length; Z++) switch (O.params[Z]) {
                                case 4:
                                    this._coreService.modes.insertMode = !0;
                                    break;
                                case 20:
                                    this._optionsService.options.convertEol = !0
                            }
                            return !0
                        }
                        setModePrivate(O) {
                            for (let Z = 0; Z < O.length; Z++) switch (O.params[Z]) {
                                case 1:
                                    this._coreService.decPrivateModes.applicationCursorKeys = !0;
                                    break;
                                case 2:
                                    this._charsetService.setgCharset(0, _.DEFAULT_CHARSET), this._charsetService.setgCharset(1, _.DEFAULT_CHARSET), this._charsetService.setgCharset(2, _.DEFAULT_CHARSET), this._charsetService.setgCharset(3, _.DEFAULT_CHARSET);
                                    break;
                                case 3:
                                    this._optionsService.rawOptions.windowOptions.setWinLines && (this._bufferService.resize(132, this._bufferService.rows), this._onRequestReset.fire());
                                    break;
                                case 6:
                                    this._coreService.decPrivateModes.origin = !0, this._setCursor(0, 0);
                                    break;
                                case 7:
                                    this._coreService.decPrivateModes.wraparound = !0;
                                    break;
                                case 12:
                                    this._optionsService.options.cursorBlink = !0;
                                    break;
                                case 45:
                                    this._coreService.decPrivateModes.reverseWraparound = !0;
                                    break;
                                case 66:
                                    this._logService.debug("Serial port requested application keypad."), this._coreService.decPrivateModes.applicationKeypad = !0, this._onRequestSyncScrollBar.fire();
                                    break;
                                case 9:
                                    this._coreMouseService.activeProtocol = "X10";
                                    break;
                                case 1e3:
                                    this._coreMouseService.activeProtocol = "VT200";
                                    break;
                                case 1002:
                                    this._coreMouseService.activeProtocol = "DRAG";
                                    break;
                                case 1003:
                                    this._coreMouseService.activeProtocol = "ANY";
                                    break;
                                case 1004:
                                    this._coreService.decPrivateModes.sendFocus = !0, this._onRequestSendFocus.fire();
                                    break;
                                case 1005:
                                    this._logService.debug("DECSET 1005 not supported (see #2507)");
                                    break;
                                case 1006:
                                    this._coreMouseService.activeEncoding = "SGR";
                                    break;
                                case 1015:
                                    this._logService.debug("DECSET 1015 not supported (see #2507)");
                                    break;
                                case 1016:
                                    this._coreMouseService.activeEncoding = "SGR_PIXELS";
                                    break;
                                case 25:
                                    this._coreService.isCursorHidden = !1;
                                    break;
                                case 1048:
                                    this.saveCursor();
                                    break;
                                case 1049:
                                    this.saveCursor();
                                case 47:
                                case 1047:
                                    this._bufferService.buffers.activateAltBuffer(this._eraseAttrData()), this._coreService.isCursorInitialized = !0, this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1), this._onRequestSyncScrollBar.fire();
                                    break;
                                case 2004:
                                    this._coreService.decPrivateModes.bracketedPasteMode = !0
                            }
                            return !0
                        }
                        resetMode(O) {
                            for (let Z = 0; Z < O.length; Z++) switch (O.params[Z]) {
                                case 4:
                                    this._coreService.modes.insertMode = !1;
                                    break;
                                case 20:
                                    this._optionsService.options.convertEol = !1
                            }
                            return !0
                        }
                        resetModePrivate(O) {
                            for (let Z = 0; Z < O.length; Z++) switch (O.params[Z]) {
                                case 1:
                                    this._coreService.decPrivateModes.applicationCursorKeys = !1;
                                    break;
                                case 3:
                                    this._optionsService.rawOptions.windowOptions.setWinLines && (this._bufferService.resize(80, this._bufferService.rows), this._onRequestReset.fire());
                                    break;
                                case 6:
                                    this._coreService.decPrivateModes.origin = !1, this._setCursor(0, 0);
                                    break;
                                case 7:
                                    this._coreService.decPrivateModes.wraparound = !1;
                                    break;
                                case 12:
                                    this._optionsService.options.cursorBlink = !1;
                                    break;
                                case 45:
                                    this._coreService.decPrivateModes.reverseWraparound = !1;
                                    break;
                                case 66:
                                    this._logService.debug("Switching back to normal keypad."), this._coreService.decPrivateModes.applicationKeypad = !1, this._onRequestSyncScrollBar.fire();
                                    break;
                                case 9:
                                case 1e3:
                                case 1002:
                                case 1003:
                                    this._coreMouseService.activeProtocol = "NONE";
                                    break;
                                case 1004:
                                    this._coreService.decPrivateModes.sendFocus = !1;
                                    break;
                                case 1005:
                                    this._logService.debug("DECRST 1005 not supported (see #2507)");
                                    break;
                                case 1006:
                                case 1016:
                                    this._coreMouseService.activeEncoding = "DEFAULT";
                                    break;
                                case 1015:
                                    this._logService.debug("DECRST 1015 not supported (see #2507)");
                                    break;
                                case 25:
                                    this._coreService.isCursorHidden = !0;
                                    break;
                                case 1048:
                                    this.restoreCursor();
                                    break;
                                case 1049:
                                case 47:
                                case 1047:
                                    this._bufferService.buffers.activateNormalBuffer(), O.params[Z] === 1049 && this.restoreCursor(), this._coreService.isCursorInitialized = !0, this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1), this._onRequestSyncScrollBar.fire();
                                    break;
                                case 2004:
                                    this._coreService.decPrivateModes.bracketedPasteMode = !1
                            }
                            return !0
                        }
                        requestMode(O, Z) {
                            const q = this._coreService.decPrivateModes,
                                {
                                    activeProtocol: re,
                                    activeEncoding: we
                                } = this._coreMouseService,
                                Ee = this._coreService,
                                {
                                    buffers: je,
                                    cols: ze
                                } = this._bufferService,
                                {
                                    active: oe,
                                    alt: W
                                } = je,
                                Ce = this._optionsService.rawOptions,
                                pe = ut => ut ? 1 : 2,
                                Ne = O.params[0];
                            return Pe = Ne, Xe = Z ? Ne === 2 ? 4 : Ne === 4 ? pe(Ee.modes.insertMode) : Ne === 12 ? 3 : Ne === 20 ? pe(Ce.convertEol) : 0 : Ne === 1 ? pe(q.applicationCursorKeys) : Ne === 3 ? Ce.windowOptions.setWinLines ? ze === 80 ? 2 : ze === 132 ? 1 : 0 : 0 : Ne === 6 ? pe(q.origin) : Ne === 7 ? pe(q.wraparound) : Ne === 8 ? 3 : Ne === 9 ? pe(re === "X10") : Ne === 12 ? pe(Ce.cursorBlink) : Ne === 25 ? pe(!Ee.isCursorHidden) : Ne === 45 ? pe(q.reverseWraparound) : Ne === 66 ? pe(q.applicationKeypad) : Ne === 67 ? 4 : Ne === 1e3 ? pe(re === "VT200") : Ne === 1002 ? pe(re === "DRAG") : Ne === 1003 ? pe(re === "ANY") : Ne === 1004 ? pe(q.sendFocus) : Ne === 1005 ? 4 : Ne === 1006 ? pe(we === "SGR") : Ne === 1015 ? 4 : Ne === 1016 ? pe(we === "SGR_PIXELS") : Ne === 1048 ? 1 : Ne === 47 || Ne === 1047 || Ne === 1049 ? pe(oe === W) : Ne === 2004 ? pe(q.bracketedPasteMode) : 0, Ee.triggerDataEvent(`${u.C0.ESC}[${Z?"":"?"}${Pe};${Xe}$y`), !0;
                            var Pe, Xe
                        }
                        _updateAttrColor(O, Z, q, re, we) {
                            return Z === 2 ? (O |= 50331648, O &= -16777216, O |= b.AttributeData.fromColorRGB([q, re, we])) : Z === 5 && (O &= -50331904, O |= 33554432 | 255 & q), O
                        }
                        _extractColor(O, Z, q) {
                            const re = [0, 0, -1, 0, 0, 0];
                            let we = 0,
                                Ee = 0;
                            do {
                                if (re[Ee + we] = O.params[Z + Ee], O.hasSubParams(Z + Ee)) {
                                    const je = O.getSubParams(Z + Ee);
                                    let ze = 0;
                                    do re[1] === 5 && (we = 1), re[Ee + ze + 1 + we] = je[ze]; while (++ze < je.length && ze + Ee + 1 + we < re.length);
                                    break
                                }
                                if (re[1] === 5 && Ee + we >= 2 || re[1] === 2 && Ee + we >= 5) break;
                                re[1] && (we = 1)
                            } while (++Ee + Z < O.length && Ee + we < re.length);
                            for (let je = 2; je < re.length; ++je) re[je] === -1 && (re[je] = 0);
                            switch (re[0]) {
                                case 38:
                                    q.fg = this._updateAttrColor(q.fg, re[1], re[3], re[4], re[5]);
                                    break;
                                case 48:
                                    q.bg = this._updateAttrColor(q.bg, re[1], re[3], re[4], re[5]);
                                    break;
                                case 58:
                                    q.extended = q.extended.clone(), q.extended.underlineColor = this._updateAttrColor(q.extended.underlineColor, re[1], re[3], re[4], re[5])
                            }
                            return Ee
                        }
                        _processUnderline(O, Z) {
                            Z.extended = Z.extended.clone(), (!~O || O > 5) && (O = 1), Z.extended.underlineStyle = O, Z.fg |= 268435456, O === 0 && (Z.fg &= -268435457), Z.updateExtended()
                        }
                        _processSGR0(O) {
                            O.fg = a.DEFAULT_ATTR_DATA.fg, O.bg = a.DEFAULT_ATTR_DATA.bg, O.extended = O.extended.clone(), O.extended.underlineStyle = 0, O.extended.underlineColor &= -67108864, O.updateExtended()
                        }
                        charAttributes(O) {
                            if (O.length === 1 && O.params[0] === 0) return this._processSGR0(this._curAttrData), !0;
                            const Z = O.length;
                            let q;
                            const re = this._curAttrData;
                            for (let we = 0; we < Z; we++) q = O.params[we], q >= 30 && q <= 37 ? (re.fg &= -50331904, re.fg |= 16777216 | q - 30) : q >= 40 && q <= 47 ? (re.bg &= -50331904, re.bg |= 16777216 | q - 40) : q >= 90 && q <= 97 ? (re.fg &= -50331904, re.fg |= 16777224 | q - 90) : q >= 100 && q <= 107 ? (re.bg &= -50331904, re.bg |= 16777224 | q - 100) : q === 0 ? this._processSGR0(re) : q === 1 ? re.fg |= 134217728 : q === 3 ? re.bg |= 67108864 : q === 4 ? (re.fg |= 268435456, this._processUnderline(O.hasSubParams(we) ? O.getSubParams(we)[0] : 1, re)) : q === 5 ? re.fg |= 536870912 : q === 7 ? re.fg |= 67108864 : q === 8 ? re.fg |= 1073741824 : q === 9 ? re.fg |= 2147483648 : q === 2 ? re.bg |= 134217728 : q === 21 ? this._processUnderline(2, re) : q === 22 ? (re.fg &= -134217729, re.bg &= -134217729) : q === 23 ? re.bg &= -67108865 : q === 24 ? (re.fg &= -268435457, this._processUnderline(0, re)) : q === 25 ? re.fg &= -536870913 : q === 27 ? re.fg &= -67108865 : q === 28 ? re.fg &= -1073741825 : q === 29 ? re.fg &= 2147483647 : q === 39 ? (re.fg &= -67108864, re.fg |= 16777215 & a.DEFAULT_ATTR_DATA.fg) : q === 49 ? (re.bg &= -67108864, re.bg |= 16777215 & a.DEFAULT_ATTR_DATA.bg) : q === 38 || q === 48 || q === 58 ? we += this._extractColor(O, we, re) : q === 53 ? re.bg |= 1073741824 : q === 55 ? re.bg &= -1073741825 : q === 59 ? (re.extended = re.extended.clone(), re.extended.underlineColor = -1, re.updateExtended()) : q === 100 ? (re.fg &= -67108864, re.fg |= 16777215 & a.DEFAULT_ATTR_DATA.fg, re.bg &= -67108864, re.bg |= 16777215 & a.DEFAULT_ATTR_DATA.bg) : this._logService.debug("Unknown SGR attribute: %d.", q);
                            return !0
                        }
                        deviceStatus(O) {
                            switch (O.params[0]) {
                                case 5:
                                    this._coreService.triggerDataEvent(`${u.C0.ESC}[0n`);
                                    break;
                                case 6:
                                    const Z = this._activeBuffer.y + 1,
                                        q = this._activeBuffer.x + 1;
                                    this._coreService.triggerDataEvent(`${u.C0.ESC}[${Z};${q}R`)
                            }
                            return !0
                        }
                        deviceStatusPrivate(O) {
                            if (O.params[0] === 6) {
                                const Z = this._activeBuffer.y + 1,
                                    q = this._activeBuffer.x + 1;
                                this._coreService.triggerDataEvent(`${u.C0.ESC}[?${Z};${q}R`)
                            }
                            return !0
                        }
                        softReset(O) {
                            return this._coreService.isCursorHidden = !1, this._onRequestSyncScrollBar.fire(), this._activeBuffer.scrollTop = 0, this._activeBuffer.scrollBottom = this._bufferService.rows - 1, this._curAttrData = a.DEFAULT_ATTR_DATA.clone(), this._coreService.reset(), this._charsetService.reset(), this._activeBuffer.savedX = 0, this._activeBuffer.savedY = this._activeBuffer.ybase, this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg, this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg, this._activeBuffer.savedCharset = this._charsetService.charset, this._coreService.decPrivateModes.origin = !1, !0
                        }
                        setCursorStyle(O) {
                            const Z = O.params[0] || 1;
                            switch (Z) {
                                case 1:
                                case 2:
                                    this._optionsService.options.cursorStyle = "block";
                                    break;
                                case 3:
                                case 4:
                                    this._optionsService.options.cursorStyle = "underline";
                                    break;
                                case 5:
                                case 6:
                                    this._optionsService.options.cursorStyle = "bar"
                            }
                            const q = Z % 2 == 1;
                            return this._optionsService.options.cursorBlink = q, !0
                        }
                        setScrollRegion(O) {
                            const Z = O.params[0] || 1;
                            let q;
                            return (O.length < 2 || (q = O.params[1]) > this._bufferService.rows || q === 0) && (q = this._bufferService.rows), q > Z && (this._activeBuffer.scrollTop = Z - 1, this._activeBuffer.scrollBottom = q - 1, this._setCursor(0, 0)), !0
                        }
                        windowOptions(O) {
                            if (!K(O.params[0], this._optionsService.rawOptions.windowOptions)) return !0;
                            const Z = O.length > 1 ? O.params[1] : 0;
                            switch (O.params[0]) {
                                case 14:
                                    Z !== 2 && this._onRequestWindowsOptionsReport.fire(U.GET_WIN_SIZE_PIXELS);
                                    break;
                                case 16:
                                    this._onRequestWindowsOptionsReport.fire(U.GET_CELL_SIZE_PIXELS);
                                    break;
                                case 18:
                                    this._bufferService && this._coreService.triggerDataEvent(`${u.C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);
                                    break;
                                case 22:
                                    Z !== 0 && Z !== 2 || (this._windowTitleStack.push(this._windowTitle), this._windowTitleStack.length > 10 && this._windowTitleStack.shift()), Z !== 0 && Z !== 1 || (this._iconNameStack.push(this._iconName), this._iconNameStack.length > 10 && this._iconNameStack.shift());
                                    break;
                                case 23:
                                    Z !== 0 && Z !== 2 || this._windowTitleStack.length && this.setTitle(this._windowTitleStack.pop()), Z !== 0 && Z !== 1 || this._iconNameStack.length && this.setIconName(this._iconNameStack.pop())
                            }
                            return !0
                        }
                        saveCursor(O) {
                            return this._activeBuffer.savedX = this._activeBuffer.x, this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg, this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg, this._activeBuffer.savedCharset = this._charsetService.charset, !0
                        }
                        restoreCursor(O) {
                            return this._activeBuffer.x = this._activeBuffer.savedX || 0, this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0), this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg, this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg, this._charsetService.charset = this._savedCharset, this._activeBuffer.savedCharset && (this._charsetService.charset = this._activeBuffer.savedCharset), this._restrictCursor(), !0
                        }
                        setTitle(O) {
                            return this._windowTitle = O, this._onTitleChange.fire(O), !0
                        }
                        setIconName(O) {
                            return this._iconName = O, !0
                        }
                        setOrReportIndexedColor(O) {
                            const Z = [],
                                q = O.split(";");
                            for (; q.length > 1;) {
                                const re = q.shift(),
                                    we = q.shift();
                                if (/^\d+$/.exec(re)) {
                                    const Ee = parseInt(re);
                                    if (Fe(Ee))
                                        if (we === "?") Z.push({
                                            type: 0,
                                            index: Ee
                                        });
                                        else {
                                            const je = (0, L.parseColor)(we);
                                            je && Z.push({
                                                type: 1,
                                                index: Ee,
                                                color: je
                                            })
                                        }
                                }
                            }
                            return Z.length && this._onColor.fire(Z), !0
                        }
                        setHyperlink(O) {
                            const Z = O.split(";");
                            return !(Z.length < 2) && (Z[1] ? this._createHyperlink(Z[0], Z[1]) : !Z[0] && this._finishHyperlink())
                        }
                        _createHyperlink(O, Z) {
                            this._getCurrentLinkId() && this._finishHyperlink();
                            const q = O.split(":");
                            let re;
                            const we = q.findIndex(Ee => Ee.startsWith("id="));
                            return we !== -1 && (re = q[we].slice(3) || void 0), this._curAttrData.extended = this._curAttrData.extended.clone(), this._curAttrData.extended.urlId = this._oscLinkService.registerLink({
                                id: re,
                                uri: Z
                            }), this._curAttrData.updateExtended(), !0
                        }
                        _finishHyperlink() {
                            return this._curAttrData.extended = this._curAttrData.extended.clone(), this._curAttrData.extended.urlId = 0, this._curAttrData.updateExtended(), !0
                        }
                        _setOrReportSpecialColor(O, Z) {
                            const q = O.split(";");
                            for (let re = 0; re < q.length && !(Z >= this._specialColors.length); ++re, ++Z)
                                if (q[re] === "?") this._onColor.fire([{
                                    type: 0,
                                    index: this._specialColors[Z]
                                }]);
                                else {
                                    const we = (0, L.parseColor)(q[re]);
                                    we && this._onColor.fire([{
                                        type: 1,
                                        index: this._specialColors[Z],
                                        color: we
                                    }])
                                } return !0
                        }
                        setOrReportFgColor(O) {
                            return this._setOrReportSpecialColor(O, 0)
                        }
                        setOrReportBgColor(O) {
                            return this._setOrReportSpecialColor(O, 1)
                        }
                        setOrReportCursorColor(O) {
                            return this._setOrReportSpecialColor(O, 2)
                        }
                        restoreIndexedColor(O) {
                            if (!O) return this._onColor.fire([{
                                type: 2
                            }]), !0;
                            const Z = [],
                                q = O.split(";");
                            for (let re = 0; re < q.length; ++re)
                                if (/^\d+$/.exec(q[re])) {
                                    const we = parseInt(q[re]);
                                    Fe(we) && Z.push({
                                        type: 2,
                                        index: we
                                    })
                                } return Z.length && this._onColor.fire(Z), !0
                        }
                        restoreFgColor(O) {
                            return this._onColor.fire([{
                                type: 2,
                                index: 256
                            }]), !0
                        }
                        restoreBgColor(O) {
                            return this._onColor.fire([{
                                type: 2,
                                index: 257
                            }]), !0
                        }
                        restoreCursorColor(O) {
                            return this._onColor.fire([{
                                type: 2,
                                index: 258
                            }]), !0
                        }
                        nextLine() {
                            return this._activeBuffer.x = 0, this.index(), !0
                        }
                        keypadApplicationMode() {
                            return this._logService.debug("Serial port requested application keypad."), this._coreService.decPrivateModes.applicationKeypad = !0, this._onRequestSyncScrollBar.fire(), !0
                        }
                        keypadNumericMode() {
                            return this._logService.debug("Switching back to normal keypad."), this._coreService.decPrivateModes.applicationKeypad = !1, this._onRequestSyncScrollBar.fire(), !0
                        }
                        selectDefaultCharset() {
                            return this._charsetService.setgLevel(0), this._charsetService.setgCharset(0, _.DEFAULT_CHARSET), !0
                        }
                        selectCharset(O) {
                            return O.length !== 2 ? (this.selectDefaultCharset(), !0) : (O[0] === "/" || this._charsetService.setgCharset(z[O[0]], _.CHARSETS[O[1]] || _.DEFAULT_CHARSET), !0)
                        }
                        index() {
                            return this._restrictCursor(), this._activeBuffer.y++, this._activeBuffer.y === this._activeBuffer.scrollBottom + 1 ? (this._activeBuffer.y--, this._bufferService.scroll(this._eraseAttrData())) : this._activeBuffer.y >= this._bufferService.rows && (this._activeBuffer.y = this._bufferService.rows - 1), this._restrictCursor(), !0
                        }
                        tabSet() {
                            return this._activeBuffer.tabs[this._activeBuffer.x] = !0, !0
                        }
                        reverseIndex() {
                            if (this._restrictCursor(), this._activeBuffer.y === this._activeBuffer.scrollTop) {
                                const O = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;
                                this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, O, 1), this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData())), this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom)
                            } else this._activeBuffer.y--, this._restrictCursor();
                            return !0
                        }
                        fullReset() {
                            return this._parser.reset(), this._onRequestReset.fire(), !0
                        }
                        reset() {
                            this._curAttrData = a.DEFAULT_ATTR_DATA.clone(), this._eraseAttrDataInternal = a.DEFAULT_ATTR_DATA.clone()
                        }
                        _eraseAttrData() {
                            return this._eraseAttrDataInternal.bg &= -67108864, this._eraseAttrDataInternal.bg |= 67108863 & this._curAttrData.bg, this._eraseAttrDataInternal
                        }
                        setgLevel(O) {
                            return this._charsetService.setgLevel(O), !0
                        }
                        screenAlignmentPattern() {
                            const O = new l.CellData;
                            O.content = 4194373, O.fg = this._curAttrData.fg, O.bg = this._curAttrData.bg, this._setCursor(0, 0);
                            for (let Z = 0; Z < this._bufferService.rows; ++Z) {
                                const q = this._activeBuffer.ybase + this._activeBuffer.y + Z,
                                    re = this._activeBuffer.lines.get(q);
                                re && (re.fill(O), re.isWrapped = !1)
                            }
                            return this._dirtyRowTracker.markAllDirty(), this._setCursor(0, 0), !0
                        }
                        requestStatusString(O, Z) {
                            const q = this._bufferService.buffer,
                                re = this._optionsService.rawOptions;
                            return (we => (this._coreService.triggerDataEvent(`${u.C0.ESC}${we}${u.C0.ESC}\\`), !0))(O === '"q' ? `P1$r${this._curAttrData.isProtected()?1:0}"q` : O === '"p' ? 'P1$r61;1"p' : O === "r" ? `P1$r${q.scrollTop+1};${q.scrollBottom+1}r` : O === "m" ? "P1$r0m" : O === " q" ? `P1$r${{block:2,underline:4,bar:6}[re.cursorStyle]-(re.cursorBlink?1:0)} q` : "P0$r")
                        }
                        markRangeDirty(O, Z) {
                            this._dirtyRowTracker.markRangeDirty(O, Z)
                        }
                    }
                    r.InputHandler = fe;
                    let ye = class {
                        constructor(ge) {
                            this._bufferService = ge, this.clearRange()
                        }
                        clearRange() {
                            this.start = this._bufferService.buffer.y, this.end = this._bufferService.buffer.y
                        }
                        markDirty(ge) {
                            ge < this.start ? this.start = ge : ge > this.end && (this.end = ge)
                        }
                        markRangeDirty(ge, O) {
                            ge > O && (te = ge, ge = O, O = te), ge < this.start && (this.start = ge), O > this.end && (this.end = O)
                        }
                        markAllDirty() {
                            this.markRangeDirty(0, this._bufferService.rows - 1)
                        }
                    };

                    function Fe(ge) {
                        return 0 <= ge && ge < 256
                    }
                    ye = c([g(0, A.IBufferService)], ye)
                },
                844: (C, r) => {
                    function s(c) {
                        for (const g of c) g.dispose();
                        c.length = 0
                    }
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.getDisposeArrayDisposable = r.disposeArray = r.toDisposable = r.MutableDisposable = r.Disposable = void 0, r.Disposable = class {
                        constructor() {
                            this._disposables = [], this._isDisposed = !1
                        }
                        dispose() {
                            this._isDisposed = !0;
                            for (const c of this._disposables) c.dispose();
                            this._disposables.length = 0
                        }
                        register(c) {
                            return this._disposables.push(c), c
                        }
                        unregister(c) {
                            const g = this._disposables.indexOf(c);
                            g !== -1 && this._disposables.splice(g, 1)
                        }
                    }, r.MutableDisposable = class {
                        constructor() {
                            this._isDisposed = !1
                        }
                        get value() {
                            return this._isDisposed ? void 0 : this._value
                        }
                        set value(c) {
                            var g;
                            this._isDisposed || c === this._value || ((g = this._value) == null || g.dispose(), this._value = c)
                        }
                        clear() {
                            this.value = void 0
                        }
                        dispose() {
                            var c;
                            this._isDisposed = !0, (c = this._value) == null || c.dispose(), this._value = void 0
                        }
                    }, r.toDisposable = function(c) {
                        return {
                            dispose: c
                        }
                    }, r.disposeArray = s, r.getDisposeArrayDisposable = function(c) {
                        return {
                            dispose: () => s(c)
                        }
                    }
                },
                1505: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.FourKeyMap = r.TwoKeyMap = void 0;
                    class s {
                        constructor() {
                            this._data = {}
                        }
                        set(g, u, _) {
                            this._data[g] || (this._data[g] = {}), this._data[g][u] = _
                        }
                        get(g, u) {
                            return this._data[g] ? this._data[g][u] : void 0
                        }
                        clear() {
                            this._data = {}
                        }
                    }
                    r.TwoKeyMap = s, r.FourKeyMap = class {
                        constructor() {
                            this._data = new s
                        }
                        set(c, g, u, _, v) {
                            this._data.get(c, g) || this._data.set(c, g, new s), this._data.get(c, g).set(u, _, v)
                        }
                        get(c, g, u, _) {
                            var v;
                            return (v = this._data.get(c, g)) == null ? void 0 : v.get(u, _)
                        }
                        clear() {
                            this._data.clear()
                        }
                    }
                },
                6114: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.isChromeOS = r.isLinux = r.isWindows = r.isIphone = r.isIpad = r.isMac = r.getSafariVersion = r.isSafari = r.isLegacyEdge = r.isFirefox = r.isNode = void 0, r.isNode = typeof process < "u" && "title" in process;
                    const s = r.isNode ? "node" : navigator.userAgent,
                        c = r.isNode ? "node" : navigator.platform;
                    r.isFirefox = s.includes("Firefox"), r.isLegacyEdge = s.includes("Edge"), r.isSafari = /^((?!chrome|android).)*safari/i.test(s), r.getSafariVersion = function() {
                        if (!r.isSafari) return 0;
                        const g = s.match(/Version\/(\d+)/);
                        return g === null || g.length < 2 ? 0 : parseInt(g[1])
                    }, r.isMac = ["Macintosh", "MacIntel", "MacPPC", "Mac68K"].includes(c), r.isIpad = c === "iPad", r.isIphone = c === "iPhone", r.isWindows = ["Windows", "Win16", "Win32", "WinCE"].includes(c), r.isLinux = c.indexOf("Linux") >= 0, r.isChromeOS = /\bCrOS\b/.test(s)
                },
                6106: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.SortedList = void 0;
                    let s = 0;
                    r.SortedList = class {
                        constructor(c) {
                            this._getKey = c, this._array = []
                        }
                        clear() {
                            this._array.length = 0
                        }
                        insert(c) {
                            this._array.length !== 0 ? (s = this._search(this._getKey(c)), this._array.splice(s, 0, c)) : this._array.push(c)
                        }
                        delete(c) {
                            if (this._array.length === 0) return !1;
                            const g = this._getKey(c);
                            if (g === void 0 || (s = this._search(g), s === -1) || this._getKey(this._array[s]) !== g) return !1;
                            do
                                if (this._array[s] === c) return this._array.splice(s, 1), !0; while (++s < this._array.length && this._getKey(this._array[s]) === g);
                            return !1
                        }* getKeyIterator(c) {
                            if (this._array.length !== 0 && (s = this._search(c), !(s < 0 || s >= this._array.length) && this._getKey(this._array[s]) === c))
                                do yield this._array[s]; while (++s < this._array.length && this._getKey(this._array[s]) === c)
                        }
                        forEachByKey(c, g) {
                            if (this._array.length !== 0 && (s = this._search(c), !(s < 0 || s >= this._array.length) && this._getKey(this._array[s]) === c))
                                do g(this._array[s]); while (++s < this._array.length && this._getKey(this._array[s]) === c)
                        }
                        values() {
                            return [...this._array].values()
                        }
                        _search(c) {
                            let g = 0,
                                u = this._array.length - 1;
                            for (; u >= g;) {
                                let _ = g + u >> 1;
                                const v = this._getKey(this._array[_]);
                                if (v > c) u = _ - 1;
                                else {
                                    if (!(v < c)) {
                                        for (; _ > 0 && this._getKey(this._array[_ - 1]) === c;) _--;
                                        return _
                                    }
                                    g = _ + 1
                                }
                            }
                            return g
                        }
                    }
                },
                7226: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.DebouncedIdleTask = r.IdleTaskQueue = r.PriorityTaskQueue = void 0;
                    const c = s(6114);
                    class g {
                        constructor() {
                            this._tasks = [], this._i = 0
                        }
                        enqueue(v) {
                            this._tasks.push(v), this._start()
                        }
                        flush() {
                            for (; this._i < this._tasks.length;) this._tasks[this._i]() || this._i++;
                            this.clear()
                        }
                        clear() {
                            this._idleCallback && (this._cancelCallback(this._idleCallback), this._idleCallback = void 0), this._i = 0, this._tasks.length = 0
                        }
                        _start() {
                            this._idleCallback || (this._idleCallback = this._requestCallback(this._process.bind(this)))
                        }
                        _process(v) {
                            this._idleCallback = void 0;
                            let D = 0,
                                d = 0,
                                a = v.timeRemaining(),
                                o = 0;
                            for (; this._i < this._tasks.length;) {
                                if (D = Date.now(), this._tasks[this._i]() || this._i++, D = Math.max(1, Date.now() - D), d = Math.max(D, d), o = v.timeRemaining(), 1.5 * d > o) return a - D < -20 && console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(a-D))}ms`), void this._start();
                                a = o
                            }
                            this.clear()
                        }
                    }
                    class u extends g {
                        _requestCallback(v) {
                            return setTimeout(() => v(this._createDeadline(16)))
                        }
                        _cancelCallback(v) {
                            clearTimeout(v)
                        }
                        _createDeadline(v) {
                            const D = Date.now() + v;
                            return {
                                timeRemaining: () => Math.max(0, D - Date.now())
                            }
                        }
                    }
                    r.PriorityTaskQueue = u, r.IdleTaskQueue = !c.isNode && "requestIdleCallback" in window ? class extends g {
                        _requestCallback(_) {
                            return requestIdleCallback(_)
                        }
                        _cancelCallback(_) {
                            cancelIdleCallback(_)
                        }
                    } : u, r.DebouncedIdleTask = class {
                        constructor() {
                            this._queue = new r.IdleTaskQueue
                        }
                        set(_) {
                            this._queue.clear(), this._queue.enqueue(_)
                        }
                        flush() {
                            this._queue.flush()
                        }
                    }
                },
                9282: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.updateWindowsModeWrappedState = void 0;
                    const c = s(643);
                    r.updateWindowsModeWrappedState = function(g) {
                        const u = g.buffer.lines.get(g.buffer.ybase + g.buffer.y - 1),
                            _ = u == null ? void 0 : u.get(g.cols - 1),
                            v = g.buffer.lines.get(g.buffer.ybase + g.buffer.y);
                        v && _ && (v.isWrapped = _[c.CHAR_DATA_CODE_INDEX] !== c.NULL_CELL_CODE && _[c.CHAR_DATA_CODE_INDEX] !== c.WHITESPACE_CELL_CODE)
                    }
                },
                3734: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.ExtendedAttrs = r.AttributeData = void 0;
                    class s {
                        constructor() {
                            this.fg = 0, this.bg = 0, this.extended = new c
                        }
                        static toColorRGB(u) {
                            return [u >>> 16 & 255, u >>> 8 & 255, 255 & u]
                        }
                        static fromColorRGB(u) {
                            return (255 & u[0]) << 16 | (255 & u[1]) << 8 | 255 & u[2]
                        }
                        clone() {
                            const u = new s;
                            return u.fg = this.fg, u.bg = this.bg, u.extended = this.extended.clone(), u
                        }
                        isInverse() {
                            return 67108864 & this.fg
                        }
                        isBold() {
                            return 134217728 & this.fg
                        }
                        isUnderline() {
                            return this.hasExtendedAttrs() && this.extended.underlineStyle !== 0 ? 1 : 268435456 & this.fg
                        }
                        isBlink() {
                            return 536870912 & this.fg
                        }
                        isInvisible() {
                            return 1073741824 & this.fg
                        }
                        isItalic() {
                            return 67108864 & this.bg
                        }
                        isDim() {
                            return 134217728 & this.bg
                        }
                        isStrikethrough() {
                            return 2147483648 & this.fg
                        }
                        isProtected() {
                            return 536870912 & this.bg
                        }
                        isOverline() {
                            return 1073741824 & this.bg
                        }
                        getFgColorMode() {
                            return 50331648 & this.fg
                        }
                        getBgColorMode() {
                            return 50331648 & this.bg
                        }
                        isFgRGB() {
                            return (50331648 & this.fg) == 50331648
                        }
                        isBgRGB() {
                            return (50331648 & this.bg) == 50331648
                        }
                        isFgPalette() {
                            return (50331648 & this.fg) == 16777216 || (50331648 & this.fg) == 33554432
                        }
                        isBgPalette() {
                            return (50331648 & this.bg) == 16777216 || (50331648 & this.bg) == 33554432
                        }
                        isFgDefault() {
                            return (50331648 & this.fg) == 0
                        }
                        isBgDefault() {
                            return (50331648 & this.bg) == 0
                        }
                        isAttributeDefault() {
                            return this.fg === 0 && this.bg === 0
                        }
                        getFgColor() {
                            switch (50331648 & this.fg) {
                                case 16777216:
                                case 33554432:
                                    return 255 & this.fg;
                                case 50331648:
                                    return 16777215 & this.fg;
                                default:
                                    return -1
                            }
                        }
                        getBgColor() {
                            switch (50331648 & this.bg) {
                                case 16777216:
                                case 33554432:
                                    return 255 & this.bg;
                                case 50331648:
                                    return 16777215 & this.bg;
                                default:
                                    return -1
                            }
                        }
                        hasExtendedAttrs() {
                            return 268435456 & this.bg
                        }
                        updateExtended() {
                            this.extended.isEmpty() ? this.bg &= -268435457 : this.bg |= 268435456
                        }
                        getUnderlineColor() {
                            if (268435456 & this.bg && ~this.extended.underlineColor) switch (50331648 & this.extended.underlineColor) {
                                case 16777216:
                                case 33554432:
                                    return 255 & this.extended.underlineColor;
                                case 50331648:
                                    return 16777215 & this.extended.underlineColor;
                                default:
                                    return this.getFgColor()
                            }
                            return this.getFgColor()
                        }
                        getUnderlineColorMode() {
                            return 268435456 & this.bg && ~this.extended.underlineColor ? 50331648 & this.extended.underlineColor : this.getFgColorMode()
                        }
                        isUnderlineColorRGB() {
                            return 268435456 & this.bg && ~this.extended.underlineColor ? (50331648 & this.extended.underlineColor) == 50331648 : this.isFgRGB()
                        }
                        isUnderlineColorPalette() {
                            return 268435456 & this.bg && ~this.extended.underlineColor ? (50331648 & this.extended.underlineColor) == 16777216 || (50331648 & this.extended.underlineColor) == 33554432 : this.isFgPalette()
                        }
                        isUnderlineColorDefault() {
                            return 268435456 & this.bg && ~this.extended.underlineColor ? (50331648 & this.extended.underlineColor) == 0 : this.isFgDefault()
                        }
                        getUnderlineStyle() {
                            return 268435456 & this.fg ? 268435456 & this.bg ? this.extended.underlineStyle : 1 : 0
                        }
                        getUnderlineVariantOffset() {
                            return this.extended.underlineVariantOffset
                        }
                    }
                    r.AttributeData = s;
                    class c {
                        get ext() {
                            return this._urlId ? -469762049 & this._ext | this.underlineStyle << 26 : this._ext
                        }
                        set ext(u) {
                            this._ext = u
                        }
                        get underlineStyle() {
                            return this._urlId ? 5 : (469762048 & this._ext) >> 26
                        }
                        set underlineStyle(u) {
                            this._ext &= -469762049, this._ext |= u << 26 & 469762048
                        }
                        get underlineColor() {
                            return 67108863 & this._ext
                        }
                        set underlineColor(u) {
                            this._ext &= -67108864, this._ext |= 67108863 & u
                        }
                        get urlId() {
                            return this._urlId
                        }
                        set urlId(u) {
                            this._urlId = u
                        }
                        get underlineVariantOffset() {
                            const u = (3758096384 & this._ext) >> 29;
                            return u < 0 ? 4294967288 ^ u : u
                        }
                        set underlineVariantOffset(u) {
                            this._ext &= 536870911, this._ext |= u << 29 & 3758096384
                        }
                        constructor(u = 0, _ = 0) {
                            this._ext = 0, this._urlId = 0, this._ext = u, this._urlId = _
                        }
                        clone() {
                            return new c(this._ext, this._urlId)
                        }
                        isEmpty() {
                            return this.underlineStyle === 0 && this._urlId === 0
                        }
                    }
                    r.ExtendedAttrs = c
                },
                9092: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.Buffer = r.MAX_BUFFER_SIZE = void 0;
                    const c = s(6349),
                        g = s(7226),
                        u = s(3734),
                        _ = s(8437),
                        v = s(4634),
                        D = s(511),
                        d = s(643),
                        a = s(4863),
                        o = s(7116);
                    r.MAX_BUFFER_SIZE = 4294967295, r.Buffer = class {
                        constructor(i, l, b) {
                            this._hasScrollback = i, this._optionsService = l, this._bufferService = b, this.ydisp = 0, this.ybase = 0, this.y = 0, this.x = 0, this.tabs = {}, this.savedY = 0, this.savedX = 0, this.savedCurAttrData = _.DEFAULT_ATTR_DATA.clone(), this.savedCharset = o.DEFAULT_CHARSET, this.markers = [], this._nullCell = D.CellData.fromCharData([0, d.NULL_CELL_CHAR, d.NULL_CELL_WIDTH, d.NULL_CELL_CODE]), this._whitespaceCell = D.CellData.fromCharData([0, d.WHITESPACE_CELL_CHAR, d.WHITESPACE_CELL_WIDTH, d.WHITESPACE_CELL_CODE]), this._isClearing = !1, this._memoryCleanupQueue = new g.IdleTaskQueue, this._memoryCleanupPosition = 0, this._cols = this._bufferService.cols, this._rows = this._bufferService.rows, this.lines = new c.CircularList(this._getCorrectBufferLength(this._rows)), this.scrollTop = 0, this.scrollBottom = this._rows - 1, this.setupTabStops()
                        }
                        getNullCell(i) {
                            return i ? (this._nullCell.fg = i.fg, this._nullCell.bg = i.bg, this._nullCell.extended = i.extended) : (this._nullCell.fg = 0, this._nullCell.bg = 0, this._nullCell.extended = new u.ExtendedAttrs), this._nullCell
                        }
                        getWhitespaceCell(i) {
                            return i ? (this._whitespaceCell.fg = i.fg, this._whitespaceCell.bg = i.bg, this._whitespaceCell.extended = i.extended) : (this._whitespaceCell.fg = 0, this._whitespaceCell.bg = 0, this._whitespaceCell.extended = new u.ExtendedAttrs), this._whitespaceCell
                        }
                        getBlankLine(i, l) {
                            return new _.BufferLine(this._bufferService.cols, this.getNullCell(i), l)
                        }
                        get hasScrollback() {
                            return this._hasScrollback && this.lines.maxLength > this._rows
                        }
                        get isCursorInViewport() {
                            const i = this.ybase + this.y - this.ydisp;
                            return i >= 0 && i < this._rows
                        }
                        _getCorrectBufferLength(i) {
                            if (!this._hasScrollback) return i;
                            const l = i + this._optionsService.rawOptions.scrollback;
                            return l > r.MAX_BUFFER_SIZE ? r.MAX_BUFFER_SIZE : l
                        }
                        fillViewportRows(i) {
                            if (this.lines.length === 0) {
                                i === void 0 && (i = _.DEFAULT_ATTR_DATA);
                                let l = this._rows;
                                for (; l--;) this.lines.push(this.getBlankLine(i))
                            }
                        }
                        clear() {
                            this.ydisp = 0, this.ybase = 0, this.y = 0, this.x = 0, this.lines = new c.CircularList(this._getCorrectBufferLength(this._rows)), this.scrollTop = 0, this.scrollBottom = this._rows - 1, this.setupTabStops()
                        }
                        resize(i, l) {
                            const b = this.getNullCell(_.DEFAULT_ATTR_DATA);
                            let A = 0;
                            const n = this._getCorrectBufferLength(l);
                            if (n > this.lines.maxLength && (this.lines.maxLength = n), this.lines.length > 0) {
                                if (this._cols < i)
                                    for (let S = 0; S < this.lines.length; S++) A += +this.lines.get(S).resize(i, b);
                                let T = 0;
                                if (this._rows < l)
                                    for (let S = this._rows; S < l; S++) this.lines.length < l + this.ybase && (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== void 0 || this._optionsService.rawOptions.windowsPty.buildNumber !== void 0 ? this.lines.push(new _.BufferLine(i, b)) : this.ybase > 0 && this.lines.length <= this.ybase + this.y + T + 1 ? (this.ybase--, T++, this.ydisp > 0 && this.ydisp--) : this.lines.push(new _.BufferLine(i, b)));
                                else
                                    for (let S = this._rows; S > l; S--) this.lines.length > l + this.ybase && (this.lines.length > this.ybase + this.y + 1 ? this.lines.pop() : (this.ybase++, this.ydisp++));
                                if (n < this.lines.maxLength) {
                                    const S = this.lines.length - n;
                                    S > 0 && (this.lines.trimStart(S), this.ybase = Math.max(this.ybase - S, 0), this.ydisp = Math.max(this.ydisp - S, 0), this.savedY = Math.max(this.savedY - S, 0)), this.lines.maxLength = n
                                }
                                this.x = Math.min(this.x, i - 1), this.y = Math.min(this.y, l - 1), T && (this.y += T), this.savedX = Math.min(this.savedX, i - 1), this.scrollTop = 0
                            }
                            if (this.scrollBottom = l - 1, this._isReflowEnabled && (this._reflow(i, l), this._cols > i))
                                for (let T = 0; T < this.lines.length; T++) A += +this.lines.get(T).resize(i, b);
                            this._cols = i, this._rows = l, this._memoryCleanupQueue.clear(), A > .1 * this.lines.length && (this._memoryCleanupPosition = 0, this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup()))
                        }
                        _batchedMemoryCleanup() {
                            let i = !0;
                            this._memoryCleanupPosition >= this.lines.length && (this._memoryCleanupPosition = 0, i = !1);
                            let l = 0;
                            for (; this._memoryCleanupPosition < this.lines.length;)
                                if (l += this.lines.get(this._memoryCleanupPosition++).cleanupMemory(), l > 100) return !0;
                            return i
                        }
                        get _isReflowEnabled() {
                            const i = this._optionsService.rawOptions.windowsPty;
                            return i && i.buildNumber ? this._hasScrollback && i.backend === "conpty" && i.buildNumber >= 21376 : this._hasScrollback && !this._optionsService.rawOptions.windowsMode
                        }
                        _reflow(i, l) {
                            this._cols !== i && (i > this._cols ? this._reflowLarger(i, l) : this._reflowSmaller(i, l))
                        }
                        _reflowLarger(i, l) {
                            const b = (0, v.reflowLargerGetLinesToRemove)(this.lines, this._cols, i, this.ybase + this.y, this.getNullCell(_.DEFAULT_ATTR_DATA));
                            if (b.length > 0) {
                                const A = (0, v.reflowLargerCreateNewLayout)(this.lines, b);
                                (0, v.reflowLargerApplyNewLayout)(this.lines, A.layout), this._reflowLargerAdjustViewport(i, l, A.countRemoved)
                            }
                        }
                        _reflowLargerAdjustViewport(i, l, b) {
                            const A = this.getNullCell(_.DEFAULT_ATTR_DATA);
                            let n = b;
                            for (; n-- > 0;) this.ybase === 0 ? (this.y > 0 && this.y--, this.lines.length < l && this.lines.push(new _.BufferLine(i, A))) : (this.ydisp === this.ybase && this.ydisp--, this.ybase--);
                            this.savedY = Math.max(this.savedY - b, 0)
                        }
                        _reflowSmaller(i, l) {
                            const b = this.getNullCell(_.DEFAULT_ATTR_DATA),
                                A = [];
                            let n = 0;
                            for (let T = this.lines.length - 1; T >= 0; T--) {
                                let S = this.lines.get(T);
                                if (!S || !S.isWrapped && S.getTrimmedLength() <= i) continue;
                                const L = [S];
                                for (; S.isWrapped && T > 0;) S = this.lines.get(--T), L.unshift(S);
                                const z = this.ybase + this.y;
                                if (z >= T && z < T + L.length) continue;
                                const G = L[L.length - 1].getTrimmedLength(),
                                    K = (0, v.reflowSmallerGetNewLineLengths)(L, this._cols, i),
                                    U = K.length - L.length;
                                let te;
                                te = this.ybase === 0 && this.y !== this.lines.length - 1 ? Math.max(0, this.y - this.lines.maxLength + U) : Math.max(0, this.lines.length - this.lines.maxLength + U);
                                const fe = [];
                                for (let q = 0; q < U; q++) {
                                    const re = this.getBlankLine(_.DEFAULT_ATTR_DATA, !0);
                                    fe.push(re)
                                }
                                fe.length > 0 && (A.push({
                                    start: T + L.length + n,
                                    newLines: fe
                                }), n += fe.length), L.push(...fe);
                                let ye = K.length - 1,
                                    Fe = K[ye];
                                Fe === 0 && (ye--, Fe = K[ye]);
                                let ge = L.length - U - 1,
                                    O = G;
                                for (; ge >= 0;) {
                                    const q = Math.min(O, Fe);
                                    if (L[ye] === void 0) break;
                                    if (L[ye].copyCellsFrom(L[ge], O - q, Fe - q, q, !0), Fe -= q, Fe === 0 && (ye--, Fe = K[ye]), O -= q, O === 0) {
                                        ge--;
                                        const re = Math.max(ge, 0);
                                        O = (0, v.getWrappedLineTrimmedLength)(L, re, this._cols)
                                    }
                                }
                                for (let q = 0; q < L.length; q++) K[q] < i && L[q].setCell(K[q], b);
                                let Z = U - te;
                                for (; Z-- > 0;) this.ybase === 0 ? this.y < l - 1 ? (this.y++, this.lines.pop()) : (this.ybase++, this.ydisp++) : this.ybase < Math.min(this.lines.maxLength, this.lines.length + n) - l && (this.ybase === this.ydisp && this.ydisp++, this.ybase++);
                                this.savedY = Math.min(this.savedY + U, this.ybase + l - 1)
                            }
                            if (A.length > 0) {
                                const T = [],
                                    S = [];
                                for (let ye = 0; ye < this.lines.length; ye++) S.push(this.lines.get(ye));
                                const L = this.lines.length;
                                let z = L - 1,
                                    G = 0,
                                    K = A[G];
                                this.lines.length = Math.min(this.lines.maxLength, this.lines.length + n);
                                let U = 0;
                                for (let ye = Math.min(this.lines.maxLength - 1, L + n - 1); ye >= 0; ye--)
                                    if (K && K.start > z + U) {
                                        for (let Fe = K.newLines.length - 1; Fe >= 0; Fe--) this.lines.set(ye--, K.newLines[Fe]);
                                        ye++, T.push({
                                            index: z + 1,
                                            amount: K.newLines.length
                                        }), U += K.newLines.length, K = A[++G]
                                    } else this.lines.set(ye, S[z--]);
                                let te = 0;
                                for (let ye = T.length - 1; ye >= 0; ye--) T[ye].index += te, this.lines.onInsertEmitter.fire(T[ye]), te += T[ye].amount;
                                const fe = Math.max(0, L + n - this.lines.maxLength);
                                fe > 0 && this.lines.onTrimEmitter.fire(fe)
                            }
                        }
                        translateBufferLineToString(i, l, b = 0, A) {
                            const n = this.lines.get(i);
                            return n ? n.translateToString(l, b, A) : ""
                        }
                        getWrappedRangeForLine(i) {
                            let l = i,
                                b = i;
                            for (; l > 0 && this.lines.get(l).isWrapped;) l--;
                            for (; b + 1 < this.lines.length && this.lines.get(b + 1).isWrapped;) b++;
                            return {
                                first: l,
                                last: b
                            }
                        }
                        setupTabStops(i) {
                            for (i != null ? this.tabs[i] || (i = this.prevStop(i)) : (this.tabs = {}, i = 0); i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) this.tabs[i] = !0
                        }
                        prevStop(i) {
                            for (i == null && (i = this.x); !this.tabs[--i] && i > 0;);
                            return i >= this._cols ? this._cols - 1 : i < 0 ? 0 : i
                        }
                        nextStop(i) {
                            for (i == null && (i = this.x); !this.tabs[++i] && i < this._cols;);
                            return i >= this._cols ? this._cols - 1 : i < 0 ? 0 : i
                        }
                        clearMarkers(i) {
                            this._isClearing = !0;
                            for (let l = 0; l < this.markers.length; l++) this.markers[l].line === i && (this.markers[l].dispose(), this.markers.splice(l--, 1));
                            this._isClearing = !1
                        }
                        clearAllMarkers() {
                            this._isClearing = !0;
                            for (let i = 0; i < this.markers.length; i++) this.markers[i].dispose(), this.markers.splice(i--, 1);
                            this._isClearing = !1
                        }
                        addMarker(i) {
                            const l = new a.Marker(i);
                            return this.markers.push(l), l.register(this.lines.onTrim(b => {
                                l.line -= b, l.line < 0 && l.dispose()
                            })), l.register(this.lines.onInsert(b => {
                                l.line >= b.index && (l.line += b.amount)
                            })), l.register(this.lines.onDelete(b => {
                                l.line >= b.index && l.line < b.index + b.amount && l.dispose(), l.line > b.index && (l.line -= b.amount)
                            })), l.register(l.onDispose(() => this._removeMarker(l))), l
                        }
                        _removeMarker(i) {
                            this._isClearing || this.markers.splice(this.markers.indexOf(i), 1)
                        }
                    }
                },
                8437: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.BufferLine = r.DEFAULT_ATTR_DATA = void 0;
                    const c = s(3734),
                        g = s(511),
                        u = s(643),
                        _ = s(482);
                    r.DEFAULT_ATTR_DATA = Object.freeze(new c.AttributeData);
                    let v = 0;
                    class D {
                        constructor(a, o, i = !1) {
                            this.isWrapped = i, this._combined = {}, this._extendedAttrs = {}, this._data = new Uint32Array(3 * a);
                            const l = o || g.CellData.fromCharData([0, u.NULL_CELL_CHAR, u.NULL_CELL_WIDTH, u.NULL_CELL_CODE]);
                            for (let b = 0; b < a; ++b) this.setCell(b, l);
                            this.length = a
                        }
                        get(a) {
                            const o = this._data[3 * a + 0],
                                i = 2097151 & o;
                            return [this._data[3 * a + 1], 2097152 & o ? this._combined[a] : i ? (0, _.stringFromCodePoint)(i) : "", o >> 22, 2097152 & o ? this._combined[a].charCodeAt(this._combined[a].length - 1) : i]
                        }
                        set(a, o) {
                            this._data[3 * a + 1] = o[u.CHAR_DATA_ATTR_INDEX], o[u.CHAR_DATA_CHAR_INDEX].length > 1 ? (this._combined[a] = o[1], this._data[3 * a + 0] = 2097152 | a | o[u.CHAR_DATA_WIDTH_INDEX] << 22) : this._data[3 * a + 0] = o[u.CHAR_DATA_CHAR_INDEX].charCodeAt(0) | o[u.CHAR_DATA_WIDTH_INDEX] << 22
                        }
                        getWidth(a) {
                            return this._data[3 * a + 0] >> 22
                        }
                        hasWidth(a) {
                            return 12582912 & this._data[3 * a + 0]
                        }
                        getFg(a) {
                            return this._data[3 * a + 1]
                        }
                        getBg(a) {
                            return this._data[3 * a + 2]
                        }
                        hasContent(a) {
                            return 4194303 & this._data[3 * a + 0]
                        }
                        getCodePoint(a) {
                            const o = this._data[3 * a + 0];
                            return 2097152 & o ? this._combined[a].charCodeAt(this._combined[a].length - 1) : 2097151 & o
                        }
                        isCombined(a) {
                            return 2097152 & this._data[3 * a + 0]
                        }
                        getString(a) {
                            const o = this._data[3 * a + 0];
                            return 2097152 & o ? this._combined[a] : 2097151 & o ? (0, _.stringFromCodePoint)(2097151 & o) : ""
                        }
                        isProtected(a) {
                            return 536870912 & this._data[3 * a + 2]
                        }
                        loadCell(a, o) {
                            return v = 3 * a, o.content = this._data[v + 0], o.fg = this._data[v + 1], o.bg = this._data[v + 2], 2097152 & o.content && (o.combinedData = this._combined[a]), 268435456 & o.bg && (o.extended = this._extendedAttrs[a]), o
                        }
                        setCell(a, o) {
                            2097152 & o.content && (this._combined[a] = o.combinedData), 268435456 & o.bg && (this._extendedAttrs[a] = o.extended), this._data[3 * a + 0] = o.content, this._data[3 * a + 1] = o.fg, this._data[3 * a + 2] = o.bg
                        }
                        setCellFromCodepoint(a, o, i, l) {
                            268435456 & l.bg && (this._extendedAttrs[a] = l.extended), this._data[3 * a + 0] = o | i << 22, this._data[3 * a + 1] = l.fg, this._data[3 * a + 2] = l.bg
                        }
                        addCodepointToCell(a, o, i) {
                            let l = this._data[3 * a + 0];
                            2097152 & l ? this._combined[a] += (0, _.stringFromCodePoint)(o) : 2097151 & l ? (this._combined[a] = (0, _.stringFromCodePoint)(2097151 & l) + (0, _.stringFromCodePoint)(o), l &= -2097152, l |= 2097152) : l = o | 4194304, i && (l &= -12582913, l |= i << 22), this._data[3 * a + 0] = l
                        }
                        insertCells(a, o, i) {
                            if ((a %= this.length) && this.getWidth(a - 1) === 2 && this.setCellFromCodepoint(a - 1, 0, 1, i), o < this.length - a) {
                                const l = new g.CellData;
                                for (let b = this.length - a - o - 1; b >= 0; --b) this.setCell(a + o + b, this.loadCell(a + b, l));
                                for (let b = 0; b < o; ++b) this.setCell(a + b, i)
                            } else
                                for (let l = a; l < this.length; ++l) this.setCell(l, i);
                            this.getWidth(this.length - 1) === 2 && this.setCellFromCodepoint(this.length - 1, 0, 1, i)
                        }
                        deleteCells(a, o, i) {
                            if (a %= this.length, o < this.length - a) {
                                const l = new g.CellData;
                                for (let b = 0; b < this.length - a - o; ++b) this.setCell(a + b, this.loadCell(a + o + b, l));
                                for (let b = this.length - o; b < this.length; ++b) this.setCell(b, i)
                            } else
                                for (let l = a; l < this.length; ++l) this.setCell(l, i);
                            a && this.getWidth(a - 1) === 2 && this.setCellFromCodepoint(a - 1, 0, 1, i), this.getWidth(a) !== 0 || this.hasContent(a) || this.setCellFromCodepoint(a, 0, 1, i)
                        }
                        replaceCells(a, o, i, l = !1) {
                            if (l)
                                for (a && this.getWidth(a - 1) === 2 && !this.isProtected(a - 1) && this.setCellFromCodepoint(a - 1, 0, 1, i), o < this.length && this.getWidth(o - 1) === 2 && !this.isProtected(o) && this.setCellFromCodepoint(o, 0, 1, i); a < o && a < this.length;) this.isProtected(a) || this.setCell(a, i), a++;
                            else
                                for (a && this.getWidth(a - 1) === 2 && this.setCellFromCodepoint(a - 1, 0, 1, i), o < this.length && this.getWidth(o - 1) === 2 && this.setCellFromCodepoint(o, 0, 1, i); a < o && a < this.length;) this.setCell(a++, i)
                        }
                        resize(a, o) {
                            if (a === this.length) return 4 * this._data.length * 2 < this._data.buffer.byteLength;
                            const i = 3 * a;
                            if (a > this.length) {
                                if (this._data.buffer.byteLength >= 4 * i) this._data = new Uint32Array(this._data.buffer, 0, i);
                                else {
                                    const l = new Uint32Array(i);
                                    l.set(this._data), this._data = l
                                }
                                for (let l = this.length; l < a; ++l) this.setCell(l, o)
                            } else {
                                this._data = this._data.subarray(0, i);
                                const l = Object.keys(this._combined);
                                for (let A = 0; A < l.length; A++) {
                                    const n = parseInt(l[A], 10);
                                    n >= a && delete this._combined[n]
                                }
                                const b = Object.keys(this._extendedAttrs);
                                for (let A = 0; A < b.length; A++) {
                                    const n = parseInt(b[A], 10);
                                    n >= a && delete this._extendedAttrs[n]
                                }
                            }
                            return this.length = a, 4 * i * 2 < this._data.buffer.byteLength
                        }
                        cleanupMemory() {
                            if (4 * this._data.length * 2 < this._data.buffer.byteLength) {
                                const a = new Uint32Array(this._data.length);
                                return a.set(this._data), this._data = a, 1
                            }
                            return 0
                        }
                        fill(a, o = !1) {
                            if (o)
                                for (let i = 0; i < this.length; ++i) this.isProtected(i) || this.setCell(i, a);
                            else {
                                this._combined = {}, this._extendedAttrs = {};
                                for (let i = 0; i < this.length; ++i) this.setCell(i, a)
                            }
                        }
                        copyFrom(a) {
                            this.length !== a.length ? this._data = new Uint32Array(a._data) : this._data.set(a._data), this.length = a.length, this._combined = {};
                            for (const o in a._combined) this._combined[o] = a._combined[o];
                            this._extendedAttrs = {};
                            for (const o in a._extendedAttrs) this._extendedAttrs[o] = a._extendedAttrs[o];
                            this.isWrapped = a.isWrapped
                        }
                        clone() {
                            const a = new D(0);
                            a._data = new Uint32Array(this._data), a.length = this.length;
                            for (const o in this._combined) a._combined[o] = this._combined[o];
                            for (const o in this._extendedAttrs) a._extendedAttrs[o] = this._extendedAttrs[o];
                            return a.isWrapped = this.isWrapped, a
                        }
                        getTrimmedLength() {
                            for (let a = this.length - 1; a >= 0; --a)
                                if (4194303 & this._data[3 * a + 0]) return a + (this._data[3 * a + 0] >> 22);
                            return 0
                        }
                        getNoBgTrimmedLength() {
                            for (let a = this.length - 1; a >= 0; --a)
                                if (4194303 & this._data[3 * a + 0] || 50331648 & this._data[3 * a + 2]) return a + (this._data[3 * a + 0] >> 22);
                            return 0
                        }
                        copyCellsFrom(a, o, i, l, b) {
                            const A = a._data;
                            if (b)
                                for (let T = l - 1; T >= 0; T--) {
                                    for (let S = 0; S < 3; S++) this._data[3 * (i + T) + S] = A[3 * (o + T) + S];
                                    268435456 & A[3 * (o + T) + 2] && (this._extendedAttrs[i + T] = a._extendedAttrs[o + T])
                                } else
                                    for (let T = 0; T < l; T++) {
                                        for (let S = 0; S < 3; S++) this._data[3 * (i + T) + S] = A[3 * (o + T) + S];
                                        268435456 & A[3 * (o + T) + 2] && (this._extendedAttrs[i + T] = a._extendedAttrs[o + T])
                                    }
                            const n = Object.keys(a._combined);
                            for (let T = 0; T < n.length; T++) {
                                const S = parseInt(n[T], 10);
                                S >= o && (this._combined[S - o + i] = a._combined[S])
                            }
                        }
                        translateToString(a, o, i, l) {
                            o = o ?? 0, i = i ?? this.length, a && (i = Math.min(i, this.getTrimmedLength())), l && (l.length = 0);
                            let b = "";
                            for (; o < i;) {
                                const A = this._data[3 * o + 0],
                                    n = 2097151 & A,
                                    T = 2097152 & A ? this._combined[o] : n ? (0, _.stringFromCodePoint)(n) : u.WHITESPACE_CELL_CHAR;
                                if (b += T, l)
                                    for (let S = 0; S < T.length; ++S) l.push(o);
                                o += A >> 22 || 1
                            }
                            return l && l.push(o), b
                        }
                    }
                    r.BufferLine = D
                },
                4841: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.getRangeLength = void 0, r.getRangeLength = function(s, c) {
                        if (s.start.y > s.end.y) throw new Error(`Buffer range end (${s.end.x}, ${s.end.y}) cannot be before start (${s.start.x}, ${s.start.y})`);
                        return c * (s.end.y - s.start.y) + (s.end.x - s.start.x + 1)
                    }
                },
                4634: (C, r) => {
                    function s(c, g, u) {
                        if (g === c.length - 1) return c[g].getTrimmedLength();
                        const _ = !c[g].hasContent(u - 1) && c[g].getWidth(u - 1) === 1,
                            v = c[g + 1].getWidth(0) === 2;
                        return _ && v ? u - 1 : u
                    }
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.getWrappedLineTrimmedLength = r.reflowSmallerGetNewLineLengths = r.reflowLargerApplyNewLayout = r.reflowLargerCreateNewLayout = r.reflowLargerGetLinesToRemove = void 0, r.reflowLargerGetLinesToRemove = function(c, g, u, _, v) {
                        const D = [];
                        for (let d = 0; d < c.length - 1; d++) {
                            let a = d,
                                o = c.get(++a);
                            if (!o.isWrapped) continue;
                            const i = [c.get(d)];
                            for (; a < c.length && o.isWrapped;) i.push(o), o = c.get(++a);
                            if (_ >= d && _ < a) {
                                d += i.length - 1;
                                continue
                            }
                            let l = 0,
                                b = s(i, l, g),
                                A = 1,
                                n = 0;
                            for (; A < i.length;) {
                                const S = s(i, A, g),
                                    L = S - n,
                                    z = u - b,
                                    G = Math.min(L, z);
                                i[l].copyCellsFrom(i[A], n, b, G, !1), b += G, b === u && (l++, b = 0), n += G, n === S && (A++, n = 0), b === 0 && l !== 0 && i[l - 1].getWidth(u - 1) === 2 && (i[l].copyCellsFrom(i[l - 1], u - 1, b++, 1, !1), i[l - 1].setCell(u - 1, v))
                            }
                            i[l].replaceCells(b, u, v);
                            let T = 0;
                            for (let S = i.length - 1; S > 0 && (S > l || i[S].getTrimmedLength() === 0); S--) T++;
                            T > 0 && (D.push(d + i.length - T), D.push(T)), d += i.length - 1
                        }
                        return D
                    }, r.reflowLargerCreateNewLayout = function(c, g) {
                        const u = [];
                        let _ = 0,
                            v = g[_],
                            D = 0;
                        for (let d = 0; d < c.length; d++)
                            if (v === d) {
                                const a = g[++_];
                                c.onDeleteEmitter.fire({
                                    index: d - D,
                                    amount: a
                                }), d += a - 1, D += a, v = g[++_]
                            } else u.push(d);
                        return {
                            layout: u,
                            countRemoved: D
                        }
                    }, r.reflowLargerApplyNewLayout = function(c, g) {
                        const u = [];
                        for (let _ = 0; _ < g.length; _++) u.push(c.get(g[_]));
                        for (let _ = 0; _ < u.length; _++) c.set(_, u[_]);
                        c.length = g.length
                    }, r.reflowSmallerGetNewLineLengths = function(c, g, u) {
                        const _ = [],
                            v = c.map((o, i) => s(c, i, g)).reduce((o, i) => o + i);
                        let D = 0,
                            d = 0,
                            a = 0;
                        for (; a < v;) {
                            if (v - a < u) {
                                _.push(v - a);
                                break
                            }
                            D += u;
                            const o = s(c, d, g);
                            D > o && (D -= o, d++);
                            const i = c[d].getWidth(D - 1) === 2;
                            i && D--;
                            const l = i ? u - 1 : u;
                            _.push(l), a += l
                        }
                        return _
                    }, r.getWrappedLineTrimmedLength = s
                },
                5295: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.BufferSet = void 0;
                    const c = s(8460),
                        g = s(844),
                        u = s(9092);
                    class _ extends g.Disposable {
                        constructor(D, d) {
                            super(), this._optionsService = D, this._bufferService = d, this._onBufferActivate = this.register(new c.EventEmitter), this.onBufferActivate = this._onBufferActivate.event, this.reset(), this.register(this._optionsService.onSpecificOptionChange("scrollback", () => this.resize(this._bufferService.cols, this._bufferService.rows))), this.register(this._optionsService.onSpecificOptionChange("tabStopWidth", () => this.setupTabStops()))
                        }
                        reset() {
                            this._normal = new u.Buffer(!0, this._optionsService, this._bufferService), this._normal.fillViewportRows(), this._alt = new u.Buffer(!1, this._optionsService, this._bufferService), this._activeBuffer = this._normal, this._onBufferActivate.fire({
                                activeBuffer: this._normal,
                                inactiveBuffer: this._alt
                            }), this.setupTabStops()
                        }
                        get alt() {
                            return this._alt
                        }
                        get active() {
                            return this._activeBuffer
                        }
                        get normal() {
                            return this._normal
                        }
                        activateNormalBuffer() {
                            this._activeBuffer !== this._normal && (this._normal.x = this._alt.x, this._normal.y = this._alt.y, this._alt.clearAllMarkers(), this._alt.clear(), this._activeBuffer = this._normal, this._onBufferActivate.fire({
                                activeBuffer: this._normal,
                                inactiveBuffer: this._alt
                            }))
                        }
                        activateAltBuffer(D) {
                            this._activeBuffer !== this._alt && (this._alt.fillViewportRows(D), this._alt.x = this._normal.x, this._alt.y = this._normal.y, this._activeBuffer = this._alt, this._onBufferActivate.fire({
                                activeBuffer: this._alt,
                                inactiveBuffer: this._normal
                            }))
                        }
                        resize(D, d) {
                            this._normal.resize(D, d), this._alt.resize(D, d), this.setupTabStops(D)
                        }
                        setupTabStops(D) {
                            this._normal.setupTabStops(D), this._alt.setupTabStops(D)
                        }
                    }
                    r.BufferSet = _
                },
                511: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.CellData = void 0;
                    const c = s(482),
                        g = s(643),
                        u = s(3734);
                    class _ extends u.AttributeData {
                        constructor() {
                            super(...arguments), this.content = 0, this.fg = 0, this.bg = 0, this.extended = new u.ExtendedAttrs, this.combinedData = ""
                        }
                        static fromCharData(D) {
                            const d = new _;
                            return d.setFromCharData(D), d
                        }
                        isCombined() {
                            return 2097152 & this.content
                        }
                        getWidth() {
                            return this.content >> 22
                        }
                        getChars() {
                            return 2097152 & this.content ? this.combinedData : 2097151 & this.content ? (0, c.stringFromCodePoint)(2097151 & this.content) : ""
                        }
                        getCode() {
                            return this.isCombined() ? this.combinedData.charCodeAt(this.combinedData.length - 1) : 2097151 & this.content
                        }
                        setFromCharData(D) {
                            this.fg = D[g.CHAR_DATA_ATTR_INDEX], this.bg = 0;
                            let d = !1;
                            if (D[g.CHAR_DATA_CHAR_INDEX].length > 2) d = !0;
                            else if (D[g.CHAR_DATA_CHAR_INDEX].length === 2) {
                                const a = D[g.CHAR_DATA_CHAR_INDEX].charCodeAt(0);
                                if (55296 <= a && a <= 56319) {
                                    const o = D[g.CHAR_DATA_CHAR_INDEX].charCodeAt(1);
                                    56320 <= o && o <= 57343 ? this.content = 1024 * (a - 55296) + o - 56320 + 65536 | D[g.CHAR_DATA_WIDTH_INDEX] << 22 : d = !0
                                } else d = !0
                            } else this.content = D[g.CHAR_DATA_CHAR_INDEX].charCodeAt(0) | D[g.CHAR_DATA_WIDTH_INDEX] << 22;
                            d && (this.combinedData = D[g.CHAR_DATA_CHAR_INDEX], this.content = 2097152 | D[g.CHAR_DATA_WIDTH_INDEX] << 22)
                        }
                        getAsCharData() {
                            return [this.fg, this.getChars(), this.getWidth(), this.getCode()]
                        }
                    }
                    r.CellData = _
                },
                643: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.WHITESPACE_CELL_CODE = r.WHITESPACE_CELL_WIDTH = r.WHITESPACE_CELL_CHAR = r.NULL_CELL_CODE = r.NULL_CELL_WIDTH = r.NULL_CELL_CHAR = r.CHAR_DATA_CODE_INDEX = r.CHAR_DATA_WIDTH_INDEX = r.CHAR_DATA_CHAR_INDEX = r.CHAR_DATA_ATTR_INDEX = r.DEFAULT_EXT = r.DEFAULT_ATTR = r.DEFAULT_COLOR = void 0, r.DEFAULT_COLOR = 0, r.DEFAULT_ATTR = 256 | r.DEFAULT_COLOR << 9, r.DEFAULT_EXT = 0, r.CHAR_DATA_ATTR_INDEX = 0, r.CHAR_DATA_CHAR_INDEX = 1, r.CHAR_DATA_WIDTH_INDEX = 2, r.CHAR_DATA_CODE_INDEX = 3, r.NULL_CELL_CHAR = "", r.NULL_CELL_WIDTH = 1, r.NULL_CELL_CODE = 0, r.WHITESPACE_CELL_CHAR = " ", r.WHITESPACE_CELL_WIDTH = 1, r.WHITESPACE_CELL_CODE = 32
                },
                4863: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.Marker = void 0;
                    const c = s(8460),
                        g = s(844);
                    class u {
                        get id() {
                            return this._id
                        }
                        constructor(v) {
                            this.line = v, this.isDisposed = !1, this._disposables = [], this._id = u._nextId++, this._onDispose = this.register(new c.EventEmitter), this.onDispose = this._onDispose.event
                        }
                        dispose() {
                            this.isDisposed || (this.isDisposed = !0, this.line = -1, this._onDispose.fire(), (0, g.disposeArray)(this._disposables), this._disposables.length = 0)
                        }
                        register(v) {
                            return this._disposables.push(v), v
                        }
                    }
                    r.Marker = u, u._nextId = 1
                },
                7116: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.DEFAULT_CHARSET = r.CHARSETS = void 0, r.CHARSETS = {}, r.DEFAULT_CHARSET = r.CHARSETS.B, r.CHARSETS[0] = {
                        "`": "◆",
                        a: "▒",
                        b: "␉",
                        c: "␌",
                        d: "␍",
                        e: "␊",
                        f: "°",
                        g: "±",
                        h: "␤",
                        i: "␋",
                        j: "┘",
                        k: "┐",
                        l: "┌",
                        m: "└",
                        n: "┼",
                        o: "⎺",
                        p: "⎻",
                        q: "─",
                        r: "⎼",
                        s: "⎽",
                        t: "├",
                        u: "┤",
                        v: "┴",
                        w: "┬",
                        x: "│",
                        y: "≤",
                        z: "≥",
                        "{": "π",
                        "|": "≠",
                        "}": "£",
                        "~": "·"
                    }, r.CHARSETS.A = {
                        "#": "£"
                    }, r.CHARSETS.B = void 0, r.CHARSETS[4] = {
                        "#": "£",
                        "@": "¾",
                        "[": "ij",
                        "\\": "½",
                        "]": "|",
                        "{": "¨",
                        "|": "f",
                        "}": "¼",
                        "~": "´"
                    }, r.CHARSETS.C = r.CHARSETS[5] = {
                        "[": "Ä",
                        "\\": "Ö",
                        "]": "Å",
                        "^": "Ü",
                        "`": "é",
                        "{": "ä",
                        "|": "ö",
                        "}": "å",
                        "~": "ü"
                    }, r.CHARSETS.R = {
                        "#": "£",
                        "@": "à",
                        "[": "°",
                        "\\": "ç",
                        "]": "§",
                        "{": "é",
                        "|": "ù",
                        "}": "è",
                        "~": "¨"
                    }, r.CHARSETS.Q = {
                        "@": "à",
                        "[": "â",
                        "\\": "ç",
                        "]": "ê",
                        "^": "î",
                        "`": "ô",
                        "{": "é",
                        "|": "ù",
                        "}": "è",
                        "~": "û"
                    }, r.CHARSETS.K = {
                        "@": "§",
                        "[": "Ä",
                        "\\": "Ö",
                        "]": "Ü",
                        "{": "ä",
                        "|": "ö",
                        "}": "ü",
                        "~": "ß"
                    }, r.CHARSETS.Y = {
                        "#": "£",
                        "@": "§",
                        "[": "°",
                        "\\": "ç",
                        "]": "é",
                        "`": "ù",
                        "{": "à",
                        "|": "ò",
                        "}": "è",
                        "~": "ì"
                    }, r.CHARSETS.E = r.CHARSETS[6] = {
                        "@": "Ä",
                        "[": "Æ",
                        "\\": "Ø",
                        "]": "Å",
                        "^": "Ü",
                        "`": "ä",
                        "{": "æ",
                        "|": "ø",
                        "}": "å",
                        "~": "ü"
                    }, r.CHARSETS.Z = {
                        "#": "£",
                        "@": "§",
                        "[": "¡",
                        "\\": "Ñ",
                        "]": "¿",
                        "{": "°",
                        "|": "ñ",
                        "}": "ç"
                    }, r.CHARSETS.H = r.CHARSETS[7] = {
                        "@": "É",
                        "[": "Ä",
                        "\\": "Ö",
                        "]": "Å",
                        "^": "Ü",
                        "`": "é",
                        "{": "ä",
                        "|": "ö",
                        "}": "å",
                        "~": "ü"
                    }, r.CHARSETS["="] = {
                        "#": "ù",
                        "@": "à",
                        "[": "é",
                        "\\": "ç",
                        "]": "ê",
                        "^": "î",
                        _: "è",
                        "`": "ô",
                        "{": "ä",
                        "|": "ö",
                        "}": "ü",
                        "~": "û"
                    }
                },
                2584: (C, r) => {
                    var s, c, g;
                    Object.defineProperty(r, "__esModule", {
                            value: !0
                        }), r.C1_ESCAPED = r.C1 = r.C0 = void 0,
                        function(u) {
                            u.NUL = "\0", u.SOH = "", u.STX = "", u.ETX = "", u.EOT = "", u.ENQ = "", u.ACK = "", u.BEL = "\x07", u.BS = "\b", u.HT = "	", u.LF = `
`, u.VT = "\v", u.FF = "\f", u.CR = "\r", u.SO = "", u.SI = "", u.DLE = "", u.DC1 = "", u.DC2 = "", u.DC3 = "", u.DC4 = "", u.NAK = "", u.SYN = "", u.ETB = "", u.CAN = "", u.EM = "", u.SUB = "", u.ESC = "\x1B", u.FS = "", u.GS = "", u.RS = "", u.US = "", u.SP = " ", u.DEL = ""
                        }(s || (r.C0 = s = {})),
                        function(u) {
                            u.PAD = "", u.HOP = "", u.BPH = "", u.NBH = "", u.IND = "", u.NEL = "", u.SSA = "", u.ESA = "", u.HTS = "", u.HTJ = "", u.VTS = "", u.PLD = "", u.PLU = "", u.RI = "", u.SS2 = "", u.SS3 = "", u.DCS = "", u.PU1 = "", u.PU2 = "", u.STS = "", u.CCH = "", u.MW = "", u.SPA = "", u.EPA = "", u.SOS = "", u.SGCI = "", u.SCI = "", u.CSI = "", u.ST = "", u.OSC = "", u.PM = "", u.APC = ""
                        }(c || (r.C1 = c = {})),
                        function(u) {
                            u.ST = `${s.ESC}\\`
                        }(g || (r.C1_ESCAPED = g = {}))
                },
                7399: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.evaluateKeyboardEvent = void 0;
                    const c = s(2584),
                        g = {
                            48: ["0", ")"],
                            49: ["1", "!"],
                            50: ["2", "@"],
                            51: ["3", "#"],
                            52: ["4", "$"],
                            53: ["5", "%"],
                            54: ["6", "^"],
                            55: ["7", "&"],
                            56: ["8", "*"],
                            57: ["9", "("],
                            186: [";", ":"],
                            187: ["=", "+"],
                            188: [",", "<"],
                            189: ["-", "_"],
                            190: [".", ">"],
                            191: ["/", "?"],
                            192: ["`", "~"],
                            219: ["[", "{"],
                            220: ["\\", "|"],
                            221: ["]", "}"],
                            222: ["'", '"']
                        };
                    r.evaluateKeyboardEvent = function(u, _, v, D) {
                        const d = {
                                type: 0,
                                cancel: !1,
                                key: void 0
                            },
                            a = (u.shiftKey ? 1 : 0) | (u.altKey ? 2 : 0) | (u.ctrlKey ? 4 : 0) | (u.metaKey ? 8 : 0);
                        switch (u.keyCode) {
                            case 0:
                                u.key === "UIKeyInputUpArrow" ? d.key = _ ? c.C0.ESC + "OA" : c.C0.ESC + "[A" : u.key === "UIKeyInputLeftArrow" ? d.key = _ ? c.C0.ESC + "OD" : c.C0.ESC + "[D" : u.key === "UIKeyInputRightArrow" ? d.key = _ ? c.C0.ESC + "OC" : c.C0.ESC + "[C" : u.key === "UIKeyInputDownArrow" && (d.key = _ ? c.C0.ESC + "OB" : c.C0.ESC + "[B");
                                break;
                            case 8:
                                d.key = u.ctrlKey ? "\b" : c.C0.DEL, u.altKey && (d.key = c.C0.ESC + d.key);
                                break;
                            case 9:
                                if (u.shiftKey) {
                                    d.key = c.C0.ESC + "[Z";
                                    break
                                }
                                d.key = c.C0.HT, d.cancel = !0;
                                break;
                            case 13:
                                d.key = u.altKey ? c.C0.ESC + c.C0.CR : c.C0.CR, d.cancel = !0;
                                break;
                            case 27:
                                d.key = c.C0.ESC, u.altKey && (d.key = c.C0.ESC + c.C0.ESC), d.cancel = !0;
                                break;
                            case 37:
                                if (u.metaKey) break;
                                a ? (d.key = c.C0.ESC + "[1;" + (a + 1) + "D", d.key === c.C0.ESC + "[1;3D" && (d.key = c.C0.ESC + (v ? "b" : "[1;5D"))) : d.key = _ ? c.C0.ESC + "OD" : c.C0.ESC + "[D";
                                break;
                            case 39:
                                if (u.metaKey) break;
                                a ? (d.key = c.C0.ESC + "[1;" + (a + 1) + "C", d.key === c.C0.ESC + "[1;3C" && (d.key = c.C0.ESC + (v ? "f" : "[1;5C"))) : d.key = _ ? c.C0.ESC + "OC" : c.C0.ESC + "[C";
                                break;
                            case 38:
                                if (u.metaKey) break;
                                a ? (d.key = c.C0.ESC + "[1;" + (a + 1) + "A", v || d.key !== c.C0.ESC + "[1;3A" || (d.key = c.C0.ESC + "[1;5A")) : d.key = _ ? c.C0.ESC + "OA" : c.C0.ESC + "[A";
                                break;
                            case 40:
                                if (u.metaKey) break;
                                a ? (d.key = c.C0.ESC + "[1;" + (a + 1) + "B", v || d.key !== c.C0.ESC + "[1;3B" || (d.key = c.C0.ESC + "[1;5B")) : d.key = _ ? c.C0.ESC + "OB" : c.C0.ESC + "[B";
                                break;
                            case 45:
                                u.shiftKey || u.ctrlKey || (d.key = c.C0.ESC + "[2~");
                                break;
                            case 46:
                                d.key = a ? c.C0.ESC + "[3;" + (a + 1) + "~" : c.C0.ESC + "[3~";
                                break;
                            case 36:
                                d.key = a ? c.C0.ESC + "[1;" + (a + 1) + "H" : _ ? c.C0.ESC + "OH" : c.C0.ESC + "[H";
                                break;
                            case 35:
                                d.key = a ? c.C0.ESC + "[1;" + (a + 1) + "F" : _ ? c.C0.ESC + "OF" : c.C0.ESC + "[F";
                                break;
                            case 33:
                                u.shiftKey ? d.type = 2 : u.ctrlKey ? d.key = c.C0.ESC + "[5;" + (a + 1) + "~" : d.key = c.C0.ESC + "[5~";
                                break;
                            case 34:
                                u.shiftKey ? d.type = 3 : u.ctrlKey ? d.key = c.C0.ESC + "[6;" + (a + 1) + "~" : d.key = c.C0.ESC + "[6~";
                                break;
                            case 112:
                                d.key = a ? c.C0.ESC + "[1;" + (a + 1) + "P" : c.C0.ESC + "OP";
                                break;
                            case 113:
                                d.key = a ? c.C0.ESC + "[1;" + (a + 1) + "Q" : c.C0.ESC + "OQ";
                                break;
                            case 114:
                                d.key = a ? c.C0.ESC + "[1;" + (a + 1) + "R" : c.C0.ESC + "OR";
                                break;
                            case 115:
                                d.key = a ? c.C0.ESC + "[1;" + (a + 1) + "S" : c.C0.ESC + "OS";
                                break;
                            case 116:
                                d.key = a ? c.C0.ESC + "[15;" + (a + 1) + "~" : c.C0.ESC + "[15~";
                                break;
                            case 117:
                                d.key = a ? c.C0.ESC + "[17;" + (a + 1) + "~" : c.C0.ESC + "[17~";
                                break;
                            case 118:
                                d.key = a ? c.C0.ESC + "[18;" + (a + 1) + "~" : c.C0.ESC + "[18~";
                                break;
                            case 119:
                                d.key = a ? c.C0.ESC + "[19;" + (a + 1) + "~" : c.C0.ESC + "[19~";
                                break;
                            case 120:
                                d.key = a ? c.C0.ESC + "[20;" + (a + 1) + "~" : c.C0.ESC + "[20~";
                                break;
                            case 121:
                                d.key = a ? c.C0.ESC + "[21;" + (a + 1) + "~" : c.C0.ESC + "[21~";
                                break;
                            case 122:
                                d.key = a ? c.C0.ESC + "[23;" + (a + 1) + "~" : c.C0.ESC + "[23~";
                                break;
                            case 123:
                                d.key = a ? c.C0.ESC + "[24;" + (a + 1) + "~" : c.C0.ESC + "[24~";
                                break;
                            default:
                                if (!u.ctrlKey || u.shiftKey || u.altKey || u.metaKey)
                                    if (v && !D || !u.altKey || u.metaKey) !v || u.altKey || u.ctrlKey || u.shiftKey || !u.metaKey ? u.key && !u.ctrlKey && !u.altKey && !u.metaKey && u.keyCode >= 48 && u.key.length === 1 ? d.key = u.key : u.key && u.ctrlKey && (u.key === "_" && (d.key = c.C0.US), u.key === "@" && (d.key = c.C0.NUL)) : u.keyCode === 65 && (d.type = 1);
                                    else {
                                        const o = g[u.keyCode],
                                            i = o == null ? void 0 : o[u.shiftKey ? 1 : 0];
                                        if (i) d.key = c.C0.ESC + i;
                                        else if (u.keyCode >= 65 && u.keyCode <= 90) {
                                            const l = u.ctrlKey ? u.keyCode - 64 : u.keyCode + 32;
                                            let b = String.fromCharCode(l);
                                            u.shiftKey && (b = b.toUpperCase()), d.key = c.C0.ESC + b
                                        } else if (u.keyCode === 32) d.key = c.C0.ESC + (u.ctrlKey ? c.C0.NUL : " ");
                                        else if (u.key === "Dead" && u.code.startsWith("Key")) {
                                            let l = u.code.slice(3, 4);
                                            u.shiftKey || (l = l.toLowerCase()), d.key = c.C0.ESC + l, d.cancel = !0
                                        }
                                    }
                                else u.keyCode >= 65 && u.keyCode <= 90 ? d.key = String.fromCharCode(u.keyCode - 64) : u.keyCode === 32 ? d.key = c.C0.NUL : u.keyCode >= 51 && u.keyCode <= 55 ? d.key = String.fromCharCode(u.keyCode - 51 + 27) : u.keyCode === 56 ? d.key = c.C0.DEL : u.keyCode === 219 ? d.key = c.C0.ESC : u.keyCode === 220 ? d.key = c.C0.FS : u.keyCode === 221 && (d.key = c.C0.GS)
                        }
                        return d
                    }
                },
                482: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.Utf8ToUtf32 = r.StringToUtf32 = r.utf32ToString = r.stringFromCodePoint = void 0, r.stringFromCodePoint = function(s) {
                        return s > 65535 ? (s -= 65536, String.fromCharCode(55296 + (s >> 10)) + String.fromCharCode(s % 1024 + 56320)) : String.fromCharCode(s)
                    }, r.utf32ToString = function(s, c = 0, g = s.length) {
                        let u = "";
                        for (let _ = c; _ < g; ++_) {
                            let v = s[_];
                            v > 65535 ? (v -= 65536, u += String.fromCharCode(55296 + (v >> 10)) + String.fromCharCode(v % 1024 + 56320)) : u += String.fromCharCode(v)
                        }
                        return u
                    }, r.StringToUtf32 = class {
                        constructor() {
                            this._interim = 0
                        }
                        clear() {
                            this._interim = 0
                        }
                        decode(s, c) {
                            const g = s.length;
                            if (!g) return 0;
                            let u = 0,
                                _ = 0;
                            if (this._interim) {
                                const v = s.charCodeAt(_++);
                                56320 <= v && v <= 57343 ? c[u++] = 1024 * (this._interim - 55296) + v - 56320 + 65536 : (c[u++] = this._interim, c[u++] = v), this._interim = 0
                            }
                            for (let v = _; v < g; ++v) {
                                const D = s.charCodeAt(v);
                                if (55296 <= D && D <= 56319) {
                                    if (++v >= g) return this._interim = D, u;
                                    const d = s.charCodeAt(v);
                                    56320 <= d && d <= 57343 ? c[u++] = 1024 * (D - 55296) + d - 56320 + 65536 : (c[u++] = D, c[u++] = d)
                                } else D !== 65279 && (c[u++] = D)
                            }
                            return u
                        }
                    }, r.Utf8ToUtf32 = class {
                        constructor() {
                            this.interim = new Uint8Array(3)
                        }
                        clear() {
                            this.interim.fill(0)
                        }
                        decode(s, c) {
                            const g = s.length;
                            if (!g) return 0;
                            let u, _, v, D, d = 0,
                                a = 0,
                                o = 0;
                            if (this.interim[0]) {
                                let b = !1,
                                    A = this.interim[0];
                                A &= (224 & A) == 192 ? 31 : (240 & A) == 224 ? 15 : 7;
                                let n, T = 0;
                                for (;
                                    (n = 63 & this.interim[++T]) && T < 4;) A <<= 6, A |= n;
                                const S = (224 & this.interim[0]) == 192 ? 2 : (240 & this.interim[0]) == 224 ? 3 : 4,
                                    L = S - T;
                                for (; o < L;) {
                                    if (o >= g) return 0;
                                    if (n = s[o++], (192 & n) != 128) {
                                        o--, b = !0;
                                        break
                                    }
                                    this.interim[T++] = n, A <<= 6, A |= 63 & n
                                }
                                b || (S === 2 ? A < 128 ? o-- : c[d++] = A : S === 3 ? A < 2048 || A >= 55296 && A <= 57343 || A === 65279 || (c[d++] = A) : A < 65536 || A > 1114111 || (c[d++] = A)), this.interim.fill(0)
                            }
                            const i = g - 4;
                            let l = o;
                            for (; l < g;) {
                                for (; !(!(l < i) || 128 & (u = s[l]) || 128 & (_ = s[l + 1]) || 128 & (v = s[l + 2]) || 128 & (D = s[l + 3]));) c[d++] = u, c[d++] = _, c[d++] = v, c[d++] = D, l += 4;
                                if (u = s[l++], u < 128) c[d++] = u;
                                else if ((224 & u) == 192) {
                                    if (l >= g) return this.interim[0] = u, d;
                                    if (_ = s[l++], (192 & _) != 128) {
                                        l--;
                                        continue
                                    }
                                    if (a = (31 & u) << 6 | 63 & _, a < 128) {
                                        l--;
                                        continue
                                    }
                                    c[d++] = a
                                } else if ((240 & u) == 224) {
                                    if (l >= g) return this.interim[0] = u, d;
                                    if (_ = s[l++], (192 & _) != 128) {
                                        l--;
                                        continue
                                    }
                                    if (l >= g) return this.interim[0] = u, this.interim[1] = _, d;
                                    if (v = s[l++], (192 & v) != 128) {
                                        l--;
                                        continue
                                    }
                                    if (a = (15 & u) << 12 | (63 & _) << 6 | 63 & v, a < 2048 || a >= 55296 && a <= 57343 || a === 65279) continue;
                                    c[d++] = a
                                } else if ((248 & u) == 240) {
                                    if (l >= g) return this.interim[0] = u, d;
                                    if (_ = s[l++], (192 & _) != 128) {
                                        l--;
                                        continue
                                    }
                                    if (l >= g) return this.interim[0] = u, this.interim[1] = _, d;
                                    if (v = s[l++], (192 & v) != 128) {
                                        l--;
                                        continue
                                    }
                                    if (l >= g) return this.interim[0] = u, this.interim[1] = _, this.interim[2] = v, d;
                                    if (D = s[l++], (192 & D) != 128) {
                                        l--;
                                        continue
                                    }
                                    if (a = (7 & u) << 18 | (63 & _) << 12 | (63 & v) << 6 | 63 & D, a < 65536 || a > 1114111) continue;
                                    c[d++] = a
                                }
                            }
                            return d
                        }
                    }
                },
                225: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.UnicodeV6 = void 0;
                    const c = s(1480),
                        g = [
                            [768, 879],
                            [1155, 1158],
                            [1160, 1161],
                            [1425, 1469],
                            [1471, 1471],
                            [1473, 1474],
                            [1476, 1477],
                            [1479, 1479],
                            [1536, 1539],
                            [1552, 1557],
                            [1611, 1630],
                            [1648, 1648],
                            [1750, 1764],
                            [1767, 1768],
                            [1770, 1773],
                            [1807, 1807],
                            [1809, 1809],
                            [1840, 1866],
                            [1958, 1968],
                            [2027, 2035],
                            [2305, 2306],
                            [2364, 2364],
                            [2369, 2376],
                            [2381, 2381],
                            [2385, 2388],
                            [2402, 2403],
                            [2433, 2433],
                            [2492, 2492],
                            [2497, 2500],
                            [2509, 2509],
                            [2530, 2531],
                            [2561, 2562],
                            [2620, 2620],
                            [2625, 2626],
                            [2631, 2632],
                            [2635, 2637],
                            [2672, 2673],
                            [2689, 2690],
                            [2748, 2748],
                            [2753, 2757],
                            [2759, 2760],
                            [2765, 2765],
                            [2786, 2787],
                            [2817, 2817],
                            [2876, 2876],
                            [2879, 2879],
                            [2881, 2883],
                            [2893, 2893],
                            [2902, 2902],
                            [2946, 2946],
                            [3008, 3008],
                            [3021, 3021],
                            [3134, 3136],
                            [3142, 3144],
                            [3146, 3149],
                            [3157, 3158],
                            [3260, 3260],
                            [3263, 3263],
                            [3270, 3270],
                            [3276, 3277],
                            [3298, 3299],
                            [3393, 3395],
                            [3405, 3405],
                            [3530, 3530],
                            [3538, 3540],
                            [3542, 3542],
                            [3633, 3633],
                            [3636, 3642],
                            [3655, 3662],
                            [3761, 3761],
                            [3764, 3769],
                            [3771, 3772],
                            [3784, 3789],
                            [3864, 3865],
                            [3893, 3893],
                            [3895, 3895],
                            [3897, 3897],
                            [3953, 3966],
                            [3968, 3972],
                            [3974, 3975],
                            [3984, 3991],
                            [3993, 4028],
                            [4038, 4038],
                            [4141, 4144],
                            [4146, 4146],
                            [4150, 4151],
                            [4153, 4153],
                            [4184, 4185],
                            [4448, 4607],
                            [4959, 4959],
                            [5906, 5908],
                            [5938, 5940],
                            [5970, 5971],
                            [6002, 6003],
                            [6068, 6069],
                            [6071, 6077],
                            [6086, 6086],
                            [6089, 6099],
                            [6109, 6109],
                            [6155, 6157],
                            [6313, 6313],
                            [6432, 6434],
                            [6439, 6440],
                            [6450, 6450],
                            [6457, 6459],
                            [6679, 6680],
                            [6912, 6915],
                            [6964, 6964],
                            [6966, 6970],
                            [6972, 6972],
                            [6978, 6978],
                            [7019, 7027],
                            [7616, 7626],
                            [7678, 7679],
                            [8203, 8207],
                            [8234, 8238],
                            [8288, 8291],
                            [8298, 8303],
                            [8400, 8431],
                            [12330, 12335],
                            [12441, 12442],
                            [43014, 43014],
                            [43019, 43019],
                            [43045, 43046],
                            [64286, 64286],
                            [65024, 65039],
                            [65056, 65059],
                            [65279, 65279],
                            [65529, 65531]
                        ],
                        u = [
                            [68097, 68099],
                            [68101, 68102],
                            [68108, 68111],
                            [68152, 68154],
                            [68159, 68159],
                            [119143, 119145],
                            [119155, 119170],
                            [119173, 119179],
                            [119210, 119213],
                            [119362, 119364],
                            [917505, 917505],
                            [917536, 917631],
                            [917760, 917999]
                        ];
                    let _;
                    r.UnicodeV6 = class {
                        constructor() {
                            if (this.version = "6", !_) {
                                _ = new Uint8Array(65536), _.fill(1), _[0] = 0, _.fill(0, 1, 32), _.fill(0, 127, 160), _.fill(2, 4352, 4448), _[9001] = 2, _[9002] = 2, _.fill(2, 11904, 42192), _[12351] = 1, _.fill(2, 44032, 55204), _.fill(2, 63744, 64256), _.fill(2, 65040, 65050), _.fill(2, 65072, 65136), _.fill(2, 65280, 65377), _.fill(2, 65504, 65511);
                                for (let v = 0; v < g.length; ++v) _.fill(0, g[v][0], g[v][1] + 1)
                            }
                        }
                        wcwidth(v) {
                            return v < 32 ? 0 : v < 127 ? 1 : v < 65536 ? _[v] : function(D, d) {
                                let a, o = 0,
                                    i = d.length - 1;
                                if (D < d[0][0] || D > d[i][1]) return !1;
                                for (; i >= o;)
                                    if (a = o + i >> 1, D > d[a][1]) o = a + 1;
                                    else {
                                        if (!(D < d[a][0])) return !0;
                                        i = a - 1
                                    } return !1
                            }(v, u) ? 0 : v >= 131072 && v <= 196605 || v >= 196608 && v <= 262141 ? 2 : 1
                        }
                        charProperties(v, D) {
                            let d = this.wcwidth(v),
                                a = d === 0 && D !== 0;
                            if (a) {
                                const o = c.UnicodeService.extractWidth(D);
                                o === 0 ? a = !1 : o > d && (d = o)
                            }
                            return c.UnicodeService.createPropertyValue(0, d, a)
                        }
                    }
                },
                5981: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.WriteBuffer = void 0;
                    const c = s(8460),
                        g = s(844);
                    class u extends g.Disposable {
                        constructor(v) {
                            super(), this._action = v, this._writeBuffer = [], this._callbacks = [], this._pendingData = 0, this._bufferOffset = 0, this._isSyncWriting = !1, this._syncCalls = 0, this._didUserInput = !1, this._onWriteParsed = this.register(new c.EventEmitter), this.onWriteParsed = this._onWriteParsed.event
                        }
                        handleUserInput() {
                            this._didUserInput = !0
                        }
                        writeSync(v, D) {
                            if (D !== void 0 && this._syncCalls > D) return void(this._syncCalls = 0);
                            if (this._pendingData += v.length, this._writeBuffer.push(v), this._callbacks.push(void 0), this._syncCalls++, this._isSyncWriting) return;
                            let d;
                            for (this._isSyncWriting = !0; d = this._writeBuffer.shift();) {
                                this._action(d);
                                const a = this._callbacks.shift();
                                a && a()
                            }
                            this._pendingData = 0, this._bufferOffset = 2147483647, this._isSyncWriting = !1, this._syncCalls = 0
                        }
                        write(v, D) {
                            if (this._pendingData > 5e7) throw new Error("write data discarded, use flow control to avoid losing data");
                            if (!this._writeBuffer.length) {
                                if (this._bufferOffset = 0, this._didUserInput) return this._didUserInput = !1, this._pendingData += v.length, this._writeBuffer.push(v), this._callbacks.push(D), void this._innerWrite();
                                setTimeout(() => this._innerWrite())
                            }
                            this._pendingData += v.length, this._writeBuffer.push(v), this._callbacks.push(D)
                        }
                        _innerWrite(v = 0, D = !0) {
                            const d = v || Date.now();
                            for (; this._writeBuffer.length > this._bufferOffset;) {
                                const a = this._writeBuffer[this._bufferOffset],
                                    o = this._action(a, D);
                                if (o) {
                                    const l = b => Date.now() - d >= 12 ? setTimeout(() => this._innerWrite(0, b)) : this._innerWrite(d, b);
                                    return void o.catch(b => (queueMicrotask(() => {
                                        throw b
                                    }), Promise.resolve(!1))).then(l)
                                }
                                const i = this._callbacks[this._bufferOffset];
                                if (i && i(), this._bufferOffset++, this._pendingData -= a.length, Date.now() - d >= 12) break
                            }
                            this._writeBuffer.length > this._bufferOffset ? (this._bufferOffset > 50 && (this._writeBuffer = this._writeBuffer.slice(this._bufferOffset), this._callbacks = this._callbacks.slice(this._bufferOffset), this._bufferOffset = 0), setTimeout(() => this._innerWrite())) : (this._writeBuffer.length = 0, this._callbacks.length = 0, this._pendingData = 0, this._bufferOffset = 0), this._onWriteParsed.fire()
                        }
                    }
                    r.WriteBuffer = u
                },
                5941: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.toRgbString = r.parseColor = void 0;
                    const s = /^([\da-f])\/([\da-f])\/([\da-f])$|^([\da-f]{2})\/([\da-f]{2})\/([\da-f]{2})$|^([\da-f]{3})\/([\da-f]{3})\/([\da-f]{3})$|^([\da-f]{4})\/([\da-f]{4})\/([\da-f]{4})$/,
                        c = /^[\da-f]+$/;

                    function g(u, _) {
                        const v = u.toString(16),
                            D = v.length < 2 ? "0" + v : v;
                        switch (_) {
                            case 4:
                                return v[0];
                            case 8:
                                return D;
                            case 12:
                                return (D + D).slice(0, 3);
                            default:
                                return D + D
                        }
                    }
                    r.parseColor = function(u) {
                        if (!u) return;
                        let _ = u.toLowerCase();
                        if (_.indexOf("rgb:") === 0) {
                            _ = _.slice(4);
                            const v = s.exec(_);
                            if (v) {
                                const D = v[1] ? 15 : v[4] ? 255 : v[7] ? 4095 : 65535;
                                return [Math.round(parseInt(v[1] || v[4] || v[7] || v[10], 16) / D * 255), Math.round(parseInt(v[2] || v[5] || v[8] || v[11], 16) / D * 255), Math.round(parseInt(v[3] || v[6] || v[9] || v[12], 16) / D * 255)]
                            }
                        } else if (_.indexOf("#") === 0 && (_ = _.slice(1), c.exec(_) && [3, 6, 9, 12].includes(_.length))) {
                            const v = _.length / 3,
                                D = [0, 0, 0];
                            for (let d = 0; d < 3; ++d) {
                                const a = parseInt(_.slice(v * d, v * d + v), 16);
                                D[d] = v === 1 ? a << 4 : v === 2 ? a : v === 3 ? a >> 4 : a >> 8
                            }
                            return D
                        }
                    }, r.toRgbString = function(u, _ = 16) {
                        const [v, D, d] = u;
                        return `rgb:${g(v,_)}/${g(D,_)}/${g(d,_)}`
                    }
                },
                5770: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.PAYLOAD_LIMIT = void 0, r.PAYLOAD_LIMIT = 1e7
                },
                6351: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.DcsHandler = r.DcsParser = void 0;
                    const c = s(482),
                        g = s(8742),
                        u = s(5770),
                        _ = [];
                    r.DcsParser = class {
                        constructor() {
                            this._handlers = Object.create(null), this._active = _, this._ident = 0, this._handlerFb = () => {}, this._stack = {
                                paused: !1,
                                loopPosition: 0,
                                fallThrough: !1
                            }
                        }
                        dispose() {
                            this._handlers = Object.create(null), this._handlerFb = () => {}, this._active = _
                        }
                        registerHandler(D, d) {
                            this._handlers[D] === void 0 && (this._handlers[D] = []);
                            const a = this._handlers[D];
                            return a.push(d), {
                                dispose: () => {
                                    const o = a.indexOf(d);
                                    o !== -1 && a.splice(o, 1)
                                }
                            }
                        }
                        clearHandler(D) {
                            this._handlers[D] && delete this._handlers[D]
                        }
                        setHandlerFallback(D) {
                            this._handlerFb = D
                        }
                        reset() {
                            if (this._active.length)
                                for (let D = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; D >= 0; --D) this._active[D].unhook(!1);
                            this._stack.paused = !1, this._active = _, this._ident = 0
                        }
                        hook(D, d) {
                            if (this.reset(), this._ident = D, this._active = this._handlers[D] || _, this._active.length)
                                for (let a = this._active.length - 1; a >= 0; a--) this._active[a].hook(d);
                            else this._handlerFb(this._ident, "HOOK", d)
                        }
                        put(D, d, a) {
                            if (this._active.length)
                                for (let o = this._active.length - 1; o >= 0; o--) this._active[o].put(D, d, a);
                            else this._handlerFb(this._ident, "PUT", (0, c.utf32ToString)(D, d, a))
                        }
                        unhook(D, d = !0) {
                            if (this._active.length) {
                                let a = !1,
                                    o = this._active.length - 1,
                                    i = !1;
                                if (this._stack.paused && (o = this._stack.loopPosition - 1, a = d, i = this._stack.fallThrough, this._stack.paused = !1), !i && a === !1) {
                                    for (; o >= 0 && (a = this._active[o].unhook(D), a !== !0); o--)
                                        if (a instanceof Promise) return this._stack.paused = !0, this._stack.loopPosition = o, this._stack.fallThrough = !1, a;
                                    o--
                                }
                                for (; o >= 0; o--)
                                    if (a = this._active[o].unhook(!1), a instanceof Promise) return this._stack.paused = !0, this._stack.loopPosition = o, this._stack.fallThrough = !0, a
                            } else this._handlerFb(this._ident, "UNHOOK", D);
                            this._active = _, this._ident = 0
                        }
                    };
                    const v = new g.Params;
                    v.addParam(0), r.DcsHandler = class {
                        constructor(D) {
                            this._handler = D, this._data = "", this._params = v, this._hitLimit = !1
                        }
                        hook(D) {
                            this._params = D.length > 1 || D.params[0] ? D.clone() : v, this._data = "", this._hitLimit = !1
                        }
                        put(D, d, a) {
                            this._hitLimit || (this._data += (0, c.utf32ToString)(D, d, a), this._data.length > u.PAYLOAD_LIMIT && (this._data = "", this._hitLimit = !0))
                        }
                        unhook(D) {
                            let d = !1;
                            if (this._hitLimit) d = !1;
                            else if (D && (d = this._handler(this._data, this._params), d instanceof Promise)) return d.then(a => (this._params = v, this._data = "", this._hitLimit = !1, a));
                            return this._params = v, this._data = "", this._hitLimit = !1, d
                        }
                    }
                },
                2015: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.EscapeSequenceParser = r.VT500_TRANSITION_TABLE = r.TransitionTable = void 0;
                    const c = s(844),
                        g = s(8742),
                        u = s(6242),
                        _ = s(6351);
                    class v {
                        constructor(o) {
                            this.table = new Uint8Array(o)
                        }
                        setDefault(o, i) {
                            this.table.fill(o << 4 | i)
                        }
                        add(o, i, l, b) {
                            this.table[i << 8 | o] = l << 4 | b
                        }
                        addMany(o, i, l, b) {
                            for (let A = 0; A < o.length; A++) this.table[i << 8 | o[A]] = l << 4 | b
                        }
                    }
                    r.TransitionTable = v;
                    const D = 160;
                    r.VT500_TRANSITION_TABLE = function() {
                        const a = new v(4095),
                            o = Array.apply(null, Array(256)).map((T, S) => S),
                            i = (T, S) => o.slice(T, S),
                            l = i(32, 127),
                            b = i(0, 24);
                        b.push(25), b.push.apply(b, i(28, 32));
                        const A = i(0, 14);
                        let n;
                        for (n in a.setDefault(1, 0), a.addMany(l, 0, 2, 0), A) a.addMany([24, 26, 153, 154], n, 3, 0), a.addMany(i(128, 144), n, 3, 0), a.addMany(i(144, 152), n, 3, 0), a.add(156, n, 0, 0), a.add(27, n, 11, 1), a.add(157, n, 4, 8), a.addMany([152, 158, 159], n, 0, 7), a.add(155, n, 11, 3), a.add(144, n, 11, 9);
                        return a.addMany(b, 0, 3, 0), a.addMany(b, 1, 3, 1), a.add(127, 1, 0, 1), a.addMany(b, 8, 0, 8), a.addMany(b, 3, 3, 3), a.add(127, 3, 0, 3), a.addMany(b, 4, 3, 4), a.add(127, 4, 0, 4), a.addMany(b, 6, 3, 6), a.addMany(b, 5, 3, 5), a.add(127, 5, 0, 5), a.addMany(b, 2, 3, 2), a.add(127, 2, 0, 2), a.add(93, 1, 4, 8), a.addMany(l, 8, 5, 8), a.add(127, 8, 5, 8), a.addMany([156, 27, 24, 26, 7], 8, 6, 0), a.addMany(i(28, 32), 8, 0, 8), a.addMany([88, 94, 95], 1, 0, 7), a.addMany(l, 7, 0, 7), a.addMany(b, 7, 0, 7), a.add(156, 7, 0, 0), a.add(127, 7, 0, 7), a.add(91, 1, 11, 3), a.addMany(i(64, 127), 3, 7, 0), a.addMany(i(48, 60), 3, 8, 4), a.addMany([60, 61, 62, 63], 3, 9, 4), a.addMany(i(48, 60), 4, 8, 4), a.addMany(i(64, 127), 4, 7, 0), a.addMany([60, 61, 62, 63], 4, 0, 6), a.addMany(i(32, 64), 6, 0, 6), a.add(127, 6, 0, 6), a.addMany(i(64, 127), 6, 0, 0), a.addMany(i(32, 48), 3, 9, 5), a.addMany(i(32, 48), 5, 9, 5), a.addMany(i(48, 64), 5, 0, 6), a.addMany(i(64, 127), 5, 7, 0), a.addMany(i(32, 48), 4, 9, 5), a.addMany(i(32, 48), 1, 9, 2), a.addMany(i(32, 48), 2, 9, 2), a.addMany(i(48, 127), 2, 10, 0), a.addMany(i(48, 80), 1, 10, 0), a.addMany(i(81, 88), 1, 10, 0), a.addMany([89, 90, 92], 1, 10, 0), a.addMany(i(96, 127), 1, 10, 0), a.add(80, 1, 11, 9), a.addMany(b, 9, 0, 9), a.add(127, 9, 0, 9), a.addMany(i(28, 32), 9, 0, 9), a.addMany(i(32, 48), 9, 9, 12), a.addMany(i(48, 60), 9, 8, 10), a.addMany([60, 61, 62, 63], 9, 9, 10), a.addMany(b, 11, 0, 11), a.addMany(i(32, 128), 11, 0, 11), a.addMany(i(28, 32), 11, 0, 11), a.addMany(b, 10, 0, 10), a.add(127, 10, 0, 10), a.addMany(i(28, 32), 10, 0, 10), a.addMany(i(48, 60), 10, 8, 10), a.addMany([60, 61, 62, 63], 10, 0, 11), a.addMany(i(32, 48), 10, 9, 12), a.addMany(b, 12, 0, 12), a.add(127, 12, 0, 12), a.addMany(i(28, 32), 12, 0, 12), a.addMany(i(32, 48), 12, 9, 12), a.addMany(i(48, 64), 12, 0, 11), a.addMany(i(64, 127), 12, 12, 13), a.addMany(i(64, 127), 10, 12, 13), a.addMany(i(64, 127), 9, 12, 13), a.addMany(b, 13, 13, 13), a.addMany(l, 13, 13, 13), a.add(127, 13, 0, 13), a.addMany([27, 156, 24, 26], 13, 14, 0), a.add(D, 0, 2, 0), a.add(D, 8, 5, 8), a.add(D, 6, 0, 6), a.add(D, 11, 0, 11), a.add(D, 13, 13, 13), a
                    }();
                    class d extends c.Disposable {
                        constructor(o = r.VT500_TRANSITION_TABLE) {
                            super(), this._transitions = o, this._parseStack = {
                                state: 0,
                                handlers: [],
                                handlerPos: 0,
                                transition: 0,
                                chunkPos: 0
                            }, this.initialState = 0, this.currentState = this.initialState, this._params = new g.Params, this._params.addParam(0), this._collect = 0, this.precedingJoinState = 0, this._printHandlerFb = (i, l, b) => {}, this._executeHandlerFb = i => {}, this._csiHandlerFb = (i, l) => {}, this._escHandlerFb = i => {}, this._errorHandlerFb = i => i, this._printHandler = this._printHandlerFb, this._executeHandlers = Object.create(null), this._csiHandlers = Object.create(null), this._escHandlers = Object.create(null), this.register((0, c.toDisposable)(() => {
                                this._csiHandlers = Object.create(null), this._executeHandlers = Object.create(null), this._escHandlers = Object.create(null)
                            })), this._oscParser = this.register(new u.OscParser), this._dcsParser = this.register(new _.DcsParser), this._errorHandler = this._errorHandlerFb, this.registerEscHandler({
                                final: "\\"
                            }, () => !0)
                        }
                        _identifier(o, i = [64, 126]) {
                            let l = 0;
                            if (o.prefix) {
                                if (o.prefix.length > 1) throw new Error("only one byte as prefix supported");
                                if (l = o.prefix.charCodeAt(0), l && 60 > l || l > 63) throw new Error("prefix must be in range 0x3c .. 0x3f")
                            }
                            if (o.intermediates) {
                                if (o.intermediates.length > 2) throw new Error("only two bytes as intermediates are supported");
                                for (let A = 0; A < o.intermediates.length; ++A) {
                                    const n = o.intermediates.charCodeAt(A);
                                    if (32 > n || n > 47) throw new Error("intermediate must be in range 0x20 .. 0x2f");
                                    l <<= 8, l |= n
                                }
                            }
                            if (o.final.length !== 1) throw new Error("final must be a single byte");
                            const b = o.final.charCodeAt(0);
                            if (i[0] > b || b > i[1]) throw new Error(`final must be in range ${i[0]} .. ${i[1]}`);
                            return l <<= 8, l |= b, l
                        }
                        identToString(o) {
                            const i = [];
                            for (; o;) i.push(String.fromCharCode(255 & o)), o >>= 8;
                            return i.reverse().join("")
                        }
                        setPrintHandler(o) {
                            this._printHandler = o
                        }
                        clearPrintHandler() {
                            this._printHandler = this._printHandlerFb
                        }
                        registerEscHandler(o, i) {
                            const l = this._identifier(o, [48, 126]);
                            this._escHandlers[l] === void 0 && (this._escHandlers[l] = []);
                            const b = this._escHandlers[l];
                            return b.push(i), {
                                dispose: () => {
                                    const A = b.indexOf(i);
                                    A !== -1 && b.splice(A, 1)
                                }
                            }
                        }
                        clearEscHandler(o) {
                            this._escHandlers[this._identifier(o, [48, 126])] && delete this._escHandlers[this._identifier(o, [48, 126])]
                        }
                        setEscHandlerFallback(o) {
                            this._escHandlerFb = o
                        }
                        setExecuteHandler(o, i) {
                            this._executeHandlers[o.charCodeAt(0)] = i
                        }
                        clearExecuteHandler(o) {
                            this._executeHandlers[o.charCodeAt(0)] && delete this._executeHandlers[o.charCodeAt(0)]
                        }
                        setExecuteHandlerFallback(o) {
                            this._executeHandlerFb = o
                        }
                        registerCsiHandler(o, i) {
                            const l = this._identifier(o);
                            this._csiHandlers[l] === void 0 && (this._csiHandlers[l] = []);
                            const b = this._csiHandlers[l];
                            return b.push(i), {
                                dispose: () => {
                                    const A = b.indexOf(i);
                                    A !== -1 && b.splice(A, 1)
                                }
                            }
                        }
                        clearCsiHandler(o) {
                            this._csiHandlers[this._identifier(o)] && delete this._csiHandlers[this._identifier(o)]
                        }
                        setCsiHandlerFallback(o) {
                            this._csiHandlerFb = o
                        }
                        registerDcsHandler(o, i) {
                            return this._dcsParser.registerHandler(this._identifier(o), i)
                        }
                        clearDcsHandler(o) {
                            this._dcsParser.clearHandler(this._identifier(o))
                        }
                        setDcsHandlerFallback(o) {
                            this._dcsParser.setHandlerFallback(o)
                        }
                        registerOscHandler(o, i) {
                            return this._oscParser.registerHandler(o, i)
                        }
                        clearOscHandler(o) {
                            this._oscParser.clearHandler(o)
                        }
                        setOscHandlerFallback(o) {
                            this._oscParser.setHandlerFallback(o)
                        }
                        setErrorHandler(o) {
                            this._errorHandler = o
                        }
                        clearErrorHandler() {
                            this._errorHandler = this._errorHandlerFb
                        }
                        reset() {
                            this.currentState = this.initialState, this._oscParser.reset(), this._dcsParser.reset(), this._params.reset(), this._params.addParam(0), this._collect = 0, this.precedingJoinState = 0, this._parseStack.state !== 0 && (this._parseStack.state = 2, this._parseStack.handlers = [])
                        }
                        _preserveStack(o, i, l, b, A) {
                            this._parseStack.state = o, this._parseStack.handlers = i, this._parseStack.handlerPos = l, this._parseStack.transition = b, this._parseStack.chunkPos = A
                        }
                        parse(o, i, l) {
                            let b, A = 0,
                                n = 0,
                                T = 0;
                            if (this._parseStack.state)
                                if (this._parseStack.state === 2) this._parseStack.state = 0, T = this._parseStack.chunkPos + 1;
                                else {
                                    if (l === void 0 || this._parseStack.state === 1) throw this._parseStack.state = 1, new Error("improper continuation due to previous async handler, giving up parsing");
                                    const S = this._parseStack.handlers;
                                    let L = this._parseStack.handlerPos - 1;
                                    switch (this._parseStack.state) {
                                        case 3:
                                            if (l === !1 && L > -1) {
                                                for (; L >= 0 && (b = S[L](this._params), b !== !0); L--)
                                                    if (b instanceof Promise) return this._parseStack.handlerPos = L, b
                                            }
                                            this._parseStack.handlers = [];
                                            break;
                                        case 4:
                                            if (l === !1 && L > -1) {
                                                for (; L >= 0 && (b = S[L](), b !== !0); L--)
                                                    if (b instanceof Promise) return this._parseStack.handlerPos = L, b
                                            }
                                            this._parseStack.handlers = [];
                                            break;
                                        case 6:
                                            if (A = o[this._parseStack.chunkPos], b = this._dcsParser.unhook(A !== 24 && A !== 26, l), b) return b;
                                            A === 27 && (this._parseStack.transition |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0;
                                            break;
                                        case 5:
                                            if (A = o[this._parseStack.chunkPos], b = this._oscParser.end(A !== 24 && A !== 26, l), b) return b;
                                            A === 27 && (this._parseStack.transition |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0
                                    }
                                    this._parseStack.state = 0, T = this._parseStack.chunkPos + 1, this.precedingJoinState = 0, this.currentState = 15 & this._parseStack.transition
                                } for (let S = T; S < i; ++S) {
                                switch (A = o[S], n = this._transitions.table[this.currentState << 8 | (A < 160 ? A : D)], n >> 4) {
                                    case 2:
                                        for (let U = S + 1;; ++U) {
                                            if (U >= i || (A = o[U]) < 32 || A > 126 && A < D) {
                                                this._printHandler(o, S, U), S = U - 1;
                                                break
                                            }
                                            if (++U >= i || (A = o[U]) < 32 || A > 126 && A < D) {
                                                this._printHandler(o, S, U), S = U - 1;
                                                break
                                            }
                                            if (++U >= i || (A = o[U]) < 32 || A > 126 && A < D) {
                                                this._printHandler(o, S, U), S = U - 1;
                                                break
                                            }
                                            if (++U >= i || (A = o[U]) < 32 || A > 126 && A < D) {
                                                this._printHandler(o, S, U), S = U - 1;
                                                break
                                            }
                                        }
                                        break;
                                    case 3:
                                        this._executeHandlers[A] ? this._executeHandlers[A]() : this._executeHandlerFb(A), this.precedingJoinState = 0;
                                        break;
                                    case 0:
                                        break;
                                    case 1:
                                        if (this._errorHandler({
                                                position: S,
                                                code: A,
                                                currentState: this.currentState,
                                                collect: this._collect,
                                                params: this._params,
                                                abort: !1
                                            }).abort) return;
                                        break;
                                    case 7:
                                        const L = this._csiHandlers[this._collect << 8 | A];
                                        let z = L ? L.length - 1 : -1;
                                        for (; z >= 0 && (b = L[z](this._params), b !== !0); z--)
                                            if (b instanceof Promise) return this._preserveStack(3, L, z, n, S), b;
                                        z < 0 && this._csiHandlerFb(this._collect << 8 | A, this._params), this.precedingJoinState = 0;
                                        break;
                                    case 8:
                                        do switch (A) {
                                            case 59:
                                                this._params.addParam(0);
                                                break;
                                            case 58:
                                                this._params.addSubParam(-1);
                                                break;
                                            default:
                                                this._params.addDigit(A - 48)
                                        }
                                        while (++S < i && (A = o[S]) > 47 && A < 60);
                                        S--;
                                        break;
                                    case 9:
                                        this._collect <<= 8, this._collect |= A;
                                        break;
                                    case 10:
                                        const G = this._escHandlers[this._collect << 8 | A];
                                        let K = G ? G.length - 1 : -1;
                                        for (; K >= 0 && (b = G[K](), b !== !0); K--)
                                            if (b instanceof Promise) return this._preserveStack(4, G, K, n, S), b;
                                        K < 0 && this._escHandlerFb(this._collect << 8 | A), this.precedingJoinState = 0;
                                        break;
                                    case 11:
                                        this._params.reset(), this._params.addParam(0), this._collect = 0;
                                        break;
                                    case 12:
                                        this._dcsParser.hook(this._collect << 8 | A, this._params);
                                        break;
                                    case 13:
                                        for (let U = S + 1;; ++U)
                                            if (U >= i || (A = o[U]) === 24 || A === 26 || A === 27 || A > 127 && A < D) {
                                                this._dcsParser.put(o, S, U), S = U - 1;
                                                break
                                            } break;
                                    case 14:
                                        if (b = this._dcsParser.unhook(A !== 24 && A !== 26), b) return this._preserveStack(6, [], 0, n, S), b;
                                        A === 27 && (n |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0, this.precedingJoinState = 0;
                                        break;
                                    case 4:
                                        this._oscParser.start();
                                        break;
                                    case 5:
                                        for (let U = S + 1;; U++)
                                            if (U >= i || (A = o[U]) < 32 || A > 127 && A < D) {
                                                this._oscParser.put(o, S, U), S = U - 1;
                                                break
                                            } break;
                                    case 6:
                                        if (b = this._oscParser.end(A !== 24 && A !== 26), b) return this._preserveStack(5, [], 0, n, S), b;
                                        A === 27 && (n |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0, this.precedingJoinState = 0
                                }
                                this.currentState = 15 & n
                            }
                        }
                    }
                    r.EscapeSequenceParser = d
                },
                6242: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.OscHandler = r.OscParser = void 0;
                    const c = s(5770),
                        g = s(482),
                        u = [];
                    r.OscParser = class {
                        constructor() {
                            this._state = 0, this._active = u, this._id = -1, this._handlers = Object.create(null), this._handlerFb = () => {}, this._stack = {
                                paused: !1,
                                loopPosition: 0,
                                fallThrough: !1
                            }
                        }
                        registerHandler(_, v) {
                            this._handlers[_] === void 0 && (this._handlers[_] = []);
                            const D = this._handlers[_];
                            return D.push(v), {
                                dispose: () => {
                                    const d = D.indexOf(v);
                                    d !== -1 && D.splice(d, 1)
                                }
                            }
                        }
                        clearHandler(_) {
                            this._handlers[_] && delete this._handlers[_]
                        }
                        setHandlerFallback(_) {
                            this._handlerFb = _
                        }
                        dispose() {
                            this._handlers = Object.create(null), this._handlerFb = () => {}, this._active = u
                        }
                        reset() {
                            if (this._state === 2)
                                for (let _ = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; _ >= 0; --_) this._active[_].end(!1);
                            this._stack.paused = !1, this._active = u, this._id = -1, this._state = 0
                        }
                        _start() {
                            if (this._active = this._handlers[this._id] || u, this._active.length)
                                for (let _ = this._active.length - 1; _ >= 0; _--) this._active[_].start();
                            else this._handlerFb(this._id, "START")
                        }
                        _put(_, v, D) {
                            if (this._active.length)
                                for (let d = this._active.length - 1; d >= 0; d--) this._active[d].put(_, v, D);
                            else this._handlerFb(this._id, "PUT", (0, g.utf32ToString)(_, v, D))
                        }
                        start() {
                            this.reset(), this._state = 1
                        }
                        put(_, v, D) {
                            if (this._state !== 3) {
                                if (this._state === 1)
                                    for (; v < D;) {
                                        const d = _[v++];
                                        if (d === 59) {
                                            this._state = 2, this._start();
                                            break
                                        }
                                        if (d < 48 || 57 < d) return void(this._state = 3);
                                        this._id === -1 && (this._id = 0), this._id = 10 * this._id + d - 48
                                    }
                                this._state === 2 && D - v > 0 && this._put(_, v, D)
                            }
                        }
                        end(_, v = !0) {
                            if (this._state !== 0) {
                                if (this._state !== 3)
                                    if (this._state === 1 && this._start(), this._active.length) {
                                        let D = !1,
                                            d = this._active.length - 1,
                                            a = !1;
                                        if (this._stack.paused && (d = this._stack.loopPosition - 1, D = v, a = this._stack.fallThrough, this._stack.paused = !1), !a && D === !1) {
                                            for (; d >= 0 && (D = this._active[d].end(_), D !== !0); d--)
                                                if (D instanceof Promise) return this._stack.paused = !0, this._stack.loopPosition = d, this._stack.fallThrough = !1, D;
                                            d--
                                        }
                                        for (; d >= 0; d--)
                                            if (D = this._active[d].end(!1), D instanceof Promise) return this._stack.paused = !0, this._stack.loopPosition = d, this._stack.fallThrough = !0, D
                                    } else this._handlerFb(this._id, "END", _);
                                this._active = u, this._id = -1, this._state = 0
                            }
                        }
                    }, r.OscHandler = class {
                        constructor(_) {
                            this._handler = _, this._data = "", this._hitLimit = !1
                        }
                        start() {
                            this._data = "", this._hitLimit = !1
                        }
                        put(_, v, D) {
                            this._hitLimit || (this._data += (0, g.utf32ToString)(_, v, D), this._data.length > c.PAYLOAD_LIMIT && (this._data = "", this._hitLimit = !0))
                        }
                        end(_) {
                            let v = !1;
                            if (this._hitLimit) v = !1;
                            else if (_ && (v = this._handler(this._data), v instanceof Promise)) return v.then(D => (this._data = "", this._hitLimit = !1, D));
                            return this._data = "", this._hitLimit = !1, v
                        }
                    }
                },
                8742: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.Params = void 0;
                    const s = 2147483647;
                    class c {
                        static fromArray(u) {
                            const _ = new c;
                            if (!u.length) return _;
                            for (let v = Array.isArray(u[0]) ? 1 : 0; v < u.length; ++v) {
                                const D = u[v];
                                if (Array.isArray(D))
                                    for (let d = 0; d < D.length; ++d) _.addSubParam(D[d]);
                                else _.addParam(D)
                            }
                            return _
                        }
                        constructor(u = 32, _ = 32) {
                            if (this.maxLength = u, this.maxSubParamsLength = _, _ > 256) throw new Error("maxSubParamsLength must not be greater than 256");
                            this.params = new Int32Array(u), this.length = 0, this._subParams = new Int32Array(_), this._subParamsLength = 0, this._subParamsIdx = new Uint16Array(u), this._rejectDigits = !1, this._rejectSubDigits = !1, this._digitIsSub = !1
                        }
                        clone() {
                            const u = new c(this.maxLength, this.maxSubParamsLength);
                            return u.params.set(this.params), u.length = this.length, u._subParams.set(this._subParams), u._subParamsLength = this._subParamsLength, u._subParamsIdx.set(this._subParamsIdx), u._rejectDigits = this._rejectDigits, u._rejectSubDigits = this._rejectSubDigits, u._digitIsSub = this._digitIsSub, u
                        }
                        toArray() {
                            const u = [];
                            for (let _ = 0; _ < this.length; ++_) {
                                u.push(this.params[_]);
                                const v = this._subParamsIdx[_] >> 8,
                                    D = 255 & this._subParamsIdx[_];
                                D - v > 0 && u.push(Array.prototype.slice.call(this._subParams, v, D))
                            }
                            return u
                        }
                        reset() {
                            this.length = 0, this._subParamsLength = 0, this._rejectDigits = !1, this._rejectSubDigits = !1, this._digitIsSub = !1
                        }
                        addParam(u) {
                            if (this._digitIsSub = !1, this.length >= this.maxLength) this._rejectDigits = !0;
                            else {
                                if (u < -1) throw new Error("values lesser than -1 are not allowed");
                                this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength, this.params[this.length++] = u > s ? s : u
                            }
                        }
                        addSubParam(u) {
                            if (this._digitIsSub = !0, this.length)
                                if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) this._rejectSubDigits = !0;
                                else {
                                    if (u < -1) throw new Error("values lesser than -1 are not allowed");
                                    this._subParams[this._subParamsLength++] = u > s ? s : u, this._subParamsIdx[this.length - 1]++
                                }
                        }
                        hasSubParams(u) {
                            return (255 & this._subParamsIdx[u]) - (this._subParamsIdx[u] >> 8) > 0
                        }
                        getSubParams(u) {
                            const _ = this._subParamsIdx[u] >> 8,
                                v = 255 & this._subParamsIdx[u];
                            return v - _ > 0 ? this._subParams.subarray(_, v) : null
                        }
                        getSubParamsAll() {
                            const u = {};
                            for (let _ = 0; _ < this.length; ++_) {
                                const v = this._subParamsIdx[_] >> 8,
                                    D = 255 & this._subParamsIdx[_];
                                D - v > 0 && (u[_] = this._subParams.slice(v, D))
                            }
                            return u
                        }
                        addDigit(u) {
                            let _;
                            if (this._rejectDigits || !(_ = this._digitIsSub ? this._subParamsLength : this.length) || this._digitIsSub && this._rejectSubDigits) return;
                            const v = this._digitIsSub ? this._subParams : this.params,
                                D = v[_ - 1];
                            v[_ - 1] = ~D ? Math.min(10 * D + u, s) : u
                        }
                    }
                    r.Params = c
                },
                5741: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.AddonManager = void 0, r.AddonManager = class {
                        constructor() {
                            this._addons = []
                        }
                        dispose() {
                            for (let s = this._addons.length - 1; s >= 0; s--) this._addons[s].instance.dispose()
                        }
                        loadAddon(s, c) {
                            const g = {
                                instance: c,
                                dispose: c.dispose,
                                isDisposed: !1
                            };
                            this._addons.push(g), c.dispose = () => this._wrappedAddonDispose(g), c.activate(s)
                        }
                        _wrappedAddonDispose(s) {
                            if (s.isDisposed) return;
                            let c = -1;
                            for (let g = 0; g < this._addons.length; g++)
                                if (this._addons[g] === s) {
                                    c = g;
                                    break
                                } if (c === -1) throw new Error("Could not dispose an addon that has not been loaded");
                            s.isDisposed = !0, s.dispose.apply(s.instance), this._addons.splice(c, 1)
                        }
                    }
                },
                8771: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.BufferApiView = void 0;
                    const c = s(3785),
                        g = s(511);
                    r.BufferApiView = class {
                        constructor(u, _) {
                            this._buffer = u, this.type = _
                        }
                        init(u) {
                            return this._buffer = u, this
                        }
                        get cursorY() {
                            return this._buffer.y
                        }
                        get cursorX() {
                            return this._buffer.x
                        }
                        get viewportY() {
                            return this._buffer.ydisp
                        }
                        get baseY() {
                            return this._buffer.ybase
                        }
                        get length() {
                            return this._buffer.lines.length
                        }
                        getLine(u) {
                            const _ = this._buffer.lines.get(u);
                            if (_) return new c.BufferLineApiView(_)
                        }
                        getNullCell() {
                            return new g.CellData
                        }
                    }
                },
                3785: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.BufferLineApiView = void 0;
                    const c = s(511);
                    r.BufferLineApiView = class {
                        constructor(g) {
                            this._line = g
                        }
                        get isWrapped() {
                            return this._line.isWrapped
                        }
                        get length() {
                            return this._line.length
                        }
                        getCell(g, u) {
                            if (!(g < 0 || g >= this._line.length)) return u ? (this._line.loadCell(g, u), u) : this._line.loadCell(g, new c.CellData)
                        }
                        translateToString(g, u, _) {
                            return this._line.translateToString(g, u, _)
                        }
                    }
                },
                8285: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.BufferNamespaceApi = void 0;
                    const c = s(8771),
                        g = s(8460),
                        u = s(844);
                    class _ extends u.Disposable {
                        constructor(D) {
                            super(), this._core = D, this._onBufferChange = this.register(new g.EventEmitter), this.onBufferChange = this._onBufferChange.event, this._normal = new c.BufferApiView(this._core.buffers.normal, "normal"), this._alternate = new c.BufferApiView(this._core.buffers.alt, "alternate"), this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active))
                        }
                        get active() {
                            if (this._core.buffers.active === this._core.buffers.normal) return this.normal;
                            if (this._core.buffers.active === this._core.buffers.alt) return this.alternate;
                            throw new Error("Active buffer is neither normal nor alternate")
                        }
                        get normal() {
                            return this._normal.init(this._core.buffers.normal)
                        }
                        get alternate() {
                            return this._alternate.init(this._core.buffers.alt)
                        }
                    }
                    r.BufferNamespaceApi = _
                },
                7975: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.ParserApi = void 0, r.ParserApi = class {
                        constructor(s) {
                            this._core = s
                        }
                        registerCsiHandler(s, c) {
                            return this._core.registerCsiHandler(s, g => c(g.toArray()))
                        }
                        addCsiHandler(s, c) {
                            return this.registerCsiHandler(s, c)
                        }
                        registerDcsHandler(s, c) {
                            return this._core.registerDcsHandler(s, (g, u) => c(g, u.toArray()))
                        }
                        addDcsHandler(s, c) {
                            return this.registerDcsHandler(s, c)
                        }
                        registerEscHandler(s, c) {
                            return this._core.registerEscHandler(s, c)
                        }
                        addEscHandler(s, c) {
                            return this.registerEscHandler(s, c)
                        }
                        registerOscHandler(s, c) {
                            return this._core.registerOscHandler(s, c)
                        }
                        addOscHandler(s, c) {
                            return this.registerOscHandler(s, c)
                        }
                    }
                },
                7090: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.UnicodeApi = void 0, r.UnicodeApi = class {
                        constructor(s) {
                            this._core = s
                        }
                        register(s) {
                            this._core.unicodeService.register(s)
                        }
                        get versions() {
                            return this._core.unicodeService.versions
                        }
                        get activeVersion() {
                            return this._core.unicodeService.activeVersion
                        }
                        set activeVersion(s) {
                            this._core.unicodeService.activeVersion = s
                        }
                    }
                },
                744: function(C, r, s) {
                    var c = this && this.__decorate || function(a, o, i, l) {
                            var b, A = arguments.length,
                                n = A < 3 ? o : l === null ? l = Object.getOwnPropertyDescriptor(o, i) : l;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") n = Reflect.decorate(a, o, i, l);
                            else
                                for (var T = a.length - 1; T >= 0; T--)(b = a[T]) && (n = (A < 3 ? b(n) : A > 3 ? b(o, i, n) : b(o, i)) || n);
                            return A > 3 && n && Object.defineProperty(o, i, n), n
                        },
                        g = this && this.__param || function(a, o) {
                            return function(i, l) {
                                o(i, l, a)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.BufferService = r.MINIMUM_ROWS = r.MINIMUM_COLS = void 0;
                    const u = s(8460),
                        _ = s(844),
                        v = s(5295),
                        D = s(2585);
                    r.MINIMUM_COLS = 2, r.MINIMUM_ROWS = 1;
                    let d = r.BufferService = class extends _.Disposable {
                        get buffer() {
                            return this.buffers.active
                        }
                        constructor(a) {
                            super(), this.isUserScrolling = !1, this._onResize = this.register(new u.EventEmitter), this.onResize = this._onResize.event, this._onScroll = this.register(new u.EventEmitter), this.onScroll = this._onScroll.event, this.cols = Math.max(a.rawOptions.cols || 0, r.MINIMUM_COLS), this.rows = Math.max(a.rawOptions.rows || 0, r.MINIMUM_ROWS), this.buffers = this.register(new v.BufferSet(a, this))
                        }
                        resize(a, o) {
                            this.cols = a, this.rows = o, this.buffers.resize(a, o), this._onResize.fire({
                                cols: a,
                                rows: o
                            })
                        }
                        reset() {
                            this.buffers.reset(), this.isUserScrolling = !1
                        }
                        scroll(a, o = !1) {
                            const i = this.buffer;
                            let l;
                            l = this._cachedBlankLine, l && l.length === this.cols && l.getFg(0) === a.fg && l.getBg(0) === a.bg || (l = i.getBlankLine(a, o), this._cachedBlankLine = l), l.isWrapped = o;
                            const b = i.ybase + i.scrollTop,
                                A = i.ybase + i.scrollBottom;
                            if (i.scrollTop === 0) {
                                const n = i.lines.isFull;
                                A === i.lines.length - 1 ? n ? i.lines.recycle().copyFrom(l) : i.lines.push(l.clone()) : i.lines.splice(A + 1, 0, l.clone()), n ? this.isUserScrolling && (i.ydisp = Math.max(i.ydisp - 1, 0)) : (i.ybase++, this.isUserScrolling || i.ydisp++)
                            } else {
                                const n = A - b + 1;
                                i.lines.shiftElements(b + 1, n - 1, -1), i.lines.set(A, l.clone())
                            }
                            this.isUserScrolling || (i.ydisp = i.ybase), this._onScroll.fire(i.ydisp)
                        }
                        scrollLines(a, o, i) {
                            const l = this.buffer;
                            if (a < 0) {
                                if (l.ydisp === 0) return;
                                this.isUserScrolling = !0
                            } else a + l.ydisp >= l.ybase && (this.isUserScrolling = !1);
                            const b = l.ydisp;
                            l.ydisp = Math.max(Math.min(l.ydisp + a, l.ybase), 0), b !== l.ydisp && (o || this._onScroll.fire(l.ydisp))
                        }
                    };
                    r.BufferService = d = c([g(0, D.IOptionsService)], d)
                },
                7994: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.CharsetService = void 0, r.CharsetService = class {
                        constructor() {
                            this.glevel = 0, this._charsets = []
                        }
                        reset() {
                            this.charset = void 0, this._charsets = [], this.glevel = 0
                        }
                        setgLevel(s) {
                            this.glevel = s, this.charset = this._charsets[s]
                        }
                        setgCharset(s, c) {
                            this._charsets[s] = c, this.glevel === s && (this.charset = c)
                        }
                    }
                },
                1753: function(C, r, s) {
                    var c = this && this.__decorate || function(l, b, A, n) {
                            var T, S = arguments.length,
                                L = S < 3 ? b : n === null ? n = Object.getOwnPropertyDescriptor(b, A) : n;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") L = Reflect.decorate(l, b, A, n);
                            else
                                for (var z = l.length - 1; z >= 0; z--)(T = l[z]) && (L = (S < 3 ? T(L) : S > 3 ? T(b, A, L) : T(b, A)) || L);
                            return S > 3 && L && Object.defineProperty(b, A, L), L
                        },
                        g = this && this.__param || function(l, b) {
                            return function(A, n) {
                                b(A, n, l)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.CoreMouseService = void 0;
                    const u = s(2585),
                        _ = s(8460),
                        v = s(844),
                        D = {
                            NONE: {
                                events: 0,
                                restrict: () => !1
                            },
                            X10: {
                                events: 1,
                                restrict: l => l.button !== 4 && l.action === 1 && (l.ctrl = !1, l.alt = !1, l.shift = !1, !0)
                            },
                            VT200: {
                                events: 19,
                                restrict: l => l.action !== 32
                            },
                            DRAG: {
                                events: 23,
                                restrict: l => l.action !== 32 || l.button !== 3
                            },
                            ANY: {
                                events: 31,
                                restrict: l => !0
                            }
                        };

                    function d(l, b) {
                        let A = (l.ctrl ? 16 : 0) | (l.shift ? 4 : 0) | (l.alt ? 8 : 0);
                        return l.button === 4 ? (A |= 64, A |= l.action) : (A |= 3 & l.button, 4 & l.button && (A |= 64), 8 & l.button && (A |= 128), l.action === 32 ? A |= 32 : l.action !== 0 || b || (A |= 3)), A
                    }
                    const a = String.fromCharCode,
                        o = {
                            DEFAULT: l => {
                                const b = [d(l, !1) + 32, l.col + 32, l.row + 32];
                                return b[0] > 255 || b[1] > 255 || b[2] > 255 ? "" : `\x1B[M${a(b[0])}${a(b[1])}${a(b[2])}`
                            },
                            SGR: l => {
                                const b = l.action === 0 && l.button !== 4 ? "m" : "M";
                                return `\x1B[<${d(l,!0)};${l.col};${l.row}${b}`
                            },
                            SGR_PIXELS: l => {
                                const b = l.action === 0 && l.button !== 4 ? "m" : "M";
                                return `\x1B[<${d(l,!0)};${l.x};${l.y}${b}`
                            }
                        };
                    let i = r.CoreMouseService = class extends v.Disposable {
                        constructor(l, b) {
                            super(), this._bufferService = l, this._coreService = b, this._protocols = {}, this._encodings = {}, this._activeProtocol = "", this._activeEncoding = "", this._lastEvent = null, this._onProtocolChange = this.register(new _.EventEmitter), this.onProtocolChange = this._onProtocolChange.event;
                            for (const A of Object.keys(D)) this.addProtocol(A, D[A]);
                            for (const A of Object.keys(o)) this.addEncoding(A, o[A]);
                            this.reset()
                        }
                        addProtocol(l, b) {
                            this._protocols[l] = b
                        }
                        addEncoding(l, b) {
                            this._encodings[l] = b
                        }
                        get activeProtocol() {
                            return this._activeProtocol
                        }
                        get areMouseEventsActive() {
                            return this._protocols[this._activeProtocol].events !== 0
                        }
                        set activeProtocol(l) {
                            if (!this._protocols[l]) throw new Error(`unknown protocol "${l}"`);
                            this._activeProtocol = l, this._onProtocolChange.fire(this._protocols[l].events)
                        }
                        get activeEncoding() {
                            return this._activeEncoding
                        }
                        set activeEncoding(l) {
                            if (!this._encodings[l]) throw new Error(`unknown encoding "${l}"`);
                            this._activeEncoding = l
                        }
                        reset() {
                            this.activeProtocol = "NONE", this.activeEncoding = "DEFAULT", this._lastEvent = null
                        }
                        triggerMouseEvent(l) {
                            if (l.col < 0 || l.col >= this._bufferService.cols || l.row < 0 || l.row >= this._bufferService.rows || l.button === 4 && l.action === 32 || l.button === 3 && l.action !== 32 || l.button !== 4 && (l.action === 2 || l.action === 3) || (l.col++, l.row++, l.action === 32 && this._lastEvent && this._equalEvents(this._lastEvent, l, this._activeEncoding === "SGR_PIXELS")) || !this._protocols[this._activeProtocol].restrict(l)) return !1;
                            const b = this._encodings[this._activeEncoding](l);
                            return b && (this._activeEncoding === "DEFAULT" ? this._coreService.triggerBinaryEvent(b) : this._coreService.triggerDataEvent(b, !0)), this._lastEvent = l, !0
                        }
                        explainEvents(l) {
                            return {
                                down: !!(1 & l),
                                up: !!(2 & l),
                                drag: !!(4 & l),
                                move: !!(8 & l),
                                wheel: !!(16 & l)
                            }
                        }
                        _equalEvents(l, b, A) {
                            if (A) {
                                if (l.x !== b.x || l.y !== b.y) return !1
                            } else if (l.col !== b.col || l.row !== b.row) return !1;
                            return l.button === b.button && l.action === b.action && l.ctrl === b.ctrl && l.alt === b.alt && l.shift === b.shift
                        }
                    };
                    r.CoreMouseService = i = c([g(0, u.IBufferService), g(1, u.ICoreService)], i)
                },
                6975: function(C, r, s) {
                    var c = this && this.__decorate || function(i, l, b, A) {
                            var n, T = arguments.length,
                                S = T < 3 ? l : A === null ? A = Object.getOwnPropertyDescriptor(l, b) : A;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") S = Reflect.decorate(i, l, b, A);
                            else
                                for (var L = i.length - 1; L >= 0; L--)(n = i[L]) && (S = (T < 3 ? n(S) : T > 3 ? n(l, b, S) : n(l, b)) || S);
                            return T > 3 && S && Object.defineProperty(l, b, S), S
                        },
                        g = this && this.__param || function(i, l) {
                            return function(b, A) {
                                l(b, A, i)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.CoreService = void 0;
                    const u = s(1439),
                        _ = s(8460),
                        v = s(844),
                        D = s(2585),
                        d = Object.freeze({
                            insertMode: !1
                        }),
                        a = Object.freeze({
                            applicationCursorKeys: !1,
                            applicationKeypad: !1,
                            bracketedPasteMode: !1,
                            origin: !1,
                            reverseWraparound: !1,
                            sendFocus: !1,
                            wraparound: !0
                        });
                    let o = r.CoreService = class extends v.Disposable {
                        constructor(i, l, b) {
                            super(), this._bufferService = i, this._logService = l, this._optionsService = b, this.isCursorInitialized = !1, this.isCursorHidden = !1, this._onData = this.register(new _.EventEmitter), this.onData = this._onData.event, this._onUserInput = this.register(new _.EventEmitter), this.onUserInput = this._onUserInput.event, this._onBinary = this.register(new _.EventEmitter), this.onBinary = this._onBinary.event, this._onRequestScrollToBottom = this.register(new _.EventEmitter), this.onRequestScrollToBottom = this._onRequestScrollToBottom.event, this.modes = (0, u.clone)(d), this.decPrivateModes = (0, u.clone)(a)
                        }
                        reset() {
                            this.modes = (0, u.clone)(d), this.decPrivateModes = (0, u.clone)(a)
                        }
                        triggerDataEvent(i, l = !1) {
                            if (this._optionsService.rawOptions.disableStdin) return;
                            const b = this._bufferService.buffer;
                            l && this._optionsService.rawOptions.scrollOnUserInput && b.ybase !== b.ydisp && this._onRequestScrollToBottom.fire(), l && this._onUserInput.fire(), this._logService.debug(`sending data "${i}"`, () => i.split("").map(A => A.charCodeAt(0))), this._onData.fire(i)
                        }
                        triggerBinaryEvent(i) {
                            this._optionsService.rawOptions.disableStdin || (this._logService.debug(`sending binary "${i}"`, () => i.split("").map(l => l.charCodeAt(0))), this._onBinary.fire(i))
                        }
                    };
                    r.CoreService = o = c([g(0, D.IBufferService), g(1, D.ILogService), g(2, D.IOptionsService)], o)
                },
                9074: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.DecorationService = void 0;
                    const c = s(8055),
                        g = s(8460),
                        u = s(844),
                        _ = s(6106);
                    let v = 0,
                        D = 0;
                    class d extends u.Disposable {
                        get decorations() {
                            return this._decorations.values()
                        }
                        constructor() {
                            super(), this._decorations = new _.SortedList(i => i == null ? void 0 : i.marker.line), this._onDecorationRegistered = this.register(new g.EventEmitter), this.onDecorationRegistered = this._onDecorationRegistered.event, this._onDecorationRemoved = this.register(new g.EventEmitter), this.onDecorationRemoved = this._onDecorationRemoved.event, this.register((0, u.toDisposable)(() => this.reset()))
                        }
                        registerDecoration(i) {
                            if (i.marker.isDisposed) return;
                            const l = new a(i);
                            if (l) {
                                const b = l.marker.onDispose(() => l.dispose());
                                l.onDispose(() => {
                                    l && (this._decorations.delete(l) && this._onDecorationRemoved.fire(l), b.dispose())
                                }), this._decorations.insert(l), this._onDecorationRegistered.fire(l)
                            }
                            return l
                        }
                        reset() {
                            for (const i of this._decorations.values()) i.dispose();
                            this._decorations.clear()
                        }* getDecorationsAtCell(i, l, b) {
                            let A = 0,
                                n = 0;
                            for (const T of this._decorations.getKeyIterator(l)) A = T.options.x ?? 0, n = A + (T.options.width ?? 1), i >= A && i < n && (!b || (T.options.layer ?? "bottom") === b) && (yield T)
                        }
                        forEachDecorationAtCell(i, l, b, A) {
                            this._decorations.forEachByKey(l, n => {
                                v = n.options.x ?? 0, D = v + (n.options.width ?? 1), i >= v && i < D && (!b || (n.options.layer ?? "bottom") === b) && A(n)
                            })
                        }
                    }
                    r.DecorationService = d;
                    class a extends u.Disposable {
                        get isDisposed() {
                            return this._isDisposed
                        }
                        get backgroundColorRGB() {
                            return this._cachedBg === null && (this.options.backgroundColor ? this._cachedBg = c.css.toColor(this.options.backgroundColor) : this._cachedBg = void 0), this._cachedBg
                        }
                        get foregroundColorRGB() {
                            return this._cachedFg === null && (this.options.foregroundColor ? this._cachedFg = c.css.toColor(this.options.foregroundColor) : this._cachedFg = void 0), this._cachedFg
                        }
                        constructor(i) {
                            super(), this.options = i, this.onRenderEmitter = this.register(new g.EventEmitter), this.onRender = this.onRenderEmitter.event, this._onDispose = this.register(new g.EventEmitter), this.onDispose = this._onDispose.event, this._cachedBg = null, this._cachedFg = null, this.marker = i.marker, this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position && (this.options.overviewRulerOptions.position = "full")
                        }
                        dispose() {
                            this._onDispose.fire(), super.dispose()
                        }
                    }
                },
                4348: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.InstantiationService = r.ServiceCollection = void 0;
                    const c = s(2585),
                        g = s(8343);
                    class u {
                        constructor(...v) {
                            this._entries = new Map;
                            for (const [D, d] of v) this.set(D, d)
                        }
                        set(v, D) {
                            const d = this._entries.get(v);
                            return this._entries.set(v, D), d
                        }
                        forEach(v) {
                            for (const [D, d] of this._entries.entries()) v(D, d)
                        }
                        has(v) {
                            return this._entries.has(v)
                        }
                        get(v) {
                            return this._entries.get(v)
                        }
                    }
                    r.ServiceCollection = u, r.InstantiationService = class {
                        constructor() {
                            this._services = new u, this._services.set(c.IInstantiationService, this)
                        }
                        setService(_, v) {
                            this._services.set(_, v)
                        }
                        getService(_) {
                            return this._services.get(_)
                        }
                        createInstance(_, ...v) {
                            const D = (0, g.getServiceDependencies)(_).sort((o, i) => o.index - i.index),
                                d = [];
                            for (const o of D) {
                                const i = this._services.get(o.id);
                                if (!i) throw new Error(`[createInstance] ${_.name} depends on UNKNOWN service ${o.id}.`);
                                d.push(i)
                            }
                            const a = D.length > 0 ? D[0].index : v.length;
                            if (v.length !== a) throw new Error(`[createInstance] First service dependency of ${_.name} at position ${a+1} conflicts with ${v.length} static arguments`);
                            return new _(...v, ...d)
                        }
                    }
                },
                7866: function(C, r, s) {
                    var c = this && this.__decorate || function(a, o, i, l) {
                            var b, A = arguments.length,
                                n = A < 3 ? o : l === null ? l = Object.getOwnPropertyDescriptor(o, i) : l;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") n = Reflect.decorate(a, o, i, l);
                            else
                                for (var T = a.length - 1; T >= 0; T--)(b = a[T]) && (n = (A < 3 ? b(n) : A > 3 ? b(o, i, n) : b(o, i)) || n);
                            return A > 3 && n && Object.defineProperty(o, i, n), n
                        },
                        g = this && this.__param || function(a, o) {
                            return function(i, l) {
                                o(i, l, a)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.traceCall = r.setTraceLogger = r.LogService = void 0;
                    const u = s(844),
                        _ = s(2585),
                        v = {
                            trace: _.LogLevelEnum.TRACE,
                            debug: _.LogLevelEnum.DEBUG,
                            info: _.LogLevelEnum.INFO,
                            warn: _.LogLevelEnum.WARN,
                            error: _.LogLevelEnum.ERROR,
                            off: _.LogLevelEnum.OFF
                        };
                    let D, d = r.LogService = class extends u.Disposable {
                        get logLevel() {
                            return this._logLevel
                        }
                        constructor(a) {
                            super(), this._optionsService = a, this._logLevel = _.LogLevelEnum.OFF, this._updateLogLevel(), this.register(this._optionsService.onSpecificOptionChange("logLevel", () => this._updateLogLevel())), D = this
                        }
                        _updateLogLevel() {
                            this._logLevel = v[this._optionsService.rawOptions.logLevel]
                        }
                        _evalLazyOptionalParams(a) {
                            for (let o = 0; o < a.length; o++) typeof a[o] == "function" && (a[o] = a[o]())
                        }
                        _log(a, o, i) {
                            this._evalLazyOptionalParams(i), a.call(console, (this._optionsService.options.logger ? "" : "xterm.js: ") + o, ...i)
                        }
                        trace(a, ...o) {
                            var i;
                            this._logLevel <= _.LogLevelEnum.TRACE && this._log(((i = this._optionsService.options.logger) == null ? void 0 : i.trace.bind(this._optionsService.options.logger)) ?? console.log, a, o)
                        }
                        debug(a, ...o) {
                            var i;
                            this._logLevel <= _.LogLevelEnum.DEBUG && this._log(((i = this._optionsService.options.logger) == null ? void 0 : i.debug.bind(this._optionsService.options.logger)) ?? console.log, a, o)
                        }
                        info(a, ...o) {
                            var i;
                            this._logLevel <= _.LogLevelEnum.INFO && this._log(((i = this._optionsService.options.logger) == null ? void 0 : i.info.bind(this._optionsService.options.logger)) ?? console.info, a, o)
                        }
                        warn(a, ...o) {
                            var i;
                            this._logLevel <= _.LogLevelEnum.WARN && this._log(((i = this._optionsService.options.logger) == null ? void 0 : i.warn.bind(this._optionsService.options.logger)) ?? console.warn, a, o)
                        }
                        error(a, ...o) {
                            var i;
                            this._logLevel <= _.LogLevelEnum.ERROR && this._log(((i = this._optionsService.options.logger) == null ? void 0 : i.error.bind(this._optionsService.options.logger)) ?? console.error, a, o)
                        }
                    };
                    r.LogService = d = c([g(0, _.IOptionsService)], d), r.setTraceLogger = function(a) {
                        D = a
                    }, r.traceCall = function(a, o, i) {
                        if (typeof i.value != "function") throw new Error("not supported");
                        const l = i.value;
                        i.value = function(...b) {
                            if (D.logLevel !== _.LogLevelEnum.TRACE) return l.apply(this, b);
                            D.trace(`GlyphRenderer#${l.name}(${b.map(n=>JSON.stringify(n)).join(", ")})`);
                            const A = l.apply(this, b);
                            return D.trace(`GlyphRenderer#${l.name} return`, A), A
                        }
                    }
                },
                7302: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.OptionsService = r.DEFAULT_OPTIONS = void 0;
                    const c = s(8460),
                        g = s(844),
                        u = s(6114);
                    r.DEFAULT_OPTIONS = {
                        cols: 80,
                        rows: 24,
                        cursorBlink: !1,
                        cursorStyle: "block",
                        cursorWidth: 1,
                        cursorInactiveStyle: "outline",
                        customGlyphs: !0,
                        drawBoldTextInBrightColors: !0,
                        documentOverride: null,
                        fastScrollModifier: "alt",
                        fastScrollSensitivity: 5,
                        fontFamily: "courier-new, courier, monospace",
                        fontSize: 15,
                        fontWeight: "normal",
                        fontWeightBold: "bold",
                        ignoreBracketedPasteMode: !1,
                        lineHeight: 1,
                        letterSpacing: 0,
                        linkHandler: null,
                        logLevel: "info",
                        logger: null,
                        scrollback: 1e3,
                        scrollOnUserInput: !0,
                        scrollSensitivity: 1,
                        screenReaderMode: !1,
                        smoothScrollDuration: 0,
                        macOptionIsMeta: !1,
                        macOptionClickForcesSelection: !1,
                        minimumContrastRatio: 1,
                        disableStdin: !1,
                        allowProposedApi: !1,
                        allowTransparency: !1,
                        tabStopWidth: 8,
                        theme: {},
                        rescaleOverlappingGlyphs: !1,
                        rightClickSelectsWord: u.isMac,
                        windowOptions: {},
                        windowsMode: !1,
                        windowsPty: {},
                        wordSeparator: " ()[]{}',\"`",
                        altClickMovesCursor: !0,
                        convertEol: !1,
                        termName: "xterm",
                        cancelEvents: !1,
                        overviewRulerWidth: 0
                    };
                    const _ = ["normal", "bold", "100", "200", "300", "400", "500", "600", "700", "800", "900"];
                    class v extends g.Disposable {
                        constructor(d) {
                            super(), this._onOptionChange = this.register(new c.EventEmitter), this.onOptionChange = this._onOptionChange.event;
                            const a = {
                                ...r.DEFAULT_OPTIONS
                            };
                            for (const o in d)
                                if (o in a) try {
                                    const i = d[o];
                                    a[o] = this._sanitizeAndValidateOption(o, i)
                                } catch (i) {
                                    console.error(i)
                                }
                            this.rawOptions = a, this.options = {
                                ...a
                            }, this._setupOptions(), this.register((0, g.toDisposable)(() => {
                                this.rawOptions.linkHandler = null, this.rawOptions.documentOverride = null
                            }))
                        }
                        onSpecificOptionChange(d, a) {
                            return this.onOptionChange(o => {
                                o === d && a(this.rawOptions[d])
                            })
                        }
                        onMultipleOptionChange(d, a) {
                            return this.onOptionChange(o => {
                                d.indexOf(o) !== -1 && a()
                            })
                        }
                        _setupOptions() {
                            const d = o => {
                                    if (!(o in r.DEFAULT_OPTIONS)) throw new Error(`No option with key "${o}"`);
                                    return this.rawOptions[o]
                                },
                                a = (o, i) => {
                                    if (!(o in r.DEFAULT_OPTIONS)) throw new Error(`No option with key "${o}"`);
                                    i = this._sanitizeAndValidateOption(o, i), this.rawOptions[o] !== i && (this.rawOptions[o] = i, this._onOptionChange.fire(o))
                                };
                            for (const o in this.rawOptions) {
                                const i = {
                                    get: d.bind(this, o),
                                    set: a.bind(this, o)
                                };
                                Object.defineProperty(this.options, o, i)
                            }
                        }
                        _sanitizeAndValidateOption(d, a) {
                            switch (d) {
                                case "cursorStyle":
                                    if (a || (a = r.DEFAULT_OPTIONS[d]), ! function(o) {
                                            return o === "block" || o === "underline" || o === "bar"
                                        }(a)) throw new Error(`"${a}" is not a valid value for ${d}`);
                                    break;
                                case "wordSeparator":
                                    a || (a = r.DEFAULT_OPTIONS[d]);
                                    break;
                                case "fontWeight":
                                case "fontWeightBold":
                                    if (typeof a == "number" && 1 <= a && a <= 1e3) break;
                                    a = _.includes(a) ? a : r.DEFAULT_OPTIONS[d];
                                    break;
                                case "cursorWidth":
                                    a = Math.floor(a);
                                case "lineHeight":
                                case "tabStopWidth":
                                    if (a < 1) throw new Error(`${d} cannot be less than 1, value: ${a}`);
                                    break;
                                case "minimumContrastRatio":
                                    a = Math.max(1, Math.min(21, Math.round(10 * a) / 10));
                                    break;
                                case "scrollback":
                                    if ((a = Math.min(a, 4294967295)) < 0) throw new Error(`${d} cannot be less than 0, value: ${a}`);
                                    break;
                                case "fastScrollSensitivity":
                                case "scrollSensitivity":
                                    if (a <= 0) throw new Error(`${d} cannot be less than or equal to 0, value: ${a}`);
                                    break;
                                case "rows":
                                case "cols":
                                    if (!a && a !== 0) throw new Error(`${d} must be numeric, value: ${a}`);
                                    break;
                                case "windowsPty":
                                    a = a ?? {}
                            }
                            return a
                        }
                    }
                    r.OptionsService = v
                },
                2660: function(C, r, s) {
                    var c = this && this.__decorate || function(v, D, d, a) {
                            var o, i = arguments.length,
                                l = i < 3 ? D : a === null ? a = Object.getOwnPropertyDescriptor(D, d) : a;
                            if (typeof Reflect == "object" && typeof Reflect.decorate == "function") l = Reflect.decorate(v, D, d, a);
                            else
                                for (var b = v.length - 1; b >= 0; b--)(o = v[b]) && (l = (i < 3 ? o(l) : i > 3 ? o(D, d, l) : o(D, d)) || l);
                            return i > 3 && l && Object.defineProperty(D, d, l), l
                        },
                        g = this && this.__param || function(v, D) {
                            return function(d, a) {
                                D(d, a, v)
                            }
                        };
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.OscLinkService = void 0;
                    const u = s(2585);
                    let _ = r.OscLinkService = class {
                        constructor(v) {
                            this._bufferService = v, this._nextId = 1, this._entriesWithId = new Map, this._dataByLinkId = new Map
                        }
                        registerLink(v) {
                            const D = this._bufferService.buffer;
                            if (v.id === void 0) {
                                const b = D.addMarker(D.ybase + D.y),
                                    A = {
                                        data: v,
                                        id: this._nextId++,
                                        lines: [b]
                                    };
                                return b.onDispose(() => this._removeMarkerFromLink(A, b)), this._dataByLinkId.set(A.id, A), A.id
                            }
                            const d = v,
                                a = this._getEntryIdKey(d),
                                o = this._entriesWithId.get(a);
                            if (o) return this.addLineToLink(o.id, D.ybase + D.y), o.id;
                            const i = D.addMarker(D.ybase + D.y),
                                l = {
                                    id: this._nextId++,
                                    key: this._getEntryIdKey(d),
                                    data: d,
                                    lines: [i]
                                };
                            return i.onDispose(() => this._removeMarkerFromLink(l, i)), this._entriesWithId.set(l.key, l), this._dataByLinkId.set(l.id, l), l.id
                        }
                        addLineToLink(v, D) {
                            const d = this._dataByLinkId.get(v);
                            if (d && d.lines.every(a => a.line !== D)) {
                                const a = this._bufferService.buffer.addMarker(D);
                                d.lines.push(a), a.onDispose(() => this._removeMarkerFromLink(d, a))
                            }
                        }
                        getLinkData(v) {
                            var D;
                            return (D = this._dataByLinkId.get(v)) == null ? void 0 : D.data
                        }
                        _getEntryIdKey(v) {
                            return `${v.id};;${v.uri}`
                        }
                        _removeMarkerFromLink(v, D) {
                            const d = v.lines.indexOf(D);
                            d !== -1 && (v.lines.splice(d, 1), v.lines.length === 0 && (v.data.id !== void 0 && this._entriesWithId.delete(v.key), this._dataByLinkId.delete(v.id)))
                        }
                    };
                    r.OscLinkService = _ = c([g(0, u.IBufferService)], _)
                },
                8343: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.createDecorator = r.getServiceDependencies = r.serviceRegistry = void 0;
                    const s = "di$target",
                        c = "di$dependencies";
                    r.serviceRegistry = new Map, r.getServiceDependencies = function(g) {
                        return g[c] || []
                    }, r.createDecorator = function(g) {
                        if (r.serviceRegistry.has(g)) return r.serviceRegistry.get(g);
                        const u = function(_, v, D) {
                            if (arguments.length !== 3) throw new Error("@IServiceName-decorator can only be used to decorate a parameter");
                            (function(d, a, o) {
                                a[s] === a ? a[c].push({
                                    id: d,
                                    index: o
                                }) : (a[c] = [{
                                    id: d,
                                    index: o
                                }], a[s] = a)
                            })(u, _, D)
                        };
                        return u.toString = () => g, r.serviceRegistry.set(g, u), u
                    }
                },
                2585: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.IDecorationService = r.IUnicodeService = r.IOscLinkService = r.IOptionsService = r.ILogService = r.LogLevelEnum = r.IInstantiationService = r.ICharsetService = r.ICoreService = r.ICoreMouseService = r.IBufferService = void 0;
                    const c = s(8343);
                    var g;
                    r.IBufferService = (0, c.createDecorator)("BufferService"), r.ICoreMouseService = (0, c.createDecorator)("CoreMouseService"), r.ICoreService = (0, c.createDecorator)("CoreService"), r.ICharsetService = (0, c.createDecorator)("CharsetService"), r.IInstantiationService = (0, c.createDecorator)("InstantiationService"),
                        function(u) {
                            u[u.TRACE = 0] = "TRACE", u[u.DEBUG = 1] = "DEBUG", u[u.INFO = 2] = "INFO", u[u.WARN = 3] = "WARN", u[u.ERROR = 4] = "ERROR", u[u.OFF = 5] = "OFF"
                        }(g || (r.LogLevelEnum = g = {})), r.ILogService = (0, c.createDecorator)("LogService"), r.IOptionsService = (0, c.createDecorator)("OptionsService"), r.IOscLinkService = (0, c.createDecorator)("OscLinkService"), r.IUnicodeService = (0, c.createDecorator)("UnicodeService"), r.IDecorationService = (0, c.createDecorator)("DecorationService")
                },
                1480: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.UnicodeService = void 0;
                    const c = s(8460),
                        g = s(225);
                    class u {
                        static extractShouldJoin(v) {
                            return (1 & v) != 0
                        }
                        static extractWidth(v) {
                            return v >> 1 & 3
                        }
                        static extractCharKind(v) {
                            return v >> 3
                        }
                        static createPropertyValue(v, D, d = !1) {
                            return (16777215 & v) << 3 | (3 & D) << 1 | (d ? 1 : 0)
                        }
                        constructor() {
                            this._providers = Object.create(null), this._active = "", this._onChange = new c.EventEmitter, this.onChange = this._onChange.event;
                            const v = new g.UnicodeV6;
                            this.register(v), this._active = v.version, this._activeProvider = v
                        }
                        dispose() {
                            this._onChange.dispose()
                        }
                        get versions() {
                            return Object.keys(this._providers)
                        }
                        get activeVersion() {
                            return this._active
                        }
                        set activeVersion(v) {
                            if (!this._providers[v]) throw new Error(`unknown Unicode version "${v}"`);
                            this._active = v, this._activeProvider = this._providers[v], this._onChange.fire(v)
                        }
                        register(v) {
                            this._providers[v.version] = v
                        }
                        wcwidth(v) {
                            return this._activeProvider.wcwidth(v)
                        }
                        getStringCellWidth(v) {
                            let D = 0,
                                d = 0;
                            const a = v.length;
                            for (let o = 0; o < a; ++o) {
                                let i = v.charCodeAt(o);
                                if (55296 <= i && i <= 56319) {
                                    if (++o >= a) return D + this.wcwidth(i);
                                    const A = v.charCodeAt(o);
                                    56320 <= A && A <= 57343 ? i = 1024 * (i - 55296) + A - 56320 + 65536 : D += this.wcwidth(A)
                                }
                                const l = this.charProperties(i, d);
                                let b = u.extractWidth(l);
                                u.extractShouldJoin(l) && (b -= u.extractWidth(d)), D += b, d = l
                            }
                            return D
                        }
                        charProperties(v, D) {
                            return this._activeProvider.charProperties(v, D)
                        }
                    }
                    r.UnicodeService = u
                }
            },
            f = {};

        function R(C) {
            var r = f[C];
            if (r !== void 0) return r.exports;
            var s = f[C] = {
                exports: {}
            };
            return p[C].call(s.exports, s, s.exports, R), s.exports
        }
        var E = {};
        return (() => {
            var C = E;
            Object.defineProperty(C, "__esModule", {
                value: !0
            }), C.Terminal = void 0;
            const r = R(9042),
                s = R(3236),
                c = R(844),
                g = R(5741),
                u = R(8285),
                _ = R(7975),
                v = R(7090),
                D = ["cols", "rows"];
            class d extends c.Disposable {
                constructor(o) {
                    super(), this._core = this.register(new s.Terminal(o)), this._addonManager = this.register(new g.AddonManager), this._publicOptions = {
                        ...this._core.options
                    };
                    const i = b => this._core.options[b],
                        l = (b, A) => {
                            this._checkReadonlyOptions(b), this._core.options[b] = A
                        };
                    for (const b in this._core.options) {
                        const A = {
                            get: i.bind(this, b),
                            set: l.bind(this, b)
                        };
                        Object.defineProperty(this._publicOptions, b, A)
                    }
                }
                _checkReadonlyOptions(o) {
                    if (D.includes(o)) throw new Error(`Option "${o}" can only be set in the constructor`)
                }
                _checkProposedApi() {
                    if (!this._core.optionsService.rawOptions.allowProposedApi) throw new Error("You must set the allowProposedApi option to true to use proposed API")
                }
                get onBell() {
                    return this._core.onBell
                }
                get onBinary() {
                    return this._core.onBinary
                }
                get onCursorMove() {
                    return this._core.onCursorMove
                }
                get onData() {
                    return this._core.onData
                }
                get onKey() {
                    return this._core.onKey
                }
                get onLineFeed() {
                    return this._core.onLineFeed
                }
                get onRender() {
                    return this._core.onRender
                }
                get onResize() {
                    return this._core.onResize
                }
                get onScroll() {
                    return this._core.onScroll
                }
                get onSelectionChange() {
                    return this._core.onSelectionChange
                }
                get onTitleChange() {
                    return this._core.onTitleChange
                }
                get onWriteParsed() {
                    return this._core.onWriteParsed
                }
                get element() {
                    return this._core.element
                }
                get parser() {
                    return this._parser || (this._parser = new _.ParserApi(this._core)), this._parser
                }
                get unicode() {
                    return this._checkProposedApi(), new v.UnicodeApi(this._core)
                }
                get textarea() {
                    return this._core.textarea
                }
                get rows() {
                    return this._core.rows
                }
                get cols() {
                    return this._core.cols
                }
                get buffer() {
                    return this._buffer || (this._buffer = this.register(new u.BufferNamespaceApi(this._core))), this._buffer
                }
                get markers() {
                    return this._checkProposedApi(), this._core.markers
                }
                get modes() {
                    const o = this._core.coreService.decPrivateModes;
                    let i = "none";
                    switch (this._core.coreMouseService.activeProtocol) {
                        case "X10":
                            i = "x10";
                            break;
                        case "VT200":
                            i = "vt200";
                            break;
                        case "DRAG":
                            i = "drag";
                            break;
                        case "ANY":
                            i = "any"
                    }
                    return {
                        applicationCursorKeysMode: o.applicationCursorKeys,
                        applicationKeypadMode: o.applicationKeypad,
                        bracketedPasteMode: o.bracketedPasteMode,
                        insertMode: this._core.coreService.modes.insertMode,
                        mouseTrackingMode: i,
                        originMode: o.origin,
                        reverseWraparoundMode: o.reverseWraparound,
                        sendFocusMode: o.sendFocus,
                        wraparoundMode: o.wraparound
                    }
                }
                get options() {
                    return this._publicOptions
                }
                set options(o) {
                    for (const i in o) this._publicOptions[i] = o[i]
                }
                blur() {
                    this._core.blur()
                }
                focus() {
                    this._core.focus()
                }
                input(o, i = !0) {
                    this._core.input(o, i)
                }
                resize(o, i) {
                    this._verifyIntegers(o, i), this._core.resize(o, i)
                }
                open(o) {
                    this._core.open(o)
                }
                attachCustomKeyEventHandler(o) {
                    this._core.attachCustomKeyEventHandler(o)
                }
                attachCustomWheelEventHandler(o) {
                    this._core.attachCustomWheelEventHandler(o)
                }
                registerLinkProvider(o) {
                    return this._core.registerLinkProvider(o)
                }
                registerCharacterJoiner(o) {
                    return this._checkProposedApi(), this._core.registerCharacterJoiner(o)
                }
                deregisterCharacterJoiner(o) {
                    this._checkProposedApi(), this._core.deregisterCharacterJoiner(o)
                }
                registerMarker(o = 0) {
                    return this._verifyIntegers(o), this._core.registerMarker(o)
                }
                registerDecoration(o) {
                    return this._checkProposedApi(), this._verifyPositiveIntegers(o.x ?? 0, o.width ?? 0, o.height ?? 0), this._core.registerDecoration(o)
                }
                hasSelection() {
                    return this._core.hasSelection()
                }
                select(o, i, l) {
                    this._verifyIntegers(o, i, l), this._core.select(o, i, l)
                }
                getSelection() {
                    return this._core.getSelection()
                }
                getSelectionPosition() {
                    return this._core.getSelectionPosition()
                }
                clearSelection() {
                    this._core.clearSelection()
                }
                selectAll() {
                    this._core.selectAll()
                }
                selectLines(o, i) {
                    this._verifyIntegers(o, i), this._core.selectLines(o, i)
                }
                dispose() {
                    super.dispose()
                }
                scrollLines(o) {
                    this._verifyIntegers(o), this._core.scrollLines(o)
                }
                scrollPages(o) {
                    this._verifyIntegers(o), this._core.scrollPages(o)
                }
                scrollToTop() {
                    this._core.scrollToTop()
                }
                scrollToBottom() {
                    this._core.scrollToBottom()
                }
                scrollToLine(o) {
                    this._verifyIntegers(o), this._core.scrollToLine(o)
                }
                clear() {
                    this._core.clear()
                }
                write(o, i) {
                    this._core.write(o, i)
                }
                writeln(o, i) {
                    this._core.write(o), this._core.write(`\r
`, i)
                }
                paste(o) {
                    this._core.paste(o)
                }
                refresh(o, i) {
                    this._verifyIntegers(o, i), this._core.refresh(o, i)
                }
                reset() {
                    this._core.reset()
                }
                clearTextureAtlas() {
                    this._core.clearTextureAtlas()
                }
                loadAddon(o) {
                    this._addonManager.loadAddon(this, o)
                }
                static get strings() {
                    return r
                }
                _verifyIntegers(...o) {
                    for (const i of o)
                        if (i === 1 / 0 || isNaN(i) || i % 1 != 0) throw new Error("This API only accepts integers")
                }
                _verifyPositiveIntegers(...o) {
                    for (const i of o)
                        if (i && (i === 1 / 0 || isNaN(i) || i % 1 != 0 || i < 0)) throw new Error("This API only accepts positive integers")
                }
            }
            C.Terminal = d
        })(), E
    })())
})(xterm);
var xtermExports = xterm.exports,
    addonFit = {
        exports: {}
    };
(function(w, t) {
    (function(p, f) {
        w.exports = f()
    })(self, () => (() => {
        var p = {};
        return (() => {
            var f = p;
            Object.defineProperty(f, "__esModule", {
                value: !0
            }), f.FitAddon = void 0, f.FitAddon = class {
                activate(R) {
                    this._terminal = R
                }
                dispose() {}
                fit() {
                    const R = this.proposeDimensions();
                    if (!R || !this._terminal || isNaN(R.cols) || isNaN(R.rows)) return;
                    const E = this._terminal._core;
                    this._terminal.rows === R.rows && this._terminal.cols === R.cols || (E._renderService.clear(), this._terminal.resize(R.cols, R.rows))
                }
                proposeDimensions() {
                    if (!this._terminal || !this._terminal.element || !this._terminal.element.parentElement) return;
                    const R = this._terminal._core,
                        E = R._renderService.dimensions;
                    if (E.css.cell.width === 0 || E.css.cell.height === 0) return;
                    const C = this._terminal.options.scrollback === 0 ? 0 : R.viewport.scrollBarWidth,
                        r = window.getComputedStyle(this._terminal.element.parentElement),
                        s = parseInt(r.getPropertyValue("height")),
                        c = Math.max(0, parseInt(r.getPropertyValue("width"))),
                        g = window.getComputedStyle(this._terminal.element),
                        u = s - (parseInt(g.getPropertyValue("padding-top")) + parseInt(g.getPropertyValue("padding-bottom"))),
                        _ = c - (parseInt(g.getPropertyValue("padding-right")) + parseInt(g.getPropertyValue("padding-left"))) - C;
                    return {
                        cols: Math.max(2, Math.floor(_ / E.css.cell.width)),
                        rows: Math.max(1, Math.floor(u / E.css.cell.height))
                    }
                }
            }
        })(), p
    })())
})(addonFit);
var addonFitExports = addonFit.exports;
const reline_compat = "data:application/octet-stream;base64,bW9kdWxlIFJlbGluZQoKICBjbGFzcyBVbmljb2RlCiAgICBkZWYgc2VsZi5jYWxjdWxhdGVfd2lkdGgoc3RyLCBhbGxvd19lc2NhcGVfY29kZSA9IGZhbHNlKQogICAgICBzdHIubGVuZ3RoCiAgICBlbmQKICBlbmQKZW5kCg==";
class KeyBuffer {
    constructor() {
        this.resolve = null, this.buffer = ""
    }
    async getc() {
        if (0 < this.buffer.length) {
            const t = this.buffer.charAt(0);
            return this.buffer = this.buffer.substr(1), t
        }
        return new Promise(t => {
            this.resolve = t
        })
    }
    readable() {
        return 0 < this.buffer.length
    }
    async block_until_readable() {
        if (!(0 < this.buffer.length)) return new Promise(t => {
            this.resolve = t
        })
    }
    async timeout(t) {
        return new Promise((p, f) => setTimeout(f, t))
    }
    async wait_readable(t) {
        return Promise.race([this.block_until_readable(), this.timeout(t * 1e3)])
    }
    ungetc(t) {
        this.buffer = t.concat(this.buffer)
    }
    getch() {
        if (0 < this.buffer.length) {
            const t = this.buffer.charAt(0);
            return this.buffer = this.buffer.substr(1), t
        } else return null
    }
    push(t) {
        if (this.resolve) {
            const p = this.resolve;
            this.resolve = null, p(t)
        } else this.resolve, this.buffer = this.buffer.concat(t)
    }
}

function makeXTermTerminal() {
    const w = new KeyBuffer,
        t = new xtermExports.Terminal({
            scrollback: 999999
        }),
        p = new addonFitExports.FitAddon;
    return t.loadAddon(p), t.open(document.getElementById("terminal")), t._initialized = !0, t.onKey(f => {
        const R = f.key.charCodeAt(0);
        ([3, 8, 9, 10, 13, 27].includes(R) || 31 < R) && w.push(f.key)
    }), t.onData(f => {
        const R = f.charCodeAt(0);
        ([3, 8, 9, 10, 13, 27].includes(R) || 31 < R) && w.push(f)
    }), t.attachCustomKeyEventHandler(f => {
        if (f.type === "keydown") {
            if ((f.ctrlKey && !f.metaKey || !f.ctrlKey && f.metaKey) && f.code === "KeyV") navigator.clipboard.readText().then(R => {
                w.push(""), [...R].forEach(E => w.push(E))
            });
            else if ((f.ctrlKey && !f.metaKey && f.shiftKey || !f.ctrlKey && f.metaKey) && f.code === "KeyC") {
                const R = document.execCommand("copy");
                console.log("Copy succeeded?:", R)
            }
        }
        return !0
    }), addEventListener("resize", f => {
        p.fit()
    }), p.fit(), addEventListener("wheel", f => {
        f.stopPropagation(), 0 < f.deltaY ? t.scrollLines(1) : t.scrollLines(-1)
    }), {
        term: t,
        keyBuffer: w,
        write(f) {
            t.write(f.replace(/\n/g, `\r
`))
        },
        set_prompt(f) {},
        startIRB(f) {
            f.evalAsync(`
            require "js"
            ap_path = __FILE__
            STDOUT.sync = true
            $0 = File::basename(ap_path, ".rb") if ap_path

            def require_remote(path)
                response = JS.global.fetch(path).await
                text = response.text.await
                Kernel.eval(text.to_s, TOPLEVEL_BINDING, path)
            end

            # This order works fine
            require_remote "${stdlib_compat}"
            require_remote "${rubygems_compat}"
            require_remote "${bundler_compat}"
            require "irb"
            require "stringio"
            require "js"
            require "reline"
            require_remote "${reline_compat}"

            # This is to avoid stack overflow when Reline tries
            # retrieving documentation at the first time
            require "rdoc/rdoc"

            class Term
                def self.echo(text)
                    JS.global.call("termEchoRaw", text)
                end
            end

            IRB.setup(ap_path)

            ENV["HOME"] = Dir.home # needed in reline/config.rb
            ENV["TERM"] = "screen-256color" # makes IRB::Color.colorable? true
            irb = IRB::Irb.new(nil, IRB::RelineInputMethod.new(IRB::RegexpCompletor.new))
            IRB.conf[:HISTORY_FILE] = File.join Dir.home, ".irb_history"
            irb.run(IRB.conf)
        `)
        }
    }
}
var addonWebLinks = {
    exports: {}
};
(function(w, t) {
    (function(p, f) {
        w.exports = f()
    })(self, () => (() => {
        var p = {
                6: (C, r) => {
                    function s(g) {
                        try {
                            const u = new URL(g),
                                _ = u.password && u.username ? `${u.protocol}//${u.username}:${u.password}@${u.host}` : u.username ? `${u.protocol}//${u.username}@${u.host}` : `${u.protocol}//${u.host}`;
                            return g.toLocaleLowerCase().startsWith(_.toLocaleLowerCase())
                        } catch {
                            return !1
                        }
                    }
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.LinkComputer = r.WebLinkProvider = void 0, r.WebLinkProvider = class {
                        constructor(g, u, _, v = {}) {
                            this._terminal = g, this._regex = u, this._handler = _, this._options = v
                        }
                        provideLinks(g, u) {
                            const _ = c.computeLink(g, this._regex, this._terminal, this._handler);
                            u(this._addCallbacks(_))
                        }
                        _addCallbacks(g) {
                            return g.map(u => (u.leave = this._options.leave, u.hover = (_, v) => {
                                if (this._options.hover) {
                                    const {
                                        range: D
                                    } = u;
                                    this._options.hover(_, v, D)
                                }
                            }, u))
                        }
                    };
                    class c {
                        static computeLink(u, _, v, D) {
                            const d = new RegExp(_.source, (_.flags || "") + "g"),
                                [a, o] = c._getWindowedLineStrings(u - 1, v),
                                i = a.join("");
                            let l;
                            const b = [];
                            for (; l = d.exec(i);) {
                                const A = l[0];
                                if (!s(A)) continue;
                                const [n, T] = c._mapStrIdx(v, o, 0, l.index), [S, L] = c._mapStrIdx(v, n, T, A.length);
                                if (n === -1 || T === -1 || S === -1 || L === -1) continue;
                                const z = {
                                    start: {
                                        x: T + 1,
                                        y: n + 1
                                    },
                                    end: {
                                        x: L,
                                        y: S + 1
                                    }
                                };
                                b.push({
                                    range: z,
                                    text: A,
                                    activate: D
                                })
                            }
                            return b
                        }
                        static _getWindowedLineStrings(u, _) {
                            let v, D = u,
                                d = u,
                                a = 0,
                                o = "";
                            const i = [];
                            if (v = _.buffer.active.getLine(u)) {
                                const l = v.translateToString(!0);
                                if (v.isWrapped && l[0] !== " ") {
                                    for (a = 0;
                                        (v = _.buffer.active.getLine(--D)) && a < 2048 && (o = v.translateToString(!0), a += o.length, i.push(o), v.isWrapped && o.indexOf(" ") === -1););
                                    i.reverse()
                                }
                                for (i.push(l), a = 0;
                                    (v = _.buffer.active.getLine(++d)) && v.isWrapped && a < 2048 && (o = v.translateToString(!0), a += o.length, i.push(o), o.indexOf(" ") === -1););
                            }
                            return [i, D]
                        }
                        static _mapStrIdx(u, _, v, D) {
                            const d = u.buffer.active,
                                a = d.getNullCell();
                            let o = v;
                            for (; D;) {
                                const i = d.getLine(_);
                                if (!i) return [-1, -1];
                                for (let l = o; l < i.length; ++l) {
                                    i.getCell(l, a);
                                    const b = a.getChars();
                                    if (a.getWidth() && (D -= b.length || 1, l === i.length - 1 && b === "")) {
                                        const A = d.getLine(_ + 1);
                                        A && A.isWrapped && (A.getCell(0, a), a.getWidth() === 2 && (D += 1))
                                    }
                                    if (D < 0) return [_, l]
                                }
                                _++, o = 0
                            }
                            return [_, o]
                        }
                    }
                    r.LinkComputer = c
                }
            },
            f = {};

        function R(C) {
            var r = f[C];
            if (r !== void 0) return r.exports;
            var s = f[C] = {
                exports: {}
            };
            return p[C](s, s.exports, R), s.exports
        }
        var E = {};
        return (() => {
            var C = E;
            Object.defineProperty(C, "__esModule", {
                value: !0
            }), C.WebLinksAddon = void 0;
            const r = R(6),
                s = /(https?|HTTPS?):[/]{2}[^\s"'!*(){}|\\\^<>`]*[^\s"':,.!?{}|\\\^~\[\]`()<>]/;

            function c(g, u) {
                const _ = window.open();
                if (_) {
                    try {
                        _.opener = null
                    } catch {}
                    _.location.href = u
                } else console.warn("Opening link blocked as opener could not be cleared")
            }
            C.WebLinksAddon = class {
                constructor(g = c, u = {}) {
                    this._handler = g, this._options = u
                }
                activate(g) {
                    this._terminal = g;
                    const u = this._options,
                        _ = u.urlRegex || s;
                    this._linkProvider = this._terminal.registerLinkProvider(new r.WebLinkProvider(this._terminal, _, this._handler, u))
                }
                dispose() {
                    var g;
                    (g = this._linkProvider) == null || g.dispose()
                }
            }
        })(), E
    })())
})(addonWebLinks);
var addonWebLinksExports = addonWebLinks.exports,
    xtermPty = {
        exports: {}
    };
(function(w, t) {
    (function(p, f) {
        w.exports = f()
    })(self, () => (() => {
        var p = {
                593: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.EventEmitter = void 0, r.EventEmitter = class {
                        constructor() {
                            this.listeners = new Set, this.register = this._register.bind(this)
                        }
                        _register(s) {
                            return this.listeners.add(s), {
                                dispose: () => {
                                    this.listeners.delete(s)
                                }
                            }
                        }
                        fire(s) {
                            for (const c of this.listeners) try {
                                c(s)
                            } catch (g) {
                                console.error(g)
                            }
                        }
                    }
                },
                287: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.LineDiscipline = void 0;
                    const c = s(918),
                        g = s(925),
                        u = s(593);
                    r.LineDiscipline = class {
                        constructor() {
                            this._onWriteToLower = new u.EventEmitter, this.onWriteToLower = this._onWriteToLower.register, this._onWriteToUpper = new u.EventEmitter, this.onWriteToUpper = this._onWriteToUpper.register, this._onSignalToUpper = new u.EventEmitter, this.onSignalToUpper = this._onSignalToUpper.register, this._onFlowActivated = new u.EventEmitter, this.onFlowActivated = this._onFlowActivated.register, this._onFlowDeactivated = new u.EventEmitter, this.onFlowDeactivated = this._onFlowDeactivated.register, this.T = g.defaultTermios, this.keyActions = new Array(256).fill("normal"), this.flowActivated = !0, this.column = 0, this.baseColumn = 0, this.vlnext = !1, this.echoprt = !1, this.toLowerBuf = [], this.toUpperBuf = [], this.termios = g.defaultTermios
                        }
                        activateFlow() {
                            this.flowActivated = !0, this._onFlowActivated.fire()
                        }
                        deactivateFlow() {
                            this.flowActivated = !1, this._onFlowDeactivated.fire()
                        }
                        get flow() {
                            return this.flowActivated
                        }
                        get termios() {
                            return this.T
                        }
                        set termios(_) {
                            this.T = _;
                            const v = new Array(256).fill("normal");
                            _.ICANON_P && (v[_.EOF_V] = "VEOF", v[_.EOL_V] = "VEOL", v[_.EOL2_V] = "VEOL", v[_.ERASE_V] = "VERASE", v[_.KILL_V] = "VKILL", _.IEXTEN_P && (v[_.REPRINT_V] = "VREPRINT", v[_.WERASE_V] = "VWERASE")), _.IEXTEN_P && (v[_.LNEXT_V] = "VLNEXT"), _.IXON_P && (v[_.START_V] = "VSTART", v[_.STOP_V] = "VSTOP"), _.ISIG_P && (v[_.INTR_V] = "VINTR", v[_.QUIT_V] = "VQUIT", v[_.SUSP_V] = "VSUSP"), v[0] = "normal", this.keyActions = v, this.T.IXON_P || (this.activateFlow(), this.flushToLower())
                        }
                        clearToLower() {
                            this.toLowerBuf.length = 0
                        }
                        flushToLower() {
                            this.flowActivated != 0 && (this._onWriteToLower.fire(this.toLowerBuf), this.clearToLower())
                        }
                        outputToLower(_) {
                            this.toLowerBuf.push(..._)
                        }
                        updateBaseColumn() {
                            this.toUpperBuf.length == 0 && (this.baseColumn = this.column)
                        }
                        clearToUpper() {
                            this.toUpperBuf.length = 0, this.updateBaseColumn()
                        }
                        flushToUpper() {
                            this._onWriteToUpper.fire(this.toUpperBuf), this.clearToUpper()
                        }
                        outputToUpper(_) {
                            this.toUpperBuf.push(_)
                        }
                        outputToLowerWithPostprocess(_) {
                            if (this.T.OPOST_P) switch (_) {
                                case c.BS:
                                    this.column > 0 && this.column--, this.outputToLower([c.BS]);
                                    break;
                                case c.TAB: {
                                    const v = 8 - this.column % 8;
                                    this.column += v, this.outputToLower(this.T.TABDLY_XTABS_P ? new Array(v).fill(c.SP) : [c.TAB]);
                                    break
                                }
                                case c.NL:
                                    this.T.ONLCR_P ? (this.baseColumn = this.column = 0, this.outputToLower([c.CR, c.NL])) : this.T.ONLRET_P ? (this.column = 0, this.outputToLower([c.NL])) : (this.baseColumn = this.column, this.outputToLower([c.NL]));
                                    break;
                                case c.CR:
                                    this.T.ONOCR_P && this.column == 0 || (this.T.OCRNL_P ? (this.T.ONLRET_P && (this.baseColumn = this.column = 0), this.outputToLower([c.NL])) : (this.baseColumn = this.column = 0, this.outputToLower([c.CR])));
                                    break;
                                default:
                                    this.T.IUTF8_P && (0, c.isUtf8ContinuationByte)(_) || this.column++, this.outputToLower(this.T.OLCUC_P ? [(0, c.toupper)(_)] : [_])
                            } else this.outputToLower([_])
                        }
                        echoToLower(_, v) {
                            typeof _ == "number" && (_ = [_]);
                            for (const D of _) this.T.ECHOCTL_P && (0, c.iscntrl)(D) && D != c.TAB && !v ? (this.outputToLower([94, 64 ^ D]), this.column += 2) : this.outputToLowerWithPostprocess(D)
                        }
                        inputFromLowerWithPreprocess(_) {
                            if (_ == c.CR) {
                                if (this.T.IGNCR_P) return;
                                this.T.ICRNL_P && (_ = c.NL)
                            } else _ == c.NL && this.T.INLCR_P && (_ = c.CR);
                            this.T.ICANON_P && _ == c.NL ? ((this.T.ECHO_P || this.T.ECHONL_P) && (this.echoToLower(c.NL, !0), this.flushToLower()), this.outputToUpper(c.NL), this.flushToUpper()) : this.T.ECHO_P ? (this.finishECHOPRT(), this.updateBaseColumn(), _ == c.NL ? this.echoToLower(c.NL, !0) : this.echoToLower(_), this.flushToLower(), this.outputToUpper(_)) : this.outputToUpper(_)
                        }
                        erase(_) {
                            if (this.toUpperBuf.length == 0) return;
                            if (_ == "VKILL") {
                                if (!this.T.ECHO_P) return void this.clearToUpper();
                                if (!this.T.ECHOK_P || !this.T.ECHOKE_P || !this.T.ECHOE_P) return this.clearToUpper(), this.finishECHOPRT(), this.echoToLower(this.T.KILL_V), void(this.T.ECHOK_P && this.echoToLower(c.NL, !0))
                            }
                            let v = !1;
                            for (let D = this.toUpperBuf.length - 1; D >= 0; D--) {
                                const d = this.toUpperBuf[D];
                                if (this.T.IUTF8_P && (0, c.isUtf8ContinuationByte)(d)) continue;
                                if (_ == "VWERASE") {
                                    if ((0, c.isalnum)(d) || d == 95) v = !0;
                                    else if (v) break
                                }
                                const a = this.toUpperBuf.splice(D);
                                if (this.T.ECHO_P)
                                    if (this.T.ECHOPRT_P) this.startECHOPRT(), this.echoToLower(a);
                                    else if (_ != "VERASE" || this.T.ECHOE_P)
                                    if (d == c.TAB) {
                                        let o = 0,
                                            i = !1;
                                        for (let l = this.toUpperBuf.length - 1; l >= 0; l--) {
                                            const b = this.toUpperBuf[l];
                                            if (b == c.TAB) {
                                                i = !0;
                                                break
                                            }(0, c.iscntrl)(b) ? this.T.ECHOCTL_P && (o += 2): this.T.IUTF8_P && (0, c.isUtf8ContinuationByte)(b) || o++
                                        }
                                        i || (o += this.baseColumn), o = 8 - o % 8, this.outputToLower(new Array(o).fill(c.BS)), this.column = Math.max(0, this.column - o)
                                    } else(0, c.iscntrl)(d) && this.T.ECHOCTL_P && this.echoToLower([c.BS, c.SP, c.BS], !0), (0, c.iscntrl)(d) && !this.T.ECHOCTL_P || this.echoToLower([c.BS, c.SP, c.BS], !0);
                                else this.echoToLower(this.T.ERASE_V);
                                if (_ == "VERASE") break
                            }
                            this.toUpperBuf.length == 0 && (this.clearToUpper(), this.T.ECHO_P && this.finishECHOPRT())
                        }
                        startECHOPRT() {
                            this.echoprt || (this.echoToLower(92, !0), this.echoprt = !0)
                        }
                        finishECHOPRT() {
                            this.echoprt && (this.echoToLower(47, !0), this.echoprt = !1)
                        }
                        signal(_, v) {
                            this._onSignalToUpper.fire(_), this.T.NOFLSH_P || (this.clearToLower(), this.clearToUpper()), this.T.IXON_P && this.activateFlow(), this.T.ECHO_P && this.echoToLower(v), this.flushToLower()
                        }
                        checkStartFlow() {
                            this.flowActivated == 0 && this.T.IXON_P && this.T.IXANY_P && (this.activateFlow(), this.flushToLower())
                        }
                        nextLiteral() {
                            this.vlnext = !0, this.T.ECHO_P && (this.finishECHOPRT(), this.T.ECHOCTL_P && (this.echoToLower([94, c.BS], !0), this.flushToLower()))
                        }
                        reprint() {
                            this.finishECHOPRT(), this.echoToLower(this.T.REPRINT_V), this.echoToLower(c.NL, !0), this.echoToLower(this.toUpperBuf)
                        }
                        writeFromLower(_) {
                            const v = typeof _ == "string" ? (0, c.stringToUtf8Bytes)(_) : _;
                            for (let D of v) {
                                this.T.ISTRIP_P && (D &= 127), this.T.IUCLC_P && this.T.IEXTEN_P && (D = (0, c.tolower)(D));
                                const d = this.vlnext ? "normal" : this.keyActions[D];
                                switch (this.vlnext = !1, d) {
                                    case "normal":
                                        this.checkStartFlow(), this.inputFromLowerWithPreprocess(D);
                                        break;
                                    case "VERASE":
                                    case "VWERASE":
                                    case "VKILL":
                                        this.checkStartFlow(), this.erase(d), this.flushToLower();
                                        break;
                                    case "VEOF":
                                        this.checkStartFlow(), this.flushToUpper();
                                        break;
                                    case "VEOL":
                                        this.checkStartFlow(), this.T.ECHO_P && (this.echoToLower(D), this.flushToLower()), this.outputToUpper(D), this.flushToUpper();
                                        break;
                                    case "VLNEXT":
                                        this.checkStartFlow(), this.nextLiteral();
                                        break;
                                    case "VREPRINT":
                                        this.checkStartFlow(), this.reprint(), this.flushToLower();
                                        break;
                                    case "VSTART":
                                        this.activateFlow(), this.flushToLower();
                                        break;
                                    case "VSTOP":
                                        this.deactivateFlow();
                                        break;
                                    case "VINTR":
                                        this.signal("SIGINT", D);
                                        break;
                                    case "VQUIT":
                                        this.signal("SIGQUIT", D);
                                        break;
                                    case "VSUSP":
                                        this.signal("SIGTSTP", D)
                                }
                            }
                            this.T.ICANON_P || this.flushToUpper()
                        }
                        writeFromUpper(_) {
                            if (this.flowActivated == 0) throw "Do not write anything during flowStatus is stopped";
                            const v = typeof _ == "string" ? (0, c.stringToUtf8Bytes)(_) : _;
                            for (const D of v) this.outputToLowerWithPostprocess(D);
                            this.flushToLower()
                        }
                    }
                },
                836: (C, r, s) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.openpty = r.Slave = void 0;
                    const c = s(593),
                        g = s(287),
                        u = s(925),
                        _ = s(918);
                    class v {
                        constructor(a, o) {
                            this.ldisc = a, this.slave = o, this.disposables = [], this._onWrite = new c.EventEmitter, this.onWrite = this._onWrite.register, this.fromLdiscToLowerBuffer = [], this.waitingForLower = !1;
                            const i = () => {
                                if (this.fromLdiscToLowerBuffer.length >= 1) {
                                    this.waitingForLower = !0;
                                    const A = new Uint8Array(this.fromLdiscToLowerBuffer.splice(0, 4096));
                                    this.fromLdiscToLowerBuffer.length <= 4096 && this.notifyWritable(), this._onWrite.fire([A, i])
                                } else this.waitingForLower = !1
                            };
                            this.ldisc.onWriteToLower(A => {
                                this.fromLdiscToLowerBuffer.push(...A), this.waitingForLower || i()
                            });
                            const {
                                notifyWritable: l,
                                notifyResize: b
                            } = o.initFromMaster();
                            this.notifyWritable = l, this.notifyResize = b
                        }
                        activate(a) {
                            this.onWrite(([i, l]) => a.write(i, l));
                            const o = i => this.ldisc.writeFromLower(i);
                            this.disposables.push(a.onData(o), a.onBinary(o), a.onResize(({
                                cols: i,
                                rows: l
                            }) => this.notifyResize(l, i)))
                        }
                        dispose() {
                            this.disposables.forEach(a => a.dispose()), this.disposables.length = 0
                        }
                    }
                    class D {
                        constructor(a) {
                            this.ldisc = a, this._onReadable = new c.EventEmitter, this.onReadable = this._onReadable.register, this._onWritable = new c.EventEmitter, this.onWritable = this._onWritable.register, this._onSignal = new c.EventEmitter, this.onSignal = this._onSignal.register, this.fromLdiscToUpperBuffer = [], this.fromUpperToLdiscBuffer = [], this.winsize = [80, 24], this.ldisc.onWriteToUpper(o => {
                                this.fromLdiscToUpperBuffer.push(...o), this._onReadable.fire()
                            }), this.ldisc.onFlowActivated(() => {
                                this.fromUpperToLdiscBuffer.length >= 1 && (this.ldisc.writeFromUpper(this.fromUpperToLdiscBuffer), this.fromUpperToLdiscBuffer.length = 0)
                            }), this.ldisc.onSignalToUpper(o => {
                                this._onSignal.fire(o)
                            })
                        }
                        initFromMaster() {
                            return {
                                notifyWritable: () => this._onWritable.fire(),
                                notifyResize: (a, o) => {
                                    this.winsize = [o, a], this._onSignal.fire("SIGWINCH")
                                }
                            }
                        }
                        get readable() {
                            return this.fromLdiscToUpperBuffer.length >= 1
                        }
                        read(a) {
                            const o = a !== void 0 ? Math.min(this.fromLdiscToUpperBuffer.length, a) : this.fromLdiscToUpperBuffer.length;
                            return this.fromLdiscToUpperBuffer.splice(0, o)
                        }
                        get writable() {
                            return this.fromUpperToLdiscBuffer.length <= 4096
                        }
                        write(a) {
                            const o = typeof a == "string" ? (0, _.stringToUtf8Bytes)(a) : a;
                            this.fromUpperToLdiscBuffer = this.fromUpperToLdiscBuffer.concat(o), this.ldisc.flow && (this.ldisc.writeFromUpper(this.fromUpperToLdiscBuffer), this.fromUpperToLdiscBuffer.length = 0)
                        }
                        ioctl(a, o) {
                            switch (a) {
                                case "TCGETS":
                                    return this.ldisc.termios.clone();
                                case "TCSETS":
                                    return void(this.ldisc.termios = u.Termios.fromConfig(o));
                                case "TIOCGWINSZ":
                                    return this.winsize.slice()
                            }
                        }
                    }
                    r.Slave = D, r.openpty = () => {
                        const d = new g.LineDiscipline,
                            a = new D(d);
                        return {
                            master: new v(d, a),
                            slave: a
                        }
                    }
                },
                925: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.defaultTermios = r.Termios = void 0;
                    class s {
                        constructor(g, u, _, v, D) {
                            this.iflag = g, this.oflag = u, this.cflag = _, this.lflag = v, this.cc = D, this.ISTRIP_P = (32 & this.iflag) != 0, this.INLCR_P = (64 & this.iflag) != 0, this.IGNCR_P = (128 & this.iflag) != 0, this.ICRNL_P = (256 & this.iflag) != 0, this.IUCLC_P = (512 & this.iflag) != 0, this.IXON_P = (1024 & this.iflag) != 0, this.IXANY_P = (2048 & this.iflag) != 0, this.IUTF8_P = (16384 & this.iflag) != 0, this.OPOST_P = (1 & this.oflag) != 0, this.OLCUC_P = (2 & this.oflag) != 0, this.ONLCR_P = (4 & this.oflag) != 0, this.OCRNL_P = (8 & this.oflag) != 0, this.ONOCR_P = (16 & this.oflag) != 0, this.ONLRET_P = (32 & this.oflag) != 0, this.TABDLY_XTABS_P = (6144 & this.oflag) == 6144, this.ISIG_P = (1 & this.lflag) != 0, this.ICANON_P = (2 & this.lflag) != 0, this.ECHO_P = (8 & this.lflag) != 0, this.ECHOE_P = (16 & this.lflag) != 0, this.ECHOK_P = (32 & this.lflag) != 0, this.ECHONL_P = (64 & this.lflag) != 0, this.NOFLSH_P = (128 & this.lflag) != 0, this.ECHOCTL_P = (512 & this.lflag) != 0, this.ECHOPRT_P = (1024 & this.lflag) != 0, this.ECHOKE_P = (2048 & this.lflag) != 0, this.IEXTEN_P = (32768 & this.lflag) != 0, this.INTR_V = this.cc[0], this.QUIT_V = this.cc[1], this.ERASE_V = this.cc[2], this.KILL_V = this.cc[3], this.EOF_V = this.cc[4], this.TIME_V = this.cc[5], this.MIN_V = this.cc[6], this.SWTCH_V = this.cc[7], this.START_V = this.cc[8], this.STOP_V = this.cc[9], this.SUSP_V = this.cc[10], this.EOL_V = this.cc[11], this.REPRINT_V = this.cc[12], this.DISCARD_V = this.cc[13], this.WERASE_V = this.cc[14], this.LNEXT_V = this.cc[15], this.EOL2_V = this.cc[16]
                        }
                        static fromConfig(g) {
                            return new s(g.iflag, g.oflag, g.cflag, g.lflag, g.cc)
                        }
                        clone() {
                            return s.fromConfig(this)
                        }
                    }
                    r.Termios = s, r.defaultTermios = new s(25856, 5, 191, 35387, [3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
                },
                918: (C, r) => {
                    Object.defineProperty(r, "__esModule", {
                        value: !0
                    }), r.stringToUtf8Bytes = r.toupper = r.tolower = r.isUtf8ContinuationByte = r.iscntrl = r.isalnum = r.SP = r.CR = r.NL = r.TAB = r.BS = void 0, r.BS = 8, r.TAB = 9, r.NL = 10, r.CR = 13, r.SP = 32, r.isalnum = c => 48 <= c && c <= 57 || 65 <= c && c <= 90 || c == 95 || 97 <= c && c <= 122, r.iscntrl = c => 0 <= c && c <= 31 && c != 9 || c == 127, r.isUtf8ContinuationByte = c => (192 & c) == 128, r.tolower = c => 65 <= c && c <= 90 ? c + 32 : c, r.toupper = c => 97 <= c && c <= 122 ? c - 32 : c;
                    const s = new TextEncoder;
                    r.stringToUtf8Bytes = c => Array.from(s.encode(c))
                }
            },
            f = {};

        function R(C) {
            var r = f[C];
            if (r !== void 0) return r.exports;
            var s = f[C] = {
                exports: {}
            };
            return p[C](s, s.exports, R), s.exports
        }
        var E = {};
        return (() => {
            var C = E;
            Object.defineProperty(C, "__esModule", {
                value: !0
            }), C.openpty = void 0;
            var r = R(836);
            Object.defineProperty(C, "openpty", {
                enumerable: !0,
                get: function() {
                    return r.openpty
                }
            })
        })(), E
    })())
})(xtermPty);
var xtermPtyExports = xtermPty.exports;
const main_rb = "data:application/octet-stream;base64,cmVxdWlyZSAianMiCiMgaW8gc2hpbQpjbGFzcyBJTwogIEBAdW5nZXRjX2J1ZiA9IFtdCgogIGFsaWFzIGdldGJ5dGVfb3JpZyBnZXRieXRlCiAgZGVmIGdldGJ5dGUKICAgIGlmIHRvX2kgPT0gMAogICAgICByZXR1cm4gQEB1bmdldGNfYnVmLnBvcC5vcmQgaWYgIUBAdW5nZXRjX2J1Zi5lbXB0eT8KICAgICAgYyA9IEpTRnVuY3NbOmdldEJ5dGVdLmFwcGx5KCkuYXdhaXQKICAgICAgcmV0dXJuIGMgPT0gSlM6Ok51bGwgPyBuaWwgOiBjLnRvX2kKICAgIGVuZAogICAgZ2V0Ynl0ZV9vcmlnCiAgZW5kCgogIGFsaWFzIGdldGNfb3JpZyBnZXRjCiAgZGVmIGdldGMKICAgIGlmIHRvX2kgPT0gMAogICAgICByZXR1cm4gQEB1bmdldGNfYnVmLnBvcC5jaHIgaWYgIUBAdW5nZXRjX2J1Zi5lbXB0eT8KICAgICAgcmV0dXJuIGdldGJ5dGUmLmNocgogICAgZW5kCiAgICBnZXRjX29yaWcKICBlbmQKCiAgYWxpYXMgcmVhZF9ub25ibG9ja19vcmlnIHJlYWRfbm9uYmxvY2sKICBkZWYgcmVhZF9ub25ibG9jayhzaXplLCBvdXRidWYgPSBuaWwsIGV4Y2VwdGlvbjogdHJ1ZSkKICAgIGlmIHRvX2kgPT0gMAogICAgICBpZiBAQHVuZ2V0Y19idWYuZW1wdHk/CiAgICAgICAgYiA9IG5pbAogICAgICBlbHNlCiAgICAgICAgIyBYWFg6IFRoaXMgbWlnaHQgcmV0dXJuIGEgYnVmZmVyIGxhcmdlciB0aGFuIHRoZSBzcGVjaWZpZWQgc2l6ZSwKICAgICAgICAjIGJ1dCBJIGJlbGlldmUgaXQncyBPSyA7LVAKICAgICAgICBiID0gQEB1bmdldGNfYnVmLnJldmVyc2Uuam9pbgogICAgICAgIEBAdW5nZXRjX2J1Zi5jbGVhcgogICAgICBlbmQKICAgICAgcyA9IEpTRnVuY3NbOnJlYWROb25ibG9ja10uYXBwbHkoc2l6ZSkuYXdhaXQKICAgICAgcmV0dXJuIGIgaWYgcyA9PSBKUzo6TnVsbAogICAgICBzID0gcy50b19zCiAgICAgIHMgPSBvdXRidWYucmVwbGFjZShzKSBpZiBvdXRidWYKICAgICAgcyA9IGIgKyBzIGlmIGIKICAgICAgcmV0dXJuIHMKICAgIGVuZAogICAgcmVhZF9ub25ibG9ja19vcmlnKHNpemUsIG91dGJ1ZiwgZXhjZXB0aW9uOikKICBlbmQKCiAgYWxpYXMgcmVhZHBhcnRpYWxfb3JpZyByZWFkcGFydGlhbAogIGRlZiByZWFkcGFydGlhbChuKQogICAgaWYgdG9faSA9PSAwCiAgICAgIGMgPSBnZXRjCiAgICAgIHMgPSByZWFkX25vbmJsb2NrKG4gLSAxKQogICAgICBzID0gcyA/IGMgKyBzIDogYwogICAgICByZXR1cm4gcwogICAgZW5kCiAgICByZWFkcGFydGlhbF9vcmlnKG4pCiAgZW5kCgogIGFsaWFzIHVuZ2V0Y19vcmlnIHVuZ2V0YwogIGRlZiB1bmdldGMobikKICAgIGlmIHRvX2kgPT0gMAogICAgICBAQHVuZ2V0Y19idWYgPDwgbi5jaHIKICAgICAgcmV0dXJuIG5pbAogICAgZW5kCiAgICB1bmdldGNfb3JpZyhuKQogIGVuZAplbmQKCiMgaW8vY29uc29sZSBzaGltCmNsYXNzIElPCiAgZGVmIHdpbnNpemUKICAgIEpTRnVuY3NbOndpbnNpemVdLmFwcGx5KCkudG9fYS5tYXAge3xufCBuLnRvX2kgfS5yZXZlcnNlCiAgZW5kCgogIGRlZiByYXcobWluOiAxLCB0aW1lOiAwLCBpbnRyOiBmYWxzZSkKICAgIHJhaXNlIE5vdEltcGxlbWVudGVkRXJyb3IgaWYgdGltZSAhPSAwCiAgICBiZWdpbgogICAgICBvbGRfdGVybWlvcyA9IEpTRnVuY3NbOnNldFJhd10uYXBwbHkobWluLCBpbnRyKQogICAgICB5aWVsZCBzZWxmCiAgICBlbnN1cmUKICAgICAgSlNGdW5jc1s6c2V0VGVybWlvc10uYXBwbHkob2xkX3Rlcm1pb3MpCiAgICBlbmQKICBlbmQKCiAgZGVmIGNvb2tlZAogICAgYmVnaW4KICAgICAgb2xkX3Rlcm1pb3MgPSBKU0Z1bmNzWzpzZXRDb29rZWRdLmFwcGx5KCkKICAgICAgeWllbGQgc2VsZgogICAgZW5zdXJlCiAgICAgIEpTRnVuY3NbOnNldFRlcm1pb3NdLmFwcGx5KG9sZF90ZXJtaW9zKQogICAgZW5kCiAgZW5kCgogIGRlZiB0dHk/CiAgICBjYXNlIHRvX2kKICAgIHdoZW4gMCwgMSwgMjsgdHJ1ZQogICAgZWxzZSBmYWxzZQogICAgZW5kCiAgZW5kCmVuZAoKIyBpby93YWl0IHNoaW0KY2xhc3MgSU8KICBkZWYgd2FpdF9yZWFkYWJsZSh0aW1lb3V0KQogICAgSlNGdW5jc1s6d2FpdFJlYWRhYmxlXS5hcHBseSh0aW1lb3V0KS5hd2FpdCAhPSBKUzo6RmFsc2UgPyBzZWxmIDogbmlsCiAgZW5kCmVuZAoKIyBLZXJuZWwjc2xlZXAgc2hpbQptb2R1bGUgS2VybmVsCiAgZGVmIHNsZWVwKGR1cmF0aW9uID0gbmlsKQogICAgSlNGdW5jc1s6c2xlZXBdLmFwcGx5KGR1cmF0aW9uKS5hd2FpdAogICAgbmlsCiAgZW5kCmVuZAoKIyBFTlZbIkhPTUUiXSA9ICIvIiAjIEhhY2sgdG8gcGFzcyBgRmlsZS5leHBhbmRfcGF0aCgifi8iKWAKRU5WWyJURVJNIl0gPSAieHRlcm0tMjU2Y29sb3IiCgpyZXF1aXJlICJpcmIiCgojIEEgd29ya2Fyb3VuZCB0byBza2lwIHBlcm1pc3Npb24gY2hlY2sKIyBiZWNhdXNlIEBiam9ybjMvYnJvd3Nlcl93YXNpX3NoaW0gZG9lcyBub3QgaW1wbGVtZW50IHBlcm1pc3Npb25zCm1vZHVsZSBJUkIKICBtb2R1bGUgSGlzdG9yeVNhdmluZ0FiaWxpdHkKICAgIGRlZiBlbnN1cmVfaGlzdG9yeV9maWxlX3dyaXRhYmxlKF8pCiAgICAgIHRydWUKICAgIGVuZAogIGVuZAplbmQKCiMgUnVuIGlyYgpJUkIuc2V0dXAobmlsLCBhcmd2OiBbJy0tbm8tcGFnZXInXSkKSVJCOjpJcmIubmV3LnJ1bgo=",
    setupTerminal = () => {
        const w = document.getElementById("terminal"),
            t = new xtermExports.Terminal;
        t.open(w);
        const {
            master: p,
            slave: f
        } = xtermPtyExports.openpty();
        t.loadAddon(p);
        const R = new addonFitExports.FitAddon;
        return t.loadAddon(R), new ResizeObserver(() => R.fit()).observe(w), R.fit(), t.loadAddon(new addonWebLinksExports.WebLinksAddon), f
    };

function makeXtermPtyTerminal() {
    const w = setupTerminal(),
        t = f => new Promise(R => {
            setTimeout(() => R(!1), f * 1e3)
        }),
        p = () => new Promise(f => {
            const R = w.onReadable(() => {
                R.dispose(), f(!0)
            })
        });
    return {
        write(f) {
            w.write(f)
        },
        set_prompt(f) {
            w.write(`\r\x1B[K\r${f}\r`)
        },
        async startIRB(f) {
            f.eval("-> js_funcs { JSFuncs = js_funcs }").call("call", f.wrap({
                winsize: () => w.ioctl("TIOCGWINSZ"),
                setRaw: (E, C) => {
                    const r = w.ioctl("TCGETS"),
                        s = JSON.parse(JSON.stringify(r));
                    return s.lflag &= -32892, s.iflag &= -11745, s.oflag &= -2, s.cc[6] = E, C && (s.lflag |= 1, s.oflag |= 1), w.ioctl("TCSETS", s), r
                },
                setCooked: () => {
                    const E = w.ioctl("TCGETS"),
                        C = JSON.parse(JSON.stringify(E));
                    return C.iflag |= 1312, C.oflag |= 1, C.lflag |= 32891, w.ioctl("TCSETS", C), E
                },
                setTermios: E => {
                    w.ioctl("TCSETS", E)
                },
                waitReadable: async E => w.readable ? !0 : E == 0 ? !1 : await Promise.race([t(E), p()]),
                getByte: async () => w.readable ? w.read(1)[0] : w.ioctl("TCGETS").cc[6] ? (await p(), w.readable ? w.read(1)[0] : null) : null,
                readNonblock: async E => w.readable ? new TextDecoder().decode(new Uint8Array(w.read(E))) : null,
                sleep: async E => {
                    await t(E)
                }
            })), w.onSignal(E => f.eval(`Process.kill(:${E}, $$)`));
            const R = await fetch(main_rb);
            f.evalAsync(await R.text())
        }
    }
}
const irb_3_3_wasm = "ruby.debug_stdlib-7zd09ID1.wasm",
    irb_3_4_wasm = "ruby.debug_stdlib-DcjE6cAu.wasm",
    irb_head_wasm = "ruby.debug_stdlib.wasm"; // "ruby.debug_stdlib-Cm8Hglg-.wasm";

function makeTerminal(w) {
    const t = new URLSearchParams(window.location.search),
        p = {
            "3.3": "jquery-terminal"
        } [w] || "xterm-pty",
        f = t.get("FEATURE_TERMINAL") || p,
        R = {
            xterm: makeXTermTerminal,
            "xterm-pty": makeXtermPtyTerminal,
            "jquery-terminal": makeJQueryTerminal
        };
    return R[f] ? R[f]() : R[p]()
}
const rubyVersions = {
        //"3.3": irb_3_3_wasm,
        //"3.4": irb_3_4_wasm,
        head: irb_head_wasm
    },
    defaultRubyVersion = "head";

function deriveCurrentRubyVersion() {
    const t = new URLSearchParams(window.location.search).get("RUBY_VERSION") || defaultRubyVersion;
    return rubyVersions[t] ? {
        version: t,
        url: rubyVersions[t]
    } : {
        version: defaultRubyVersion,
        url: rubyVersions[defaultRubyVersion]
    }
}
async function init() {
    const w = deriveCurrentRubyVersion(),
        t = document.getElementById("ruby-version");
    t.appendChild((() => {
        const R = document.createElement("option");
        return R.value = "", R.text = "Select Ruby version", R.disabled = !0, R
    })());
    for (const R of Object.keys(rubyVersions).sort()) {
        const E = document.createElement("option");
        E.value = R, E.text = R, t.appendChild(E)
    }
    if (t.value = w.version, t.addEventListener("change", () => {
            const R = t.value;
            if (R) {
                const E = new URLSearchParams(window.location.search);
                E.set("RUBY_VERSION", R), window.location.search = E.toString()
            }
        }), visualViewport) {
        const R = visualViewport,
            E = () => {
                var C;
                document.documentElement.style.setProperty("--visual-viewport-height", `${R.height}px`), (C = globalThis.fitAddon) == null || C.fit()
            };
        R.addEventListener("resize", E), E()
    } else document.documentElement.style.setProperty("--visual-viewport-height", "100vh");
    document.addEventListener("touchmove", R => R.preventDefault(), {
        passive: !1
    });
    const p = new IRB,
        f = makeTerminal(w.version);
    window.irbWorker = p, window.term = f, window.termEchoRaw = R => {
        f.write(R)
    }, await p.init(f, w), p.start(), setInterval(() => {
        p.snapshotHomeDir()
    }, 5e3)
}
init();